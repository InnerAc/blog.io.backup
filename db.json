{"meta":{"version":1,"warehouse":"1.0.2"},"models":{"Asset":[{"_id":"source/favicon.png","path":"favicon.png","modified":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":0},{"_id":"themes/yilia/source/js/pc.js","path":"js/pc.js","modified":0},{"_id":"themes/yilia/source/js/mobile.js","path":"js/mobile.js","modified":0},{"_id":"themes/yilia/source/js/main.js","path":"js/main.js","modified":0},{"_id":"themes/yilia/source/js/jquery.lazyload.js","path":"js/jquery.lazyload.js","modified":0},{"_id":"themes/yilia/source/js/instagram.js","path":"js/instagram.js","modified":0},{"_id":"themes/yilia/source/img/zhihu.png","path":"img/zhihu.png","modified":0},{"_id":"themes/yilia/source/img/weibo.png","path":"img/weibo.png","modified":0},{"_id":"themes/yilia/source/img/twitter.png","path":"img/twitter.png","modified":0},{"_id":"themes/yilia/source/img/stackoverflow.png","path":"img/stackoverflow.png","modified":0},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":0},{"_id":"themes/yilia/source/img/rss.png","path":"img/rss.png","modified":0},{"_id":"themes/yilia/source/img/pinterest.png","path":"img/pinterest.png","modified":0},{"_id":"themes/yilia/source/img/pinboard.png","path":"img/pinboard.png","modified":0},{"_id":"themes/yilia/source/img/mail.png","path":"img/mail.png","modified":0},{"_id":"themes/yilia/source/img/linkedin.png","path":"img/linkedin.png","modified":0},{"_id":"themes/yilia/source/img/img-loading.png","path":"img/img-loading.png","modified":0},{"_id":"themes/yilia/source/img/img-err.png","path":"img/img-err.png","modified":0},{"_id":"themes/yilia/source/img/google.png","path":"img/google.png","modified":0},{"_id":"themes/yilia/source/img/github.png","path":"img/github.png","modified":0},{"_id":"themes/yilia/source/img/facebook.png","path":"img/facebook.png","modified":0},{"_id":"themes/yilia/source/img/douban.png","path":"img/douban.png","modified":0},{"_id":"themes/yilia/source/img/delicious.png","path":"img/delicious.png","modified":0},{"_id":"themes/yilia/source/img/coderwall.png","path":"img/coderwall.png","modified":0},{"_id":"themes/yilia/source/favicon.png","path":"favicon.png","modified":0},{"_id":"themes/yilia/source/favicon.ico","path":"favicon.ico","modified":0},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0},{"_id":"themes/yilia/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0},{"_id":"themes/yilia/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0},{"_id":"themes/yilia/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0},{"_id":"themes/yilia/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0},{"_id":"themes/yilia/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0},{"_id":"themes/yilia/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0},{"_id":"themes/yilia/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0},{"_id":"themes/yilia/source/css/style.styl","path":"css/style.styl","modified":0},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svgz","path":"css/fonts/fontawesome-webfont.svgz","modified":0},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0},{"_id":"themes/yilia/source/ava.png","path":"ava.png","modified":0}],"Cache":[{"_id":"source/_posts/1.md","shasum":"6ef6f8b57eff176229e73cda0690557205cbf1d8","modified":1452240571000},{"_id":"source/_posts/10.md","shasum":"759dd2a661d30c72258280b705bb39de12205100","modified":1452240571000},{"_id":"source/_posts/11.md","shasum":"09164aec3e2ba3d15b994c148615fb426736c186","modified":1452240571000},{"_id":"source/_posts/12.md","shasum":"7f1adfd4cc4e3d7d15644972a913248f0b4251ef","modified":1452240571000},{"_id":"source/_posts/13.md","shasum":"575f440384e6928feabe0ac266295e8774dfc6a2","modified":1452240571000},{"_id":"source/_posts/14.md","shasum":"c9d5279de75e70c44ed563d44151ec664a521147","modified":1452240571000},{"_id":"source/_posts/15.md","shasum":"d2f4697465c6bd2c3be27482d91a893411900cae","modified":1452240571000},{"_id":"source/_posts/16.md","shasum":"aa2db55368bcb6dda180492da70f268d7cd3f4bf","modified":1452240571000},{"_id":"source/_posts/17.md","shasum":"b0fe6f90baba8029eed4b414fc9e72cafee8e135","modified":1452240571000},{"_id":"source/_posts/18.md","shasum":"491778c3384bf17f3e642d989a5a85c646b273ce","modified":1452240571000},{"_id":"source/_posts/19.md","shasum":"19981951815594f3c334869c46c56a54eb5d3871","modified":1452240571000},{"_id":"source/_posts/2.md","shasum":"39b3c570095fa3599c166554b12a161488f78c1d","modified":1452240571000},{"_id":"source/_posts/20.md","shasum":"93eb9ab3b31009554164e67aa80512ef19cf8007","modified":1452240571000},{"_id":"source/_posts/21.md","shasum":"f2f50cc041bb45555764b6fefbe1ca31123b8aa2","modified":1452240571000},{"_id":"source/_posts/22.md","shasum":"0a35abaf12d3c1a7a4c2cb5efe12815b1b85d213","modified":1452240571000},{"_id":"source/_posts/23.md","shasum":"c6a80fd696ad51a04f40ba6fdaee02aaec7e51af","modified":1452240571000},{"_id":"source/_posts/24.md","shasum":"c474cf4b5cf3bd99b6349921e9e0c201e98e8836","modified":1452240571000},{"_id":"source/_posts/25.md","shasum":"baf6b370464322b78f149fb9b6b287451c397a76","modified":1452240571000},{"_id":"source/_posts/26.md","shasum":"3d9889bc4076c7c1446475770bc72da2b058aac2","modified":1452240571000},{"_id":"source/_posts/27.md","shasum":"9b0b2e0d41005de81a10aadf50ed81758236e0dd","modified":1452240571000},{"_id":"source/_posts/27.md~","shasum":"9b0b2e0d41005de81a10aadf50ed81758236e0dd","modified":1452240571000},{"_id":"source/_posts/28.md","shasum":"5aa2d305d0611cf5b02fa0f91c4daa5970eab87e","modified":1452240571000},{"_id":"source/_posts/29.md","shasum":"bbf298c1283cf6cf79818b15a5858e5f1f7e87e6","modified":1452240571000},{"_id":"source/_posts/3.md","shasum":"9585aa543c4d777ea6dcc4209e3f15e2480c864d","modified":1452240571000},{"_id":"source/_posts/30.md","shasum":"c8474feb59a5a507c0e8417bff47d937fb2e7870","modified":1452240571000},{"_id":"source/_posts/31.md","shasum":"2ec243eac3d18a363ec89debec625739d8b1ee66","modified":1452240571000},{"_id":"source/_posts/32.md","shasum":"bb5df7f87bc1d54f18fc11024a2b0a83fc529419","modified":1452240571000},{"_id":"source/_posts/33.md","shasum":"aecf26c389a95bc38301c0644dfedc1132bbad60","modified":1452240571000},{"_id":"source/_posts/34.md","shasum":"b45fddcdf630805b54c65ac2d74b44a8b8f6ac09","modified":1452240571000},{"_id":"source/_posts/35.md","shasum":"a51409e8ebafc2947f1a8649fa1b92ae9f016fd8","modified":1452240571000},{"_id":"source/_posts/36.md","shasum":"f79ec0c9a16ec1c6019e9ae939df94cdb3c605d7","modified":1452240571000},{"_id":"source/_posts/37.md","shasum":"139dade3cdb8df72b2184fa76102c919f15cf177","modified":1452240571000},{"_id":"source/_posts/38.md","shasum":"4d02164c5cfeb6ebb4d4e61a2fe4343806663e33","modified":1452240571000},{"_id":"source/_posts/39.md","shasum":"526a5fa9cd5aff358eef1653103ef62e784b3fb3","modified":1452240571000},{"_id":"source/_posts/4.md","shasum":"e1ce386353a887e65ac605d24d1cffa418a9450b","modified":1452240571000},{"_id":"source/_posts/40.md","shasum":"5df5f32f63a42faf7ab59d73c6957681faa03c4f","modified":1452240571000},{"_id":"source/_posts/41.md","shasum":"a8c0e66092c5dda0cb105763ddfbb117a15e4d68","modified":1452240571000},{"_id":"source/_posts/42.md","shasum":"cb234c8133b1f77d7a40e3e1077abcbc3306b5e3","modified":1452240571000},{"_id":"source/_posts/5.md","shasum":"aadf7fd96a6e9c7c38a121c9d0301922e6b0ebd0","modified":1452240571000},{"_id":"source/_posts/6.md","shasum":"5a0d70324858592a132b427201cbcb4b0c01f882","modified":1452240571000},{"_id":"source/_posts/7.md","shasum":"617d2a168db056edfd03031e20eae2a4209d561a","modified":1452240571000},{"_id":"source/_posts/8.md","shasum":"e2e391c5d385df3d58c36ccb02c0851613f45540","modified":1452240571000},{"_id":"source/_posts/9.md","shasum":"31b07a0843dab3866fce194d20724e6b742490cb","modified":1452240571000},{"_id":"source/favicon.ico","shasum":"7255c8f02a52fd8aa8d54f36fcb8e97314dc9e8b","modified":1452240571000},{"_id":"source/favicon.png","shasum":"9f2b514e6f43dbe8a5d698a4c07fe0e2740a9296","modified":1452240571000},{"_id":"themes/yilia/README.md","shasum":"8648a81b3ae08a4accd6b0541533e662511e6400","modified":1452240571000},{"_id":"themes/yilia/_config.yml","shasum":"ed4a0ce422acb5ee9136525530ef45a41c98ed7c","modified":1452240571000},{"_id":"themes/yilia/_config.yml~","shasum":"ed4a0ce422acb5ee9136525530ef45a41c98ed7c","modified":1452240571000},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","shasum":"082504c9fd8600306d4ca55f03e3cbb0ddd99dd7","modified":1452240571000},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","shasum":"8dfb6d68aa8a0661d26c32ce1ce1f45815364c3a","modified":1452240571000},{"_id":"themes/yilia/layout/_partial/archive.ejs","shasum":"a6e94061ac55b9eb55275f87b608d62f6ea35659","modified":1452240571000},{"_id":"themes/yilia/layout/_partial/article.ejs","shasum":"ef8dd558f908f293c34123c0b7ff879d2fd0c09f","modified":1452240571000},{"_id":"themes/yilia/layout/_partial/footer.ejs","shasum":"4a0eec29753c3075c5b5d895bb8f5973e5202b19","modified":1452240730000},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","shasum":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1452240571000},{"_id":"themes/yilia/layout/_partial/head.ejs","shasum":"963c106412a3ab142871976978ecc9884aeca17a","modified":1452240571000},{"_id":"themes/yilia/layout/_partial/header.ejs","shasum":"6387a93dad7c3d778eb91e3821852fbf6813880c","modified":1452240571000},{"_id":"themes/yilia/layout/_partial/left-col.ejs","shasum":"e4f1a2011139257968e98b1fbc5d9d4a6b2cbc8e","modified":1452240571000},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","shasum":"54fab4d3d64cb937d6baec7324ffabf9f202b883","modified":1452240571000},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","shasum":"cd0af87ee781ac9c2b0e6a2a05b063d4bd497d9c","modified":1452240571000},{"_id":"themes/yilia/layout/_partial/post/category.ejs","shasum":"d4f0e36f9a2167e91082dbd7d52425a06d2bebbf","modified":1452240571000},{"_id":"themes/yilia/layout/_partial/post/date.ejs","shasum":"c0c988334e857a77ba455a056dfa21809e7e76a5","modified":1452240571000},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","shasum":"e8399025ed3b980aedb821c92855889f5f12fd5b","modified":1452240571000},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","shasum":"d19dee2082528e1844bed3aa4e4bd59f15fd7a7a","modified":1452240571000},{"_id":"themes/yilia/layout/_partial/post/share.ejs","shasum":"da39b4ba0c0ce4e1932fd45c5aee10e8aca41f28","modified":1452240571000},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","shasum":"78612cfc091d7d861a70455a0dc8c3036e460879","modified":1452240571000},{"_id":"themes/yilia/layout/_partial/post/title.ejs","shasum":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1452240571000},{"_id":"themes/yilia/layout/archive.ejs","shasum":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1452240571000},{"_id":"themes/yilia/layout/category.ejs","shasum":"765426a9c8236828dc34759e604cc2c52292835a","modified":1452240571000},{"_id":"themes/yilia/layout/index.ejs","shasum":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1452240571000},{"_id":"themes/yilia/layout/layout.ejs","shasum":"4a5566f704f3246f5ef77badddf18d2e16750328","modified":1452240571000},{"_id":"themes/yilia/layout/page.ejs","shasum":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1452240571000},{"_id":"themes/yilia/layout/post.ejs","shasum":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1452240571000},{"_id":"themes/yilia/layout/tag.ejs","shasum":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1452240571000},{"_id":"themes/yilia/package.json","shasum":"00357ef6f24eb049074da81809e98f973f528cca","modified":1452240571000},{"_id":"themes/yilia/source/ava.png","shasum":"de9bf8f3bb0690a8c13426c8cdf71b5182b729cd","modified":1452240571000},{"_id":"themes/yilia/source/css/_extend.styl","shasum":"8ab1ad313bd6707d248c5ca1ee9a5eab8d815e42","modified":1452240571000},{"_id":"themes/yilia/source/css/_partial/archive.styl","shasum":"8b349f1605024dcdae054e04f02d71a2e84957c2","modified":1452240571000},{"_id":"themes/yilia/source/css/_partial/article.styl","shasum":"872fc4e63509fef885c939e5fd70e6ed439beced","modified":1452240571000},{"_id":"themes/yilia/source/css/_partial/footer.styl","shasum":"7ca837a4cc34db1c35f01baec85eb10ccc64ea86","modified":1452240571000},{"_id":"themes/yilia/source/css/_partial/header.styl","shasum":"67e59feb18eee6026717cb440d86ab9551782628","modified":1452240571000},{"_id":"themes/yilia/source/css/_partial/highlight.styl","shasum":"8cadf8437ce6f372802d3d28617a1ab97e7c818e","modified":1452240571000},{"_id":"themes/yilia/source/css/_partial/instagram.styl","shasum":"8a7b07bf5ea2d3588c0019f722c245bb1a8696af","modified":1452240571000},{"_id":"themes/yilia/source/css/_partial/main.styl","shasum":"4268f759920106a576c6037264076b36018ff73b","modified":1452240571000},{"_id":"themes/yilia/source/css/_partial/mobile-slider.styl","shasum":"e19c7fae6968ad3ea6cfc110900a991f9b5fce31","modified":1452240571000},{"_id":"themes/yilia/source/css/_partial/mobile.styl","shasum":"3a03b04ef8ac305aa5dbf7b9db99cd9377d07383","modified":1452240571000},{"_id":"themes/yilia/source/css/_partial/page.styl","shasum":"720b5b169bc28ccba3794efce9b7cd39f243dec7","modified":1452240571000},{"_id":"themes/yilia/source/css/_partial/scroll.styl","shasum":"5539a38f9acd603d453a0ea0d8ce10893cf83d22","modified":1452240571000},{"_id":"themes/yilia/source/css/_partial/share.styl","shasum":"22697b9a9877ab9f018364feb57aeea4a8313c9a","modified":1452240571000},{"_id":"themes/yilia/source/css/_partial/tagcloud.styl","shasum":"af0115de5c6455f899a2e09225b50224982c039d","modified":1452240571000},{"_id":"themes/yilia/source/css/_partial/wheelmenu.styl","shasum":"74630c56944e27bef53ef0c0e391611a2eec2ed0","modified":1452240571000},{"_id":"themes/yilia/source/css/_util/grid.styl","shasum":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1452240571000},{"_id":"themes/yilia/source/css/_util/mixin.styl","shasum":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1452240571000},{"_id":"themes/yilia/source/css/_variables.styl","shasum":"8b63ea3c7199524b9a1541075c6f8fb2c0d0ea3d","modified":1452240571000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.eot","shasum":"3ce87b82c7a4ffdf65e96765c2ffda10b1a283c6","modified":1452240571000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svgz","shasum":"4bfdd33ed702e32ae01399fcc2652377f78e7626","modified":1452240571000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.ttf","shasum":"1480b8101b02da9bc4c60341b5e185e63e585064","modified":1452240571000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.woff","shasum":"cafc4ac5761a0a252d33dce4ea3952cf9a38d832","modified":1452240571000},{"_id":"themes/yilia/source/css/style.styl","shasum":"456e8cfe3b0b0371e81848ea9b0bc7ffd5360921","modified":1452240571000},{"_id":"themes/yilia/source/fancybox/blank.gif","shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1452240571000},{"_id":"themes/yilia/source/fancybox/fancybox_loading.gif","shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1452240571000},{"_id":"themes/yilia/source/fancybox/fancybox_loading@2x.gif","shasum":"273b123496a42ba45c3416adb027cd99745058b0","modified":1452240571000},{"_id":"themes/yilia/source/fancybox/fancybox_overlay.png","shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1452240571000},{"_id":"themes/yilia/source/fancybox/fancybox_sprite.png","shasum":"17df19f97628e77be09c352bf27425faea248251","modified":1452240571000},{"_id":"themes/yilia/source/fancybox/fancybox_sprite@2x.png","shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1452240571000},{"_id":"themes/yilia/source/fancybox/helpers/fancybox_buttons.png","shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1452240571000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.css","shasum":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1452240571000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-buttons.js","shasum":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1452240571000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-media.js","shasum":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1452240571000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.css","shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1452240571000},{"_id":"themes/yilia/source/fancybox/helpers/jquery.fancybox-thumbs.js","shasum":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1452240571000},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.css","shasum":"b6aa6692c2e5f8bd74d96827b78570f0c5683c20","modified":1452240571000},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.js","shasum":"a82597493d75ea989ca586e09173cff332efe41e","modified":1452240571000},{"_id":"themes/yilia/source/fancybox/jquery.fancybox.pack.js","shasum":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1452240571000},{"_id":"themes/yilia/source/favicon.ico","shasum":"7255c8f02a52fd8aa8d54f36fcb8e97314dc9e8b","modified":1452240571000},{"_id":"themes/yilia/source/favicon.png","shasum":"9f2b514e6f43dbe8a5d698a4c07fe0e2740a9296","modified":1452240571000},{"_id":"themes/yilia/source/img/coderwall.png","shasum":"fa84676c4d654e040e51fd34bfcd9f9348cd5331","modified":1452240571000},{"_id":"themes/yilia/source/img/delicious.png","shasum":"9553a5f5189e4a953e04a58a49dbfa74b86b73dd","modified":1452240571000},{"_id":"themes/yilia/source/img/douban.png","shasum":"e2ade003ffadd5826ee66ec23901c2d6e8607e4e","modified":1452240571000},{"_id":"themes/yilia/source/img/facebook.png","shasum":"d19ad7a0903daf26817afd8753cd97e0cc714f54","modified":1452240571000},{"_id":"themes/yilia/source/img/github.png","shasum":"b84d03b32fa388dcbf149296ebd16dce6223d48d","modified":1452240571000},{"_id":"themes/yilia/source/img/google.png","shasum":"61a21fec7346fa3400b747ac9a201cf3d5bc013d","modified":1452240571000},{"_id":"themes/yilia/source/img/img-err.png","shasum":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b","modified":1452240571000},{"_id":"themes/yilia/source/img/img-loading.png","shasum":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031","modified":1452240571000},{"_id":"themes/yilia/source/img/linkedin.png","shasum":"e203138fb53c257cb214e97f4e30091b9c568d2c","modified":1452240571000},{"_id":"themes/yilia/source/img/mail.png","shasum":"fca8199cc77fdbd700a45bf56d091c82f4a67fe7","modified":1452240571000},{"_id":"themes/yilia/source/img/pinboard.png","shasum":"0891fbb6d092fa012bf936019923383d84c6aeb0","modified":1452240571000},{"_id":"themes/yilia/source/img/pinterest.png","shasum":"9c72917f8779c083157c6ce7a5d62ed4874f0630","modified":1452240571000},{"_id":"themes/yilia/source/img/rss.png","shasum":"430fd47340e75214c081abd05cd7410cf7c71b86","modified":1452240571000},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","shasum":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1452240571000},{"_id":"themes/yilia/source/img/stackoverflow.png","shasum":"da5dfe9043055c95e479d49c78cd3b020de608f2","modified":1452240571000},{"_id":"themes/yilia/source/img/twitter.png","shasum":"14dbb8e62d056525253bc0de13acd1723da7a934","modified":1452240571000},{"_id":"themes/yilia/source/img/weibo.png","shasum":"280dae3fd38086158b4a1b57edb94c06b1a5014b","modified":1452240571000},{"_id":"themes/yilia/source/img/zhihu.png","shasum":"a6d6ef65e9ac82e613a311810391ebb90d9b1c1d","modified":1452240571000},{"_id":"themes/yilia/source/js/instagram.js","shasum":"81e13cacf4947118ed1920e59b04ccf6beef6b86","modified":1452240571000},{"_id":"themes/yilia/source/js/jquery.lazyload.js","shasum":"c11a2e7b330d16d06feabd0a8477099adf9d6799","modified":1452240571000},{"_id":"themes/yilia/source/js/main.js","shasum":"e2633f282e377a4169649c9f17dc96036ad4fc64","modified":1452240571000},{"_id":"themes/yilia/source/js/mobile.js","shasum":"b68cc01d24e80973c48205f551da87f3f3427644","modified":1452240571000},{"_id":"themes/yilia/source/js/pc.js","shasum":"a5397d34a04084ee089b4b1e26457ab46ecea63e","modified":1452240571000},{"_id":"themes/yilia/source/css/fonts/fontawesome-webfont.svg","shasum":"ba13657479b46daecb6336bfe376f84cef3ae58b","modified":1452240571000},{"_id":"public/favicon.png","modified":1452240623153,"shasum":"9f2b514e6f43dbe8a5d698a4c07fe0e2740a9296"},{"_id":"public/favicon.ico","modified":1452240623157,"shasum":"7255c8f02a52fd8aa8d54f36fcb8e97314dc9e8b"},{"_id":"public/js/pc.js","modified":1452240623159,"shasum":"fdbc039fc9ffa70815b5fc4daaa587ae29693f10"},{"_id":"public/js/mobile.js","modified":1452240623161,"shasum":"b68cc01d24e80973c48205f551da87f3f3427644"},{"_id":"public/js/main.js","modified":1452240623162,"shasum":"0640b68a76fab3c693b3cd1e4d04d14be1e53940"},{"_id":"public/js/jquery.lazyload.js","modified":1452240623163,"shasum":"c11a2e7b330d16d06feabd0a8477099adf9d6799"},{"_id":"public/js/instagram.js","modified":1452240623164,"shasum":"f19adbcc0dac33536bc6660598059048ec901882"},{"_id":"public/img/zhihu.png","modified":1452240623166,"shasum":"a6d6ef65e9ac82e613a311810391ebb90d9b1c1d"},{"_id":"public/img/weibo.png","modified":1452240623167,"shasum":"280dae3fd38086158b4a1b57edb94c06b1a5014b"},{"_id":"public/img/twitter.png","modified":1452240623168,"shasum":"14dbb8e62d056525253bc0de13acd1723da7a934"},{"_id":"public/img/stackoverflow.png","modified":1452240623170,"shasum":"da5dfe9043055c95e479d49c78cd3b020de608f2"},{"_id":"public/img/scrollbar_arrow.png","modified":1452240623171,"shasum":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0"},{"_id":"public/img/rss.png","modified":1452240623173,"shasum":"430fd47340e75214c081abd05cd7410cf7c71b86"},{"_id":"public/img/pinterest.png","modified":1452240623175,"shasum":"9c72917f8779c083157c6ce7a5d62ed4874f0630"},{"_id":"public/img/pinboard.png","modified":1452240623177,"shasum":"0891fbb6d092fa012bf936019923383d84c6aeb0"},{"_id":"public/img/mail.png","modified":1452240623180,"shasum":"fca8199cc77fdbd700a45bf56d091c82f4a67fe7"},{"_id":"public/img/linkedin.png","modified":1452240623181,"shasum":"e203138fb53c257cb214e97f4e30091b9c568d2c"},{"_id":"public/img/img-loading.png","modified":1452240623182,"shasum":"a9cd5cd11866824f31e3d1c5e23badfeb3f73031"},{"_id":"public/img/img-err.png","modified":1452240623184,"shasum":"23a63ea26eb3c1d5e677d9883cf36cc1a1a1228b"},{"_id":"public/img/google.png","modified":1452240623185,"shasum":"61a21fec7346fa3400b747ac9a201cf3d5bc013d"},{"_id":"public/img/github.png","modified":1452240623186,"shasum":"b84d03b32fa388dcbf149296ebd16dce6223d48d"},{"_id":"public/img/facebook.png","modified":1452240623189,"shasum":"d19ad7a0903daf26817afd8753cd97e0cc714f54"},{"_id":"public/img/douban.png","modified":1452240623190,"shasum":"e2ade003ffadd5826ee66ec23901c2d6e8607e4e"},{"_id":"public/img/delicious.png","modified":1452240623191,"shasum":"9553a5f5189e4a953e04a58a49dbfa74b86b73dd"},{"_id":"public/img/coderwall.png","modified":1452240623193,"shasum":"fa84676c4d654e040e51fd34bfcd9f9348cd5331"},{"_id":"public/fancybox/jquery.fancybox.pack.js","modified":1452240623196,"shasum":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e"},{"_id":"public/fancybox/jquery.fancybox.js","modified":1452240623197,"shasum":"a82597493d75ea989ca586e09173cff332efe41e"},{"_id":"public/fancybox/jquery.fancybox.css","modified":1452240623198,"shasum":"b6aa6692c2e5f8bd74d96827b78570f0c5683c20"},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","modified":1452240623199,"shasum":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c"},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","modified":1452240623201,"shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f"},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","modified":1452240623202,"shasum":"294420f9ff20f4e3584d212b0c262a00a96ecdb3"},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","modified":1452240623203,"shasum":"dc3645529a4bf72983a39fa34c1eb9146e082019"},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","modified":1452240623204,"shasum":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8"},{"_id":"public/fancybox/helpers/fancybox_buttons.png","modified":1452240623205,"shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3"},{"_id":"public/fancybox/fancybox_sprite@2x.png","modified":1452240623206,"shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8"},{"_id":"public/fancybox/fancybox_sprite.png","modified":1452240623208,"shasum":"17df19f97628e77be09c352bf27425faea248251"},{"_id":"public/fancybox/fancybox_overlay.png","modified":1452240623210,"shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0"},{"_id":"public/fancybox/fancybox_loading@2x.gif","modified":1452240623212,"shasum":"273b123496a42ba45c3416adb027cd99745058b0"},{"_id":"public/fancybox/fancybox_loading.gif","modified":1452240623214,"shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c"},{"_id":"public/fancybox/blank.gif","modified":1452240623215,"shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a"},{"_id":"public/css/style.css","modified":1452240623763,"shasum":"e56554c624d9d49e9429eeeb9222488f8df634ec"},{"_id":"public/css/fonts/fontawesome-webfont.woff","modified":1452240624057,"shasum":"cafc4ac5761a0a252d33dce4ea3952cf9a38d832"},{"_id":"public/css/fonts/fontawesome-webfont.ttf","modified":1452240624059,"shasum":"1480b8101b02da9bc4c60341b5e185e63e585064"},{"_id":"public/css/fonts/fontawesome-webfont.svgz","modified":1452240624060,"shasum":"4bfdd33ed702e32ae01399fcc2652377f78e7626"},{"_id":"public/css/fonts/fontawesome-webfont.svg","modified":1452240624064,"shasum":"ba13657479b46daecb6336bfe376f84cef3ae58b"},{"_id":"public/css/fonts/fontawesome-webfont.eot","modified":1452240624066,"shasum":"3ce87b82c7a4ffdf65e96765c2ffda10b1a283c6"},{"_id":"public/ava.png","modified":1452240624069,"shasum":"de9bf8f3bb0690a8c13426c8cdf71b5182b729cd"},{"_id":"public/2016/01/01/42/index.html","modified":1452240737616,"shasum":"732ea22ed988090aa40bbfa7e83c0d08b11b76d2"},{"_id":"public/2015/12/31/41/index.html","modified":1452240737633,"shasum":"8a3094294d1e12307ccf03707518b3dd9485ace2"},{"_id":"public/2015/12/31/40/index.html","modified":1452240737654,"shasum":"6403127526cfd565197c6bebe62fbe67ebc4e57d"},{"_id":"public/2015/12/28/39/index.html","modified":1452240737667,"shasum":"ac971cf64dc601cbfeb6c1d7a1bbee72a20f5908"},{"_id":"public/2015/12/20/38/index.html","modified":1452240737679,"shasum":"baf0077513821d9d048de4d25925f50f624aea06"},{"_id":"public/2015/12/15/37/index.html","modified":1452240737699,"shasum":"8b09e8f7af7f3109927996b7a138fc05b507d322"},{"_id":"public/2015/12/03/36/index.html","modified":1452240737718,"shasum":"61ccbdf6ecf64a0e6433d55ddeefacfda9f853ea"},{"_id":"public/2015/11/06/35/index.html","modified":1452240737750,"shasum":"bfd88b471da6206fa1f44cc51c99801f1eac55f4"},{"_id":"public/2015/10/06/34/index.html","modified":1452240737764,"shasum":"d62d2e2b3cdf06a1525afe94a37b6cd0a6c82077"},{"_id":"public/2015/10/04/33/index.html","modified":1452240737779,"shasum":"61b0b051c7930968db15d8289a95be8974d59f75"},{"_id":"public/2015/10/04/32/index.html","modified":1452240737802,"shasum":"f2ef44095c624cb7b22d039fd06cd5a4976a360c"},{"_id":"public/2015/10/02/31/index.html","modified":1452240737813,"shasum":"33460dbd12fe977027ec7bd37342ee9ab2c1c09a"},{"_id":"public/2015/10/02/30/index.html","modified":1452240737823,"shasum":"828361340a9737f6f7ca7dce64ec0b3238564b40"},{"_id":"public/2015/10/02/29/index.html","modified":1452240737836,"shasum":"574cf2aa8206e55f2bbfb21f6837de64e0ddf4b5"},{"_id":"public/2015/09/16/28/index.html","modified":1452240737845,"shasum":"edab64753ca6edc933e89bc4a94fdaa1511f46d9"},{"_id":"public/2015/09/15/27/index.html","modified":1452240737853,"shasum":"7ada3d0ebdc6077d8e7229b13a22e99ee1d71b4f"},{"_id":"public/2015/08/26/26/index.html","modified":1452240737862,"shasum":"6f0424b4ecc7ebbee0f41ee8965cd8b62bf79a9b"},{"_id":"public/2015/08/25/25/index.html","modified":1452240737871,"shasum":"d3d519a74dd098fb3b63cccc76fe881d1bad3942"},{"_id":"public/2015/08/25/24/index.html","modified":1452240737880,"shasum":"26909896bbdb7d01612a8e1a25febf91408a2abb"},{"_id":"public/2015/08/25/23/index.html","modified":1452240737888,"shasum":"78c2d1a9323acdd53f5cb9d395a25fe972fd8603"},{"_id":"public/2015/08/25/22/index.html","modified":1452240737903,"shasum":"64e524df070e091fae92988162433a97436c6a38"},{"_id":"public/2015/08/25/21/index.html","modified":1452240737912,"shasum":"4f8ccfbfb368f447933df57120254fc466a82299"},{"_id":"public/2015/08/25/20/index.html","modified":1452240737920,"shasum":"32a51b572e16aec1af3aba3c454a4f7a106ca088"},{"_id":"public/2015/08/25/19/index.html","modified":1452240737932,"shasum":"e6cfc2a00501ddf9e02b63cf7769162ad2e97cb3"},{"_id":"public/2015/08/25/18/index.html","modified":1452240737944,"shasum":"df89ae3a61196c5298e10a14c8e24ce5e7277ab1"},{"_id":"public/2015/08/25/17/index.html","modified":1452240737952,"shasum":"acb613987add197d02459af6b37a0cb2ff48e0c1"},{"_id":"public/2015/08/25/16/index.html","modified":1452240737962,"shasum":"939195c31504b187b53e2c29dc17ef0619d54570"},{"_id":"public/2015/08/25/15/index.html","modified":1452240737976,"shasum":"41fc47ba76a98170f32e9e3a8da7a6eb35e9a8f0"},{"_id":"public/2015/08/25/14/index.html","modified":1452240737990,"shasum":"f08df4d6ae8cdfb293ad7919210b7fdc529cb239"},{"_id":"public/2015/08/25/13/index.html","modified":1452240737998,"shasum":"0902ed33a06c670a41407d4cde7ee25f6a745e52"},{"_id":"public/2015/08/25/12/index.html","modified":1452240738007,"shasum":"f087aa83433b038cb4a9d14de00b4a55212a30cd"},{"_id":"public/2015/08/25/11/index.html","modified":1452240738023,"shasum":"6ae91c99ae3f7f5f95831e2a901d0b9f26a27318"},{"_id":"public/2015/08/25/10/index.html","modified":1452240738034,"shasum":"0e66ace6ae06b81c30e61b812341f86acb134858"},{"_id":"public/2015/08/25/9/index.html","modified":1452240738051,"shasum":"a049270fe3cde5c4652b9186b096876396f32363"},{"_id":"public/2015/08/25/8/index.html","modified":1452240738059,"shasum":"3d8e19d79e5077888b7e4bc7c6259c4c38be9405"},{"_id":"public/2015/08/25/7/index.html","modified":1452240738069,"shasum":"34d06902caff1bc67a4e401ec52ee042de01a42e"},{"_id":"public/2015/08/25/6/index.html","modified":1452240738078,"shasum":"bca335a4906187efc9fb31790c1f636354dd34f4"},{"_id":"public/2015/08/25/5/index.html","modified":1452240738086,"shasum":"a0d3ff1dcd22a0f52ab365a440a608fb2197dcda"},{"_id":"public/2015/08/25/4/index.html","modified":1452240738094,"shasum":"c5aa1d4847d5cb1a1eed8888989ddbf5dbed7aa7"},{"_id":"public/2015/08/24/3/index.html","modified":1452240738103,"shasum":"327b07e6ccf18a77e20af01c2728665e39b9e8df"},{"_id":"public/2015/08/24/2/index.html","modified":1452240738114,"shasum":"990758e9497d7607a41581c2c848c51c74d4982c"},{"_id":"public/2015/08/24/1/index.html","modified":1452240738127,"shasum":"2b115e0e0b8e22edd9c518c9f6b0d92fd17369ec"},{"_id":"public/archives/index.html","modified":1452240738158,"shasum":"c3d3de9f6eb8e2c9bc646df2e3b984141d069583"},{"_id":"public/archives/page/2/index.html","modified":1452240738192,"shasum":"2678c546e2866a0074033e4bd222af2b89607bad"},{"_id":"public/archives/page/3/index.html","modified":1452240738223,"shasum":"9a2bbcb1e1839303f141771154f056ebe2508e28"},{"_id":"public/archives/page/4/index.html","modified":1452240738261,"shasum":"accbec37400b8698db21f583c47bd62e0e01bec2"},{"_id":"public/archives/page/5/index.html","modified":1452240738273,"shasum":"3fdd3ecc3ea4126dbfc60564e51b2e99872f9144"},{"_id":"public/archives/2015/index.html","modified":1452240738313,"shasum":"2ab4f480db4909cb440484ca3f935084f4d4ee0f"},{"_id":"public/archives/2015/page/2/index.html","modified":1452240738357,"shasum":"14e5893e921d802805811f616c055adeba3f1fe2"},{"_id":"public/archives/2015/page/3/index.html","modified":1452240738398,"shasum":"f7e75ec27165a80ec300f309fc7a0167cf4fac01"},{"_id":"public/archives/2015/page/4/index.html","modified":1452240738445,"shasum":"47a782d8c1b69f5853d8cae9b71b3d806645d2f1"},{"_id":"public/archives/2015/page/5/index.html","modified":1452240738454,"shasum":"54da53e799191e45546f2fbedf3390b1e383bdf7"},{"_id":"public/archives/2015/08/index.html","modified":1452240738495,"shasum":"e475f73774391c7ea476baef8b9438e7efa72185"},{"_id":"public/archives/2015/08/page/2/index.html","modified":1452240738545,"shasum":"12f2d419e9e3803558eb1dca85d3e8a42cac175c"},{"_id":"public/archives/2015/08/page/3/index.html","modified":1452240738564,"shasum":"49c6c482741d34a518118aff127f669234ad3df5"},{"_id":"public/archives/2015/09/index.html","modified":1452240738573,"shasum":"c8b8f4154e5462b025bcdba165548d281a573972"},{"_id":"public/archives/2015/10/index.html","modified":1452240738592,"shasum":"eca84334fcbba790ee46ff2f9c759ca0136a96d4"},{"_id":"public/archives/2015/11/index.html","modified":1452240738598,"shasum":"9826a9450a46497f398a2ab39794948a12c6340c"},{"_id":"public/archives/2015/12/index.html","modified":1452240738622,"shasum":"d66c507d89b1304f45bbcd17221dc83ed36a33d9"},{"_id":"public/archives/2016/index.html","modified":1452240738628,"shasum":"bb431e162581b313ac2a02c088a796cb9113ceea"},{"_id":"public/archives/2016/01/index.html","modified":1452240738634,"shasum":"bf5452ec3c981cd461cbfbb5f03d5d8b4ed0673c"},{"_id":"public/categories/编程与算法/index.html","modified":1452240738670,"shasum":"80745caab82892652ea08a85e162b73a336366d9"},{"_id":"public/categories/编程与算法/page/2/index.html","modified":1452240738697,"shasum":"dea3bf97c31996f9d8b81f47e36a27279f3cc380"},{"_id":"public/categories/编程与算法/page/3/index.html","modified":1452240738731,"shasum":"c4fce2b4df63004d52b7230dea5f83d570652107"},{"_id":"public/categories/编程与算法/page/4/index.html","modified":1452240738738,"shasum":"b484e38dbc60a277a44cfb7fb832bf7a0fe5f155"},{"_id":"public/categories/日常维护/index.html","modified":1452240738764,"shasum":"e8e922ac1599597a075c34b4b7abbfbfdfa1aeda"},{"_id":"public/categories/点点滴滴/index.html","modified":1452240738773,"shasum":"6fee644b1e9e0f665c1c255df0e576ad34b94c80"},{"_id":"public/index.html","modified":1452240738807,"shasum":"a4367f6911049d95e3997ab8e6c8d61a7d8a1602"},{"_id":"public/page/2/index.html","modified":1452240738836,"shasum":"1bce638bed3e4abfb922e4a21072d00882a9a9cc"},{"_id":"public/page/3/index.html","modified":1452240738869,"shasum":"5f1943888d51aa72094bf3e732313a55450b145e"},{"_id":"public/page/4/index.html","modified":1452240738896,"shasum":"d855ddab92775b88a083b663ff16d8ed177d6207"},{"_id":"public/page/5/index.html","modified":1452240738906,"shasum":"e70b230d43fde07d4e76ea3004b4cadd063441e8"},{"_id":"public/tags/asm/index.html","modified":1452240738921,"shasum":"9f5d011b18959fa102b22381bf658aab82533dde"},{"_id":"public/tags/课后练习/index.html","modified":1452240738929,"shasum":"d52c7d22bdea31dab6078471265a1da68156ca5f"},{"_id":"public/tags/poj/index.html","modified":1452240738940,"shasum":"c23eefd6541ce67086a12f1a18ad78f7925b724d"},{"_id":"public/tags/uniun/index.html","modified":1452240738950,"shasum":"6b39fc9da3b9079afa3220bce65dd2307f046fc8"},{"_id":"public/tags/ubuntu/index.html","modified":1452240738981,"shasum":"e2f270a6b08c09d01b4c3e88e4979e2044dbe1a7"},{"_id":"public/tags/vpn/index.html","modified":1452240738990,"shasum":"8ff8fe521b9b414285af327ae2b5af2277b51b01"},{"_id":"public/tags/acm/index.html","modified":1452240739009,"shasum":"02e79cdb3faff5802762a2b5d5908c8c05b9e506"},{"_id":"public/tags/software/index.html","modified":1452240739018,"shasum":"7df39927a3ab1d4ed16f0f11c32239875867679a"},{"_id":"public/tags/shadowsocks/index.html","modified":1452240739027,"shasum":"bb9de4deafd62a85df0f086e1a787c7c17fd5482"},{"_id":"public/tags/ss/index.html","modified":1452240739041,"shasum":"68ef0845de454b10e1f531dabdc5b9edf9a01b5a"},{"_id":"public/tags/spark/index.html","modified":1452240739055,"shasum":"11e1c7a7ff69c2b6caf1968432b820bd49849640"},{"_id":"public/tags/tachyon/index.html","modified":1452240739070,"shasum":"ef519eb4dff2b2f4b10c181706d88bc286dd8f3a"},{"_id":"public/tags/大数据/index.html","modified":1452240739098,"shasum":"a414e07c2df696c463a0adf440dfb83675b2bbfc"},{"_id":"public/tags/java/index.html","modified":1452240739107,"shasum":"270b5b19911183a37c24738d68e75d77676cea25"},{"_id":"public/tags/hexo/index.html","modified":1452240739119,"shasum":"30877ddca9f597ace821b7600a105b5f35e3f55f"},{"_id":"public/tags/nodejs/index.html","modified":1452240739128,"shasum":"a024ce3bb4d93ead6119c5ebdef652eace8c5dba"},{"_id":"public/tags/hadoop/index.html","modified":1452240739142,"shasum":"a30f2a4fbcadead44b1dfbddb05c692f5df41a0a"},{"_id":"public/tags/Android/index.html","modified":1452240739151,"shasum":"1ce3fece643ae7d1f9988a671bbb46b5b40eb4ba"},{"_id":"public/tags/dr-com/index.html","modified":1452240739162,"shasum":"b464312bf1c323c94de9284a6fab1a8a51b5ab66"},{"_id":"public/tags/64位/index.html","modified":1452240739177,"shasum":"719dbb5d0bb2e405473807b64eeeb22703da36f6"},{"_id":"public/tags/经纬度/index.html","modified":1452240739198,"shasum":"7eb72c9f1f6ea4820a67e076b01f900ac0a49603"},{"_id":"public/tags/virtualbox/index.html","modified":1452240739205,"shasum":"bef5f17466d1d4b5d02cbe3f579f8e061c1a33ab"},{"_id":"public/tags/error/index.html","modified":1452240739211,"shasum":"bec4bb7160887990e3507a59b2e4eba3a0b3cc74"},{"_id":"public/tags/最短路/index.html","modified":1452240739228,"shasum":"4dc62fc5322f7c1403c4447edcff7f24da8f8262"},{"_id":"public/tags/ACM/index.html","modified":1452240739245,"shasum":"d6a47ccd9c9d4b9d4ee7fa76eae78a48e453b8ed"},{"_id":"public/tags/图论/index.html","modified":1452240739262,"shasum":"d64bfce64eb1d08c15512b1d33ba5e88601aa933"},{"_id":"public/tags/spfa/index.html","modified":1452240739268,"shasum":"5bd4975b241a97779ea700724e27321fd8b27dc0"},{"_id":"public/tags/bellman-ford/index.html","modified":1452240739278,"shasum":"84cb0b9d1f0a64ff6fe57acfddda7127616926ec"},{"_id":"public/tags/dijkstra/index.html","modified":1452240739285,"shasum":"647e303a5fe4941fc9482881ddca36d4e4e9e3f9"},{"_id":"public/tags/floyd/index.html","modified":1452240739291,"shasum":"951bf023c915b8358a37a3a239ee5841378c3326"},{"_id":"public/tags/python/index.html","modified":1452240739319,"shasum":"363a4bd6fc8be8e1760533b37a79e2f831f133a1"},{"_id":"public/tags/python/page/2/index.html","modified":1452240739330,"shasum":"d17dcaf7fbb89da927322ffe4e0a68d8c1653cf8"},{"_id":"public/tags/编程/index.html","modified":1452240739343,"shasum":"e93752baec35537dd7e5a477d5e5f2d50c525ac1"},{"_id":"public/tags/django/index.html","modified":1452240739350,"shasum":"b7640d2a884fa25ea7b8d15eeb979be567fcd76e"},{"_id":"public/tags/uwsgi/index.html","modified":1452240739356,"shasum":"36d5dc188041393606e2a974a48a9ff0e8412746"},{"_id":"public/tags/nginx/index.html","modified":1452240739362,"shasum":"f7a7c7a01bdefa60a838266ce20f417866460685"},{"_id":"public/tags/innerac/index.html","modified":1452240739368,"shasum":"c54fa28e5a78cd13b19909d5dbdb696f5e3eeb37"},{"_id":"public/tags/aboutme/index.html","modified":1452240739375,"shasum":"f48848c0e811090bddaacc0b55c0fc0c21fc2948"},{"_id":"public/tags/github/index.html","modified":1452240739381,"shasum":"e5b8ef293d5c4a2b324a2f5e8f6bee528910697b"},{"_id":"public/tags/blog/index.html","modified":1452240739387,"shasum":"7f1790e71205a781cf31d399cff19674a9e65051"},{"_id":"public/tags/区域赛/index.html","modified":1452240739393,"shasum":"bf2ba5b0c5c060507f4b2bfdb405ca16fc752499"},{"_id":"public/tags/QT/index.html","modified":1452240739406,"shasum":"ca2ca7163f65197de2bbec1091e77ec27defd448"},{"_id":"public/tags/VS/index.html","modified":1452240739412,"shasum":"e2ae9df5ec8b048380f1e96e00bcb82c791bd9e6"},{"_id":"public/tags/osgi/index.html","modified":1452240739418,"shasum":"cdfeb3a5d9fbc9fac77d44d10f114fc7d4b4f666"},{"_id":"public/tags/codeforces/index.html","modified":1452240739424,"shasum":"ab87fe39a7b5cd243668fc621c0fd5592d38d9a6"},{"_id":"public/tags/cf/index.html","modified":1452240739430,"shasum":"64192fa517a0874071ea64da902c2121356db8f3"},{"_id":"public/tags/trie/index.html","modified":1452240739439,"shasum":"7f77216f3480a2e08f022138bf94620f3443cdc8"},{"_id":"public/tags/hihocoder/index.html","modified":1452240739446,"shasum":"87364d031efb2153fd5e8148e6a3559b2ad3a9d8"}],"Category":[{"name":"编程与算法","_id":"cij5ekig80001ro5u44mf5ixi"},{"name":"日常维护","_id":"cij5ekihc000ero5uah7qnzfh"},{"name":"点点滴滴","_id":"cij5ekiin002ero5u0w0accun"}],"Data":[],"Page":[],"Post":[{"title":"汇编输出十进制数","date":"2015-08-24T09:34:25.000Z","_content":"最近，老师让写一个汇编程序，结果除了helloworld 其他都不会输出，输出个数字 还变成乱码，查阅资料后，发现输出到是ASCII码对应到字符，无奈只能一个一个输出。\n贴代码之前先补充一下：\n\nBIOS 中断 INT 10H 显示字符 AH = 0EH 显示 AL 里面的数据简单来说就是\nMOV AH,0EH\nINT 10H\n屏幕就会输出 AL 里面ASCII 码 对应到字符 \n\n\n<!--more-->\n\n\n其他的注释都有了，也没什么好说到了，感谢 baidu \n```asm\nCOUTD:              ;将双字AX化为10 进制并显示  \n    PUSH BX         ;BX,CX,DX 入栈，保存现场  \n    PUSH CX  \n    PUSH DX  \n    MOV BX,10       ;转换成10进制，所以BX <= 10  \n    XOR CX,CX       ;清空 CX  \nC0: XOR DX,DX       ;清空 DX  \n    DIV BX          ;AX 除以 BX,DX <= 余数, AX <= 商  \n    OR DX,0E30H     ;DX|0E30H 结果 DH = 0EH DL =30H+余数    \n    PUSH DX         ;商的ASCII码入栈   \n    INC CX          ;CX 自加 用于 出栈时计数  \n    CMP AX,0        ;比较AX 与 0   \n    JNZ C0          ;若AX(商) 不为 0 则 高位还有数 跳转到C0 继续进行计算   \nC1: POP AX          ;出栈到AX 此时 AH = 0EH AL = 十进制数到ASCII码  \n    INT 10H         ;AH = 0EH 将AL 输出到屏幕  \n    LOOP C1         ;CX 不为0 则跳转到C1继续出栈 输出  \n    POP DX          ;BX,CX,DX 出栈，恢复现场  \n    POP CX  \n    POP BX  \n    RET  \n```\n","source":"_posts/1.md","raw":"title: 汇编输出十进制数\ndate: 2015-08-24 17:34:25\ncategories: 编程与算法\ntags: [asm,课后练习]\n---\n最近，老师让写一个汇编程序，结果除了helloworld 其他都不会输出，输出个数字 还变成乱码，查阅资料后，发现输出到是ASCII码对应到字符，无奈只能一个一个输出。\n贴代码之前先补充一下：\n\nBIOS 中断 INT 10H 显示字符 AH = 0EH 显示 AL 里面的数据简单来说就是\nMOV AH,0EH\nINT 10H\n屏幕就会输出 AL 里面ASCII 码 对应到字符 \n\n\n<!--more-->\n\n\n其他的注释都有了，也没什么好说到了，感谢 baidu \n```asm\nCOUTD:              ;将双字AX化为10 进制并显示  \n    PUSH BX         ;BX,CX,DX 入栈，保存现场  \n    PUSH CX  \n    PUSH DX  \n    MOV BX,10       ;转换成10进制，所以BX <= 10  \n    XOR CX,CX       ;清空 CX  \nC0: XOR DX,DX       ;清空 DX  \n    DIV BX          ;AX 除以 BX,DX <= 余数, AX <= 商  \n    OR DX,0E30H     ;DX|0E30H 结果 DH = 0EH DL =30H+余数    \n    PUSH DX         ;商的ASCII码入栈   \n    INC CX          ;CX 自加 用于 出栈时计数  \n    CMP AX,0        ;比较AX 与 0   \n    JNZ C0          ;若AX(商) 不为 0 则 高位还有数 跳转到C0 继续进行计算   \nC1: POP AX          ;出栈到AX 此时 AH = 0EH AL = 十进制数到ASCII码  \n    INT 10H         ;AH = 0EH 将AL 输出到屏幕  \n    LOOP C1         ;CX 不为0 则跳转到C1继续出栈 输出  \n    POP DX          ;BX,CX,DX 出栈，恢复现场  \n    POP CX  \n    POP BX  \n    RET  \n```\n","slug":"1","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekig40000ro5uitdu96an"},{"title":"并查集 poj食物链","date":"2015-08-25T00:28:04.000Z","_content":"一般父类便为更节点更新节点时 kin = 0 \n\n\n<!--more-->\n\n\n```cpp\n#include <iostream>  \n#include <stdio.h>  \nusing namespace std;  \nint par[50000],kin[50000];  \nvoid init(int n){  \n        int i;  \n        for(i=0;i<n;i++){  \n                par[i] = i;  \n                kin[i] = 0;  \n        }  \n}  \nvoid uniun(int xroot,int yroot,int x,int y,int o){  \n        par[yroot] = xroot;  \n        kin[yroot] = (kin[x]-kin[y]-o+3)%3;  \n}  \nint find(int x){  \n    if(par[x] == x)return x;  \n    int xroot;  \n    xroot = find(par[x]);  \n    kin[x] = (kin[par[x]]+kin[x]+3)%3;  \n    par[x] = xroot;  \n    return xroot;  \n}  \nint main(){  \n        int n,k;  \n        int x,y,o;  \n        int count = 0;  \n        scanf(\"%d%d\",&n,&k);  \n        init(n);  \n        while(k--){  \n            scanf(\"%d%d%d\",&o,&x,&y);  \n            x--;  \n            y--;  \n            if(x>=n||y>=n){  \n                count++;  \n                continue;  \n            }  \n            int xroot = find(x);  \n            int yroot = find(y);  \n            if(xroot == yroot){  \n                    int u = (kin[x] - kin[y]+3)%3;  \n                    if(u==0 && o == 1){  \n                        continue;  \n                    }  \n                    if(u == 1 && o == 2){  \n                            continue;  \n                    }  \n                    count++;  \n            }else{  \n                    uniun(xroot,yroot,x,y,o-1);  \n            }  \n        }  \n        printf(\"%d\\n\",count);  \n        return 0;  \n}  \n```","source":"_posts/9.md","raw":"title: 并查集 poj食物链\ncategories: 编程与算法\ndate: 2015-08-25 08:28:04\ntags: [poj,uniun]\n---\n一般父类便为更节点更新节点时 kin = 0 \n\n\n<!--more-->\n\n\n```cpp\n#include <iostream>  \n#include <stdio.h>  \nusing namespace std;  \nint par[50000],kin[50000];  \nvoid init(int n){  \n        int i;  \n        for(i=0;i<n;i++){  \n                par[i] = i;  \n                kin[i] = 0;  \n        }  \n}  \nvoid uniun(int xroot,int yroot,int x,int y,int o){  \n        par[yroot] = xroot;  \n        kin[yroot] = (kin[x]-kin[y]-o+3)%3;  \n}  \nint find(int x){  \n    if(par[x] == x)return x;  \n    int xroot;  \n    xroot = find(par[x]);  \n    kin[x] = (kin[par[x]]+kin[x]+3)%3;  \n    par[x] = xroot;  \n    return xroot;  \n}  \nint main(){  \n        int n,k;  \n        int x,y,o;  \n        int count = 0;  \n        scanf(\"%d%d\",&n,&k);  \n        init(n);  \n        while(k--){  \n            scanf(\"%d%d%d\",&o,&x,&y);  \n            x--;  \n            y--;  \n            if(x>=n||y>=n){  \n                count++;  \n                continue;  \n            }  \n            int xroot = find(x);  \n            int yroot = find(y);  \n            if(xroot == yroot){  \n                    int u = (kin[x] - kin[y]+3)%3;  \n                    if(u==0 && o == 1){  \n                        continue;  \n                    }  \n                    if(u == 1 && o == 2){  \n                            continue;  \n                    }  \n                    count++;  \n            }else{  \n                    uniun(xroot,yroot,x,y,o-1);  \n            }  \n        }  \n        printf(\"%d\\n\",count);  \n        return 0;  \n}  \n```","slug":"9","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekih70007ro5u49p8x24z"},{"title":"在ubuntu下配置VPN","date":"2015-08-25T00:26:53.000Z","_content":"好久不写博客了，大部分东西都写进了为知笔记，本来想更换typecho，最后还是用的wp。\n为什么要在ubuntu下用vpn，因为很多时候就在ubuntu下作业啊。\n\n\n<!--more-->\n\n\n废话不多说：首先来最简单的就是\nPPTP 点对点隧道协议：\n这个是ubuntu自带的vpn啦，单击新建一个vpn然后填入网关，用户名和密码。其实网关那里就是填的学长给的地址，本来以为这样就完成了，可是死活连不上。后来打开右下角有个高级设置：\n![vpn.png][1]\n\n然后勾掉PAP、CHAP、EAP 就可以成功连接了。\n再一个就是安装L2TP这个要自己通过包管理来安装了：\n```sh\nsudo apt-add-repository ppa:seriy-pr/network-manager-l2tp\nsudo apt-get install network-manager-l2tp-gnome\nsudo service xl2tpd start\n```\n然后就可以在vpn列表中找到了。\n\n  [1]: http://www.eternalac.com/usr/uploads/2015/07/1129759032.png","source":"_posts/8.md","raw":"title: 在ubuntu下配置VPN\ncategories: 日常维护\ndate: 2015-08-25 08:26:53\ntags: [ubuntu,vpn]\n---\n好久不写博客了，大部分东西都写进了为知笔记，本来想更换typecho，最后还是用的wp。\n为什么要在ubuntu下用vpn，因为很多时候就在ubuntu下作业啊。\n\n\n<!--more-->\n\n\n废话不多说：首先来最简单的就是\nPPTP 点对点隧道协议：\n这个是ubuntu自带的vpn啦，单击新建一个vpn然后填入网关，用户名和密码。其实网关那里就是填的学长给的地址，本来以为这样就完成了，可是死活连不上。后来打开右下角有个高级设置：\n![vpn.png][1]\n\n然后勾掉PAP、CHAP、EAP 就可以成功连接了。\n再一个就是安装L2TP这个要自己通过包管理来安装了：\n```sh\nsudo apt-add-repository ppa:seriy-pr/network-manager-l2tp\nsudo apt-get install network-manager-l2tp-gnome\nsudo service xl2tpd start\n```\n然后就可以在vpn列表中找到了。\n\n  [1]: http://www.eternalac.com/usr/uploads/2015/07/1129759032.png","slug":"8","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekihc000dro5u1bwm68br"},{"title":"Cash Machine poj1276","date":"2015-08-25T00:18:00.000Z","_content":"这是以前在csdn写的博客，因为图太多就仅贴代码吧。如果想看图请移步：http://blog.csdn.net/anjicun/article/details/37772091\n\n\n----------\n动态规划的题 第一次超时 修改后A过\n//做好了图片 可以进行解释此题代码了\n状态方程应该都没问题 fin[i] = max{fin[i],fin[i-w]+w}(w 为价值，fin[i] 表示 当价值为i 时 所能承载的最大价值 )\n//下面这段代码是重点\n```cpp\nwhile (k <= num){  \n        for (int i = cash; i>= k*wei; i--){  \n            fin[i] = max(fin[i],fin[i - k*wei] + k*wei);  \n        }  \n        num -= k;  \n        k <<= 1;  \n    }  \n    for (int i = cash; i>=num * wei; i--){  \n        fin[i] = max(fin[i],fin[i-num * wei] + num * wei);  \n    }  \n```\n\n\n<!--more-->\n\n\n\n下面 用 num = 6 cash = 10w 的例子来解释一下 请看动态图：\n![20140715102713728.gif][1]\n\n第一次循环(灰色) k = 1 < num = 6        fin[10w]~fin[1w] = w\n第二次循环(桔色) k = 2 < num = 5        fin[10w]~fin[3w] = 3w     fin[3w]~fin[2w] = 2w\n第三次无法循环 k = 4 > num = 3 所以到下一段代码进行补充\n\n    for (int i = cash; i>=num * wei; i--)\n\n状态方程 `fin[i] = max{fin[i], fin[i-num*w]+num*w]} (num = 3,3w <= i <= 10w)`\n(黄色)`fin[10w]~fin[6w] = 6w     fin[6w]~fin[5w] = 5w ......`\n其实将 k <<= 1 换成 k++ 同样可以AC 道理是一样的 也同样可以证明\n\n\n```cpp\n#include <iostream>  \n#include <string.h>  \n#include <stdio.h>  \nusing namespace std;  \nint cash;  \nint Num;  \nint fin[100001];  \nint n[1001],w[1001];  \nint max(int x,int y){  \n        if(x>y)return x;  \n        else return y;  \n}  \nvoid inpack(int num,int wei){  \n        if(num*wei >= cash){  \n                for(int i=wei;i<=cash;i++){  \n                        //fin[i] = max(fin[i],fin[i-wei]+wei);  \n                        fin[i] = (fin[i]>(fin[i-wei]+wei))?fin[i]:(fin[i-wei]+wei);  \n                }  \n                return;  \n        }  \n    int k = 1;  \n    while (k <= num){  \n        for (int i = cash; i>= k*wei; i--){  \n            fin[i] = max(fin[i],fin[i - k*wei] + k*wei);  \n        }  \n        num -= k;  \n        k <<= 1;  \n    }  \n    for (int i = cash; i>=num * wei; i--){  \n        fin[i] = max(fin[i],fin[i-num * wei] + num * wei);  \n    }  \n}  \nint main(){  \n    int M,i;  \n    while(scanf(\"%d%d\",&cash,&M)!=EOF){  \n        memset(fin,0,sizeof(fin));  \n        for(i=1;i<=M;i++){  \n            scanf(\"%d%d\",&n[i],&w[i]);  \n        }  \n        for(i=1;i<=M;i++){  \n            inpack(n[i],w[i]);  \n        }  \n        printf(\"%d\\n\",fin[cash]);  \n    }  \n    return 0;     \n}  \n```\n  [1]: http://www.eternalac.com/usr/uploads/2015/07/3191629053.gif","source":"_posts/7.md","raw":"title: Cash Machine poj1276\ncategories: 编程与算法\ndate: 2015-08-25 08:18:00\ntags: [acm,poj]\n---\n这是以前在csdn写的博客，因为图太多就仅贴代码吧。如果想看图请移步：http://blog.csdn.net/anjicun/article/details/37772091\n\n\n----------\n动态规划的题 第一次超时 修改后A过\n//做好了图片 可以进行解释此题代码了\n状态方程应该都没问题 fin[i] = max{fin[i],fin[i-w]+w}(w 为价值，fin[i] 表示 当价值为i 时 所能承载的最大价值 )\n//下面这段代码是重点\n```cpp\nwhile (k <= num){  \n        for (int i = cash; i>= k*wei; i--){  \n            fin[i] = max(fin[i],fin[i - k*wei] + k*wei);  \n        }  \n        num -= k;  \n        k <<= 1;  \n    }  \n    for (int i = cash; i>=num * wei; i--){  \n        fin[i] = max(fin[i],fin[i-num * wei] + num * wei);  \n    }  \n```\n\n\n<!--more-->\n\n\n\n下面 用 num = 6 cash = 10w 的例子来解释一下 请看动态图：\n![20140715102713728.gif][1]\n\n第一次循环(灰色) k = 1 < num = 6        fin[10w]~fin[1w] = w\n第二次循环(桔色) k = 2 < num = 5        fin[10w]~fin[3w] = 3w     fin[3w]~fin[2w] = 2w\n第三次无法循环 k = 4 > num = 3 所以到下一段代码进行补充\n\n    for (int i = cash; i>=num * wei; i--)\n\n状态方程 `fin[i] = max{fin[i], fin[i-num*w]+num*w]} (num = 3,3w <= i <= 10w)`\n(黄色)`fin[10w]~fin[6w] = 6w     fin[6w]~fin[5w] = 5w ......`\n其实将 k <<= 1 换成 k++ 同样可以AC 道理是一样的 也同样可以证明\n\n\n```cpp\n#include <iostream>  \n#include <string.h>  \n#include <stdio.h>  \nusing namespace std;  \nint cash;  \nint Num;  \nint fin[100001];  \nint n[1001],w[1001];  \nint max(int x,int y){  \n        if(x>y)return x;  \n        else return y;  \n}  \nvoid inpack(int num,int wei){  \n        if(num*wei >= cash){  \n                for(int i=wei;i<=cash;i++){  \n                        //fin[i] = max(fin[i],fin[i-wei]+wei);  \n                        fin[i] = (fin[i]>(fin[i-wei]+wei))?fin[i]:(fin[i-wei]+wei);  \n                }  \n                return;  \n        }  \n    int k = 1;  \n    while (k <= num){  \n        for (int i = cash; i>= k*wei; i--){  \n            fin[i] = max(fin[i],fin[i - k*wei] + k*wei);  \n        }  \n        num -= k;  \n        k <<= 1;  \n    }  \n    for (int i = cash; i>=num * wei; i--){  \n        fin[i] = max(fin[i],fin[i-num * wei] + num * wei);  \n    }  \n}  \nint main(){  \n    int M,i;  \n    while(scanf(\"%d%d\",&cash,&M)!=EOF){  \n        memset(fin,0,sizeof(fin));  \n        for(i=1;i<=M;i++){  \n            scanf(\"%d%d\",&n[i],&w[i]);  \n        }  \n        for(i=1;i<=M;i++){  \n            inpack(n[i],w[i]);  \n        }  \n        printf(\"%d\\n\",fin[cash]);  \n    }  \n    return 0;     \n}  \n```\n  [1]: http://www.eternalac.com/usr/uploads/2015/07/3191629053.gif","slug":"7","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekihf000kro5uxteq65id"},{"title":"Ubuntu 重裝後必做操作(二)安裝必備軟件","date":"2015-08-25T00:13:54.000Z","_content":"<!--more-->\n\n\n安裝爲知筆記\n```sh\nsudo add-apt-repository ppa:wiznote-team\nsudo apt-get update\nsudo apt-get install wiznote\n```\n安裝java\n```sh\nsudo add-apt-repository ppa:webupd8team/java\nsudo apt-get update\nsudo apt-get install oracle-java8-installer\n```\n安装zsh\n```sh\nsudo apt-get install zsh\ngit clone https://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh\ncp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc\nchsh -s /bin/zsh\n```\n爲Firefox安裝flash\n在Adobe官网下载flash\n\n    sudo cp libflashplayer.so /usr/lib/mozilla/plugins/","source":"_posts/6.md","raw":"title: Ubuntu 重裝後必做操作(二)安裝必備軟件\ndate: 2015-08-25 08:13:54\ncategories: 日常维护\ntags: [ubuntu,software]\n---\n<!--more-->\n\n\n安裝爲知筆記\n```sh\nsudo add-apt-repository ppa:wiznote-team\nsudo apt-get update\nsudo apt-get install wiznote\n```\n安裝java\n```sh\nsudo add-apt-repository ppa:webupd8team/java\nsudo apt-get update\nsudo apt-get install oracle-java8-installer\n```\n安装zsh\n```sh\nsudo apt-get install zsh\ngit clone https://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh\ncp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc\nchsh -s /bin/zsh\n```\n爲Firefox安裝flash\n在Adobe官网下载flash\n\n    sudo cp libflashplayer.so /usr/lib/mozilla/plugins/","slug":"6","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekihi000pro5uq0ex281s"},{"title":"Ubuntu 重裝後必做操作(一)科學上網","date":"2015-08-25T00:11:58.000Z","_content":"由於今天爲了體驗ubuntu15.04 的Nvidia驅動導致在登錄界面無線循環，無奈重裝了系統，現在重新將步驟記錄一下，以待不時之需：\n\n\n<!--more-->\n\n\n1、首先是科學上網安裝shadowsocks\n\n    sudo apt-get install python-gevent python-pip\n    sudo pip install shadowsocks\n創建json配置文件shadow.json\n\n    {\n        \"server\":\"xxx.xxx.xxx.xxx\",\n        \"server_port\":8080,\n        \"local_port\":1080,\n        \"password\":\"xxxxxx\",\n        \"timeout\":600,\n        \"method\":\"aes-256-cfb\"\n    }\n編寫腳本運行shadows.sh\n\n    #!/bin/sh \n    sslocal -c shadow.json\n讓其後臺運行\n\n    nohup ./shadows.sh > log &","source":"_posts/5.md","raw":"title: Ubuntu 重裝後必做操作(一)科學上網\ndate: 2015-08-25 08:11:58\ncategories: 日常维护\ntags: [ubuntu,shadowsocks,ss]\n---\n由於今天爲了體驗ubuntu15.04 的Nvidia驅動導致在登錄界面無線循環，無奈重裝了系統，現在重新將步驟記錄一下，以待不時之需：\n\n\n<!--more-->\n\n\n1、首先是科學上網安裝shadowsocks\n\n    sudo apt-get install python-gevent python-pip\n    sudo pip install shadowsocks\n創建json配置文件shadow.json\n\n    {\n        \"server\":\"xxx.xxx.xxx.xxx\",\n        \"server_port\":8080,\n        \"local_port\":1080,\n        \"password\":\"xxxxxx\",\n        \"timeout\":600,\n        \"method\":\"aes-256-cfb\"\n    }\n編寫腳本運行shadows.sh\n\n    #!/bin/sh \n    sslocal -c shadow.json\n讓其後臺運行\n\n    nohup ./shadows.sh > log &","slug":"5","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekihm000uro5ua97972vl"},{"title":"在java程序中将spark的RDD缓存到tachyon中","date":"2016-01-01T08:48:59.000Z","_content":"之前做好了可以在`spark`中读取`tachyon`的配置，但是使用`rdd.persist(StorageLevel.OFF_HEAP)`就出错，经过不断的排错和寻找，终于解决了这个问题。并且也可以在`java`中去设置了，之前设置一直出错。\n\n<!--more-->\n\n## 1 spark的路径配置\n其实`spark`这个配置文件之前一直忘记配置：就是在`spark/conf`下的`spark-defaults.conf.template`首先执行:\n\n```shell\ncp spark-defaults.conf.template spark-defaults.conf\n```\n然后在里面加入:\n```conf\nspark.tachyonStore.url\ttachyon://master:19998\n```\n其实还有一个属性`park.tachyonStore.baseDir`可以不加的，如果不加使用的是默认位置，其实是我加上之后就会报错，所以我才不加。\n\n加好之后重启，然后运行`spark-shell`。\n执行下述步骤:\n```scala\nscala> import org.apache.spark.storage.StorageLevel\nscala> val rdd = sc.textFile(\"tachyon://master:19998/hhu/input/f2\")\nscala> rdd.persist(StorageLevel.OFF_HEAP)\nscala> rdd.count()\n```\n执行成功即可表示配置完成，可以在`master:19999`文件浏览查看到临时创建的目录，但是已经没有东西了，因为运行结束之后就会删除。\n\n## 2 在java中使用\n\n在`scala`中使用的好方便，但是`java`中总是出错。而且又没几个人用`java`去写。所以之后自己接着查`api`，最后还是搞定了。\n\n开始要在`hadoop`配置里面加上`\"fs.tachyon.impl\", \"tachyon.hadoop.TFS\"`。\n\n然后就是获取到`RDD`后，要先执行`rdd.unpersist();`然后才能重新设置。否则会报错。例子贴一下：\n```java\npackage edu.hhu.innerac.sparktest;  \n\nimport org.apache.spark.SparkConf;\nimport org.apache.spark.api.java.JavaRDD;\nimport org.apache.spark.api.java.JavaSparkContext;\nimport org.apache.spark.storage.StorageLevel;\n \npublic class Test {\n \n    static final String USER = \"innerac\";\n \n    public static void main(String[] args) throws Exception {\n\n    \tSparkConf conf = new SparkConf();\n    \t\n        JavaSparkContext sc = new JavaSparkContext(\"spark://master:7077\", \"Spark App 0\", conf);\n        \n        sc.hadoopConfiguration().set(\"fs.tachyon.impl\", \"tachyon.hadoop.TFS\");\n//        String file = \"hdfs://master:9000/hhu/input/f2\";\n        String file = \"tachyon://master:19998/hhu/input/f2\";\n        \n        JavaRDD<String> rdd = null;\n        \n        rdd = sc.textFile(file, 4).cache();\n        \n        rdd.unpersist();\n        rdd.persist(StorageLevel.OFF_HEAP());\n        System.out.println(rdd.count());\n        \n    }\n \n}\n```","source":"_posts/42.md","raw":"title: 在java程序中将spark的RDD缓存到tachyon中\ndate: 2016-01-01 16:48:59\ncategories: 编程与算法\ntags: [spark,tachyon,大数据,java]\n---\n之前做好了可以在`spark`中读取`tachyon`的配置，但是使用`rdd.persist(StorageLevel.OFF_HEAP)`就出错，经过不断的排错和寻找，终于解决了这个问题。并且也可以在`java`中去设置了，之前设置一直出错。\n\n<!--more-->\n\n## 1 spark的路径配置\n其实`spark`这个配置文件之前一直忘记配置：就是在`spark/conf`下的`spark-defaults.conf.template`首先执行:\n\n```shell\ncp spark-defaults.conf.template spark-defaults.conf\n```\n然后在里面加入:\n```conf\nspark.tachyonStore.url\ttachyon://master:19998\n```\n其实还有一个属性`park.tachyonStore.baseDir`可以不加的，如果不加使用的是默认位置，其实是我加上之后就会报错，所以我才不加。\n\n加好之后重启，然后运行`spark-shell`。\n执行下述步骤:\n```scala\nscala> import org.apache.spark.storage.StorageLevel\nscala> val rdd = sc.textFile(\"tachyon://master:19998/hhu/input/f2\")\nscala> rdd.persist(StorageLevel.OFF_HEAP)\nscala> rdd.count()\n```\n执行成功即可表示配置完成，可以在`master:19999`文件浏览查看到临时创建的目录，但是已经没有东西了，因为运行结束之后就会删除。\n\n## 2 在java中使用\n\n在`scala`中使用的好方便，但是`java`中总是出错。而且又没几个人用`java`去写。所以之后自己接着查`api`，最后还是搞定了。\n\n开始要在`hadoop`配置里面加上`\"fs.tachyon.impl\", \"tachyon.hadoop.TFS\"`。\n\n然后就是获取到`RDD`后，要先执行`rdd.unpersist();`然后才能重新设置。否则会报错。例子贴一下：\n```java\npackage edu.hhu.innerac.sparktest;  \n\nimport org.apache.spark.SparkConf;\nimport org.apache.spark.api.java.JavaRDD;\nimport org.apache.spark.api.java.JavaSparkContext;\nimport org.apache.spark.storage.StorageLevel;\n \npublic class Test {\n \n    static final String USER = \"innerac\";\n \n    public static void main(String[] args) throws Exception {\n\n    \tSparkConf conf = new SparkConf();\n    \t\n        JavaSparkContext sc = new JavaSparkContext(\"spark://master:7077\", \"Spark App 0\", conf);\n        \n        sc.hadoopConfiguration().set(\"fs.tachyon.impl\", \"tachyon.hadoop.TFS\");\n//        String file = \"hdfs://master:9000/hhu/input/f2\";\n        String file = \"tachyon://master:19998/hhu/input/f2\";\n        \n        JavaRDD<String> rdd = null;\n        \n        rdd = sc.textFile(file, 4).cache();\n        \n        rdd.unpersist();\n        rdd.persist(StorageLevel.OFF_HEAP());\n        System.out.println(rdd.count());\n        \n    }\n \n}\n```","slug":"42","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekihs0011ro5uhtijs99s"},{"title":"hexo和npm重启或注销之后找不到命令解决办法","date":"2015-12-31T07:22:38.000Z","_content":"最近入手了250G的SSD,所以愉快的将系统重装，重装之后要做的事情在之前都记录过了，只要安装步骤一步一步来就可以装好。但是，问题来了，我装好`hexo`后，重启或注销之后，会提示`commend not found`,真是*了`dog`了。遇到问题先`google`，结果没人遇到像我这么蠢的问题。只好自己解决了。\n\n<!--more-->\n\n其实我一直以为肯定装好了，只是没有链接过来，所以我机智的输入命令`locate npm`,在乱如麻的日志中找到到了这个:\n```shell\n/home/innerac/.nvm/v0.10.41/lib/node_modules/hexo/bin/hexo\n```\n就是他，然后我把他加入到了`PATH`中，\n```shell\n#hexo\nexport PATH=/home/innerac/.nvm/v0.10.41/lib/node_modules/hexo/bin:$PATH\n```\n重启或注销还是可以用了。","source":"_posts/41.md","raw":"title: hexo和npm重启或注销之后找不到命令解决办法\ndate: 2015-12-31 15:22:38\ncategories: 日常维护\ntags: [ubuntu,hexo,nodejs]\n---\n最近入手了250G的SSD,所以愉快的将系统重装，重装之后要做的事情在之前都记录过了，只要安装步骤一步一步来就可以装好。但是，问题来了，我装好`hexo`后，重启或注销之后，会提示`commend not found`,真是*了`dog`了。遇到问题先`google`，结果没人遇到像我这么蠢的问题。只好自己解决了。\n\n<!--more-->\n\n其实我一直以为肯定装好了，只是没有链接过来，所以我机智的输入命令`locate npm`,在乱如麻的日志中找到到了这个:\n```shell\n/home/innerac/.nvm/v0.10.41/lib/node_modules/hexo/bin/hexo\n```\n就是他，然后我把他加入到了`PATH`中，\n```shell\n#hexo\nexport PATH=/home/innerac/.nvm/v0.10.41/lib/node_modules/hexo/bin:$PATH\n```\n重启或注销还是可以用了。","slug":"41","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekihw001bro5ua8k9l9lw"},{"title":"整合tachyon,hadoop和spark","date":"2015-12-31T07:01:01.000Z","_content":"# 整合tachyon,hadoop和spark\n\n承接上述三篇文章，现在终于要整合了，在整合中还是出现了`spark`与`tachyon`不匹配的问题，官方给出的匹配列表如下：\n\n<table class=\"table table-bordered table-striped table-condensed\"> <tr> <td>Spark Version</td> <td>Tachyon Version</td> </tr> <tr> <td>1.0.x and Below</td> <td>v0.4.1</td> </tr> <tr> <td>1.1.x</td> <td>v0.5.0</td> </tr> <tr> <td>1.2.x</td> <td>v0.5.0</td> </tr> <tr> <td>1.3.x</td> <td>v0.5.0</td> </tr> <tr> <td>1.4.x</td> <td>v0.6.4</td> </tr> <tr> <td>1.5.x</td> <td>v0.7.1</td> </tr> </table>\n\n因为我用的是`spark1.3.1`所以又重新编译了`tachyon0.5.0`过程是一样的，接下来默认的`tachyon`版本就是\n`0.5.0`了。而且也不用创建`tachyon/conf`下的`core-site.xml`文件了。\n<!--more-->\n\n## 1 tachyon与hdfs\n其实在官方文档上说的很清楚，只不过，域名不好记，我就单独记录我的配置过程。\n因为我的`hadoop`版本是`2.x.x`为了不出错还是要在`hadoop/etc/hadoop/core-site.xml`下加入:\n```xml\n<property>\n    <name>fs.tachyon.impl</name>\n    <value>tachyon.hadoop.TFS</value>\n</property>\n<property>\n    <name>fs.tachyon-ft.impl</name>\n    <value>tachyon.hadoop.TFSFT</value>\n</property>\n```\n然后将`tachyon`下的`jar`包复制到`hadoop/lib`下。`jar`包的路径是`tachyon-0.5.0/core/target`下的`tachyon-0.5.0-jar-with-dependencies.jar`\n\n然后`hadoop`的就配置完成了，可以测试一个小例子：\n\n要先导入`tachyon`的包。这里安装教程通过`maven`导入：\n\n```xml\n<dependency>\n    <groupId>org.tachyonproject</groupId>\n    <artifactId>tachyon-client</artifactId>\n    <version>0.5.0</version>\n</dependency>\n```\n\n```java\npackage edu.hhu.innerac.tachyontest;\n\nimport java.io.IOException;\nimport tachyon.TachyonURI;\nimport tachyon.client.InStream;\nimport tachyon.client.OutStream;\nimport tachyon.client.ReadType;\nimport tachyon.client.TachyonFS;\nimport tachyon.client.TachyonFile;\nimport tachyon.client.WriteType;\n\npublic class Demo {\n    public void test() throws IOException{\n    \tString masterurl = \"tachyon://master:19998\";\n    \tTachyonFS tachyonFS = TachyonFS.get(masterurl);\n        TachyonURI filepaths = new TachyonURI(\"/tmp/test/newFile2\");\n        if(tachyonFS.exist(filepaths)){\n        \ttachyonFS.delete(filepaths, true);\n        }\n    \ttachyonFS.createFile(filepaths,10240);\n        TachyonFile tachyonFile = tachyonFS.getFile(filepaths);\n        OutStream o = tachyonFile.getOutStream(WriteType.TRY_CACHE);\n        for(int i = 0; i < 30; i ++){\n            o.write(Integer.toString(i).getBytes());\n        }\n        o.close();\n        InStream in = tachyonFile.getInStream(ReadType.CACHE);\n        byte[] bytes = new byte[100];\n        in.read(bytes);\n        System.out.println(new String(bytes));\n        in.close();\n    \ttachyonFS.close();\n    }\n     \n    public static void main(String[] args) throws IOException {\n    \tDemo demo = new Demo();\n    \tdemo.test();\n    }\n}\n```\n运行成功就没错啦。\n\n## 2 tachyon与spark整合\n问题就是出在这里，因为用的`spark`版本不匹配导致了各种问题。\n\n同样要将那个`jar`包放到`$SPARK_CLASSPATH`的目录下。我第一次放了，但是没起作用，所以我在`spark-evn.sh`里是这样写的:\n```bash\nexport SPARK_CLASSPATH=$SPARK_HOME/lib\nexport SPARK_CLASSPATH=$SPARK_HOME/lib/tachyon-0.5.0-jar-with-dependencies.jar:$SPARK_CLASSPATH\n```\n在之前我已经把`jar`包放到`lib`目录下了。\n\n写好之后启动`spark``hadoop`和`tachyon`,然后打开`spark-shell`\n假设存在`hdfs://master:9000/hhu/input/f2`其实是上次放过去的。\n然后执行下面命令:\n```scala\nval rdd = sc.textFile(\"tachyon://master:19998/hhu/input/f2\")\nval double = rdd.map(line=>line +line)\ndouble.saveAsTextFile(\"tachyon://master:19998/output3\")\n```\n\n这是最后输出的一点日志。证明写入成功了。\n\n>15/12/31 14:13:20 INFO : FileDoesNotExistException(message:Failed to getClientFileInfo: /output3/part-00001 does not exist)/output3/part-00001\n15/12/31 14:13:20 INFO : File does not exist: tachyon://master:19998/output3/part-00001\n15/12/31 14:13:20 INFO : rename(tachyon://master:19998/output3/_temporary/0/task_201512311413_0000_m_000001/part-00001, tachyon://master:19998/output3/part-00001)\n15/12/31 14:13:20 INFO : delete(tachyon://master:19998/output3/_temporary, true)\n15/12/31 14:13:20 INFO : create(tachyon://master:19998/output3/_SUCCESS, rw-r--r--, true, 65536, 1, 33554432, null)\n\n## 3 附带几个HelloWorld\n### 3.1 hadoop WordCount\n```java\npackage edu.hhu.innerac.hadooptest;\n\nimport java.io.IOException;\nimport java.util.*;\nimport org.apache.hadoop.fs.Path;\nimport org.apache.hadoop.io.*;\nimport org.apache.hadoop.mapred.*;\n\npublic class WordCount {\n\tpublic static class Map extends MapReduceBase implements Mapper<LongWritable, Text, Text, IntWritable> {\n\t\tprivate final static IntWritable one = new IntWritable(1);\n\t\tprivate Text word = new Text();\n\t\tpublic void map(LongWritable key, Text value, OutputCollector<Text, IntWritable> output, Reporter reporter)\n\t\t\t\tthrows IOException {\n\t\t\tString line = value.toString();\n\t\t\tStringTokenizer tokenizer = new StringTokenizer(line);\n\t\t\twhile (tokenizer.hasMoreTokens()) {\n\t\t\t\tword.set(tokenizer.nextToken());\n\t\t\t\toutput.collect(word, one);\n\t\t\t}\n\t\t}\n\t}\n\tpublic static class Reduce extends MapReduceBase implements Reducer<Text, IntWritable, Text, IntWritable> {\n\t\tpublic void reduce(Text key, Iterator<IntWritable> values, OutputCollector<Text, IntWritable> output,\n\t\t\t\tReporter reporter) throws IOException {\n\t\t\tint sum = 0;\n\t\t\twhile (values.hasNext()) {\n\t\t\t\tsum += values.next().get();\n\t\t\t}\n\t\t\toutput.collect(key, new IntWritable(sum));\n\t\t}\n\t}\n\tpublic static void main(String[] args) throws Exception {\n\t\tJobConf conf = new JobConf(WordCount.class);\n\t\tconf.setJobName(\"wordcount\");\n\t\tconf.setOutputKeyClass(Text.class);\n\t\tconf.setOutputValueClass(IntWritable.class);\n\t\tconf.setMapperClass(Map.class);\n\t\tconf.setReducerClass(Reduce.class);\n\t\tconf.setInputFormat(TextInputFormat.class);\n\t\tconf.setOutputFormat(TextOutputFormat.class);\n\t\tFileInputFormat.setInputPaths(conf, new Path(args[0]));\n\t\tFileOutputFormat.setOutputPath(conf, new Path(args[1]));\n\t\tJobClient.runJob(conf);\n\t}\n}\n```\n### 3.2 Spark\n```java\npackage edu.hhu.innerac.sparktest;  \n\nimport java.util.HashMap;\nimport java.util.Map;\nimport org.apache.spark.api.java.JavaRDD;\nimport org.apache.spark.api.java.JavaSparkContext;\nimport org.apache.spark.rdd.RDD;\nimport org.apache.spark.storage.StorageLevel;\n \npublic class Test {\n    static final String USER = \"innerac\";\n    public static void main(String[] args) throws Exception {\n        System.setProperty(\"user.name\", USER); // 设置访问Spark使用的用户名\n        System.setProperty(\"HADOOP_USER_NAME\", USER); // 设置访问Hadoop使用的用户名\n        Map<String,String> envs = new HashMap<String, String>();\n        envs.put(\"HADOOP_USER_NAME\", USER); // 为Spark环境中服务于本App的各个Executor程序设置访问Hadoop使用的用户名\n        System.setProperty(\"spark.executor.memory\", \"512m\"); // 为Spark环境中服务于本App的各个Executor程序设置使用内存量的上限\n        // 以下构造sc对象的构造方法各参数意义依次为：\n        //   Spark Master的地址；\n        //   App的名称；\n        //   Spark Worker的部署位置；\n        //   需要提供给本App的各个Executor程序下载的jar包的路径列表，这些jar包将出现在Executor程序的类路径中；\n        //   传递给本App的各个Executor程序的环境信息。\n        JavaSparkContext sc = new JavaSparkContext(\"spark://master:7077\", \"Spark App 0\", \"/usr/local/bigdata/spark\", new String[0], envs);\n//        String file = \"hdfs://master:9000/output2/part-00000\";\n        String file = \"hdfs://master:9000/hhu/input/f2\";\n        JavaRDD<String> data = sc.textFile(file, 4).cache().persist(StorageLevel.OFF_HEAP());\n        System.out.println(data.count());\n    }\n}\n```\n\n### 3.3 tachyon\n`tachyon`的例子就是上面那个.","source":"_posts/40.md","raw":"title: 整合tachyon,hadoop和spark\ndate: 2015-12-31 15:01:01\ncategories: 编程与算法\ntags: [hadoop,spark,tachyon,大数据]\n---\n# 整合tachyon,hadoop和spark\n\n承接上述三篇文章，现在终于要整合了，在整合中还是出现了`spark`与`tachyon`不匹配的问题，官方给出的匹配列表如下：\n\n<table class=\"table table-bordered table-striped table-condensed\"> <tr> <td>Spark Version</td> <td>Tachyon Version</td> </tr> <tr> <td>1.0.x and Below</td> <td>v0.4.1</td> </tr> <tr> <td>1.1.x</td> <td>v0.5.0</td> </tr> <tr> <td>1.2.x</td> <td>v0.5.0</td> </tr> <tr> <td>1.3.x</td> <td>v0.5.0</td> </tr> <tr> <td>1.4.x</td> <td>v0.6.4</td> </tr> <tr> <td>1.5.x</td> <td>v0.7.1</td> </tr> </table>\n\n因为我用的是`spark1.3.1`所以又重新编译了`tachyon0.5.0`过程是一样的，接下来默认的`tachyon`版本就是\n`0.5.0`了。而且也不用创建`tachyon/conf`下的`core-site.xml`文件了。\n<!--more-->\n\n## 1 tachyon与hdfs\n其实在官方文档上说的很清楚，只不过，域名不好记，我就单独记录我的配置过程。\n因为我的`hadoop`版本是`2.x.x`为了不出错还是要在`hadoop/etc/hadoop/core-site.xml`下加入:\n```xml\n<property>\n    <name>fs.tachyon.impl</name>\n    <value>tachyon.hadoop.TFS</value>\n</property>\n<property>\n    <name>fs.tachyon-ft.impl</name>\n    <value>tachyon.hadoop.TFSFT</value>\n</property>\n```\n然后将`tachyon`下的`jar`包复制到`hadoop/lib`下。`jar`包的路径是`tachyon-0.5.0/core/target`下的`tachyon-0.5.0-jar-with-dependencies.jar`\n\n然后`hadoop`的就配置完成了，可以测试一个小例子：\n\n要先导入`tachyon`的包。这里安装教程通过`maven`导入：\n\n```xml\n<dependency>\n    <groupId>org.tachyonproject</groupId>\n    <artifactId>tachyon-client</artifactId>\n    <version>0.5.0</version>\n</dependency>\n```\n\n```java\npackage edu.hhu.innerac.tachyontest;\n\nimport java.io.IOException;\nimport tachyon.TachyonURI;\nimport tachyon.client.InStream;\nimport tachyon.client.OutStream;\nimport tachyon.client.ReadType;\nimport tachyon.client.TachyonFS;\nimport tachyon.client.TachyonFile;\nimport tachyon.client.WriteType;\n\npublic class Demo {\n    public void test() throws IOException{\n    \tString masterurl = \"tachyon://master:19998\";\n    \tTachyonFS tachyonFS = TachyonFS.get(masterurl);\n        TachyonURI filepaths = new TachyonURI(\"/tmp/test/newFile2\");\n        if(tachyonFS.exist(filepaths)){\n        \ttachyonFS.delete(filepaths, true);\n        }\n    \ttachyonFS.createFile(filepaths,10240);\n        TachyonFile tachyonFile = tachyonFS.getFile(filepaths);\n        OutStream o = tachyonFile.getOutStream(WriteType.TRY_CACHE);\n        for(int i = 0; i < 30; i ++){\n            o.write(Integer.toString(i).getBytes());\n        }\n        o.close();\n        InStream in = tachyonFile.getInStream(ReadType.CACHE);\n        byte[] bytes = new byte[100];\n        in.read(bytes);\n        System.out.println(new String(bytes));\n        in.close();\n    \ttachyonFS.close();\n    }\n     \n    public static void main(String[] args) throws IOException {\n    \tDemo demo = new Demo();\n    \tdemo.test();\n    }\n}\n```\n运行成功就没错啦。\n\n## 2 tachyon与spark整合\n问题就是出在这里，因为用的`spark`版本不匹配导致了各种问题。\n\n同样要将那个`jar`包放到`$SPARK_CLASSPATH`的目录下。我第一次放了，但是没起作用，所以我在`spark-evn.sh`里是这样写的:\n```bash\nexport SPARK_CLASSPATH=$SPARK_HOME/lib\nexport SPARK_CLASSPATH=$SPARK_HOME/lib/tachyon-0.5.0-jar-with-dependencies.jar:$SPARK_CLASSPATH\n```\n在之前我已经把`jar`包放到`lib`目录下了。\n\n写好之后启动`spark``hadoop`和`tachyon`,然后打开`spark-shell`\n假设存在`hdfs://master:9000/hhu/input/f2`其实是上次放过去的。\n然后执行下面命令:\n```scala\nval rdd = sc.textFile(\"tachyon://master:19998/hhu/input/f2\")\nval double = rdd.map(line=>line +line)\ndouble.saveAsTextFile(\"tachyon://master:19998/output3\")\n```\n\n这是最后输出的一点日志。证明写入成功了。\n\n>15/12/31 14:13:20 INFO : FileDoesNotExistException(message:Failed to getClientFileInfo: /output3/part-00001 does not exist)/output3/part-00001\n15/12/31 14:13:20 INFO : File does not exist: tachyon://master:19998/output3/part-00001\n15/12/31 14:13:20 INFO : rename(tachyon://master:19998/output3/_temporary/0/task_201512311413_0000_m_000001/part-00001, tachyon://master:19998/output3/part-00001)\n15/12/31 14:13:20 INFO : delete(tachyon://master:19998/output3/_temporary, true)\n15/12/31 14:13:20 INFO : create(tachyon://master:19998/output3/_SUCCESS, rw-r--r--, true, 65536, 1, 33554432, null)\n\n## 3 附带几个HelloWorld\n### 3.1 hadoop WordCount\n```java\npackage edu.hhu.innerac.hadooptest;\n\nimport java.io.IOException;\nimport java.util.*;\nimport org.apache.hadoop.fs.Path;\nimport org.apache.hadoop.io.*;\nimport org.apache.hadoop.mapred.*;\n\npublic class WordCount {\n\tpublic static class Map extends MapReduceBase implements Mapper<LongWritable, Text, Text, IntWritable> {\n\t\tprivate final static IntWritable one = new IntWritable(1);\n\t\tprivate Text word = new Text();\n\t\tpublic void map(LongWritable key, Text value, OutputCollector<Text, IntWritable> output, Reporter reporter)\n\t\t\t\tthrows IOException {\n\t\t\tString line = value.toString();\n\t\t\tStringTokenizer tokenizer = new StringTokenizer(line);\n\t\t\twhile (tokenizer.hasMoreTokens()) {\n\t\t\t\tword.set(tokenizer.nextToken());\n\t\t\t\toutput.collect(word, one);\n\t\t\t}\n\t\t}\n\t}\n\tpublic static class Reduce extends MapReduceBase implements Reducer<Text, IntWritable, Text, IntWritable> {\n\t\tpublic void reduce(Text key, Iterator<IntWritable> values, OutputCollector<Text, IntWritable> output,\n\t\t\t\tReporter reporter) throws IOException {\n\t\t\tint sum = 0;\n\t\t\twhile (values.hasNext()) {\n\t\t\t\tsum += values.next().get();\n\t\t\t}\n\t\t\toutput.collect(key, new IntWritable(sum));\n\t\t}\n\t}\n\tpublic static void main(String[] args) throws Exception {\n\t\tJobConf conf = new JobConf(WordCount.class);\n\t\tconf.setJobName(\"wordcount\");\n\t\tconf.setOutputKeyClass(Text.class);\n\t\tconf.setOutputValueClass(IntWritable.class);\n\t\tconf.setMapperClass(Map.class);\n\t\tconf.setReducerClass(Reduce.class);\n\t\tconf.setInputFormat(TextInputFormat.class);\n\t\tconf.setOutputFormat(TextOutputFormat.class);\n\t\tFileInputFormat.setInputPaths(conf, new Path(args[0]));\n\t\tFileOutputFormat.setOutputPath(conf, new Path(args[1]));\n\t\tJobClient.runJob(conf);\n\t}\n}\n```\n### 3.2 Spark\n```java\npackage edu.hhu.innerac.sparktest;  \n\nimport java.util.HashMap;\nimport java.util.Map;\nimport org.apache.spark.api.java.JavaRDD;\nimport org.apache.spark.api.java.JavaSparkContext;\nimport org.apache.spark.rdd.RDD;\nimport org.apache.spark.storage.StorageLevel;\n \npublic class Test {\n    static final String USER = \"innerac\";\n    public static void main(String[] args) throws Exception {\n        System.setProperty(\"user.name\", USER); // 设置访问Spark使用的用户名\n        System.setProperty(\"HADOOP_USER_NAME\", USER); // 设置访问Hadoop使用的用户名\n        Map<String,String> envs = new HashMap<String, String>();\n        envs.put(\"HADOOP_USER_NAME\", USER); // 为Spark环境中服务于本App的各个Executor程序设置访问Hadoop使用的用户名\n        System.setProperty(\"spark.executor.memory\", \"512m\"); // 为Spark环境中服务于本App的各个Executor程序设置使用内存量的上限\n        // 以下构造sc对象的构造方法各参数意义依次为：\n        //   Spark Master的地址；\n        //   App的名称；\n        //   Spark Worker的部署位置；\n        //   需要提供给本App的各个Executor程序下载的jar包的路径列表，这些jar包将出现在Executor程序的类路径中；\n        //   传递给本App的各个Executor程序的环境信息。\n        JavaSparkContext sc = new JavaSparkContext(\"spark://master:7077\", \"Spark App 0\", \"/usr/local/bigdata/spark\", new String[0], envs);\n//        String file = \"hdfs://master:9000/output2/part-00000\";\n        String file = \"hdfs://master:9000/hhu/input/f2\";\n        JavaRDD<String> data = sc.textFile(file, 4).cache().persist(StorageLevel.OFF_HEAP());\n        System.out.println(data.count());\n    }\n}\n```\n\n### 3.3 tachyon\n`tachyon`的例子就是上面那个.","slug":"40","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekihz001iro5uvjcmz4y0"},{"title":"Androidx86 ubuntu 引导","date":"2015-08-25T00:10:48.000Z","_content":"閒極無聊，把自己很老的一個上網本裝了個ubuntu與Android X86的雙系統，由於Android的引導式grub1,所以沒辦法引導ubuntu，所以使用Ubuntu的引導來啓動Android。\n\n\n<!--more-->\n\n\n首先修改啓動文件\n\n    sudo gedit /etc/grub.d/40_custom\n在文件下添加下面內容，注意sda3，與hd0,3這些要根據你自己的實際情況來修改\n\n    menuentry “Android-x86 4.4.2 r2″ {\n    set root=(hd0,3)\n    linux /android-4.4-r2/kernel quiet root=/dev/sda3 androidboot.hardware=android_x86 video=-16 SRC=/android-4.4-r2\n    initrd /android-4.4-r2/initrd.img\n    }\n然後更新引導\n\n    sudo grub-mkconfig\n    sudo update-grub\n\n添加完成後，總是無法進入到選擇頁面，後來發現，講快速啓動設爲0就可以了\n\n    sudo gedit /etc/grub.d/00_header\n\n    quick_boot=”0”\n    if [ “$quick_boot” = 1 ];\n    then\n    ([ “$quick_boot” = 1 ] || [ “x${1}” != “x0″ ]) ;\n    then\n\n修改後完美啓動","source":"_posts/4.md","raw":"title: Androidx86 ubuntu 引导\ndate: 2015-08-25 08:10:48\ncategories: 日常维护\ntags: [Android,ubuntu]\n---\n閒極無聊，把自己很老的一個上網本裝了個ubuntu與Android X86的雙系統，由於Android的引導式grub1,所以沒辦法引導ubuntu，所以使用Ubuntu的引導來啓動Android。\n\n\n<!--more-->\n\n\n首先修改啓動文件\n\n    sudo gedit /etc/grub.d/40_custom\n在文件下添加下面內容，注意sda3，與hd0,3這些要根據你自己的實際情況來修改\n\n    menuentry “Android-x86 4.4.2 r2″ {\n    set root=(hd0,3)\n    linux /android-4.4-r2/kernel quiet root=/dev/sda3 androidboot.hardware=android_x86 video=-16 SRC=/android-4.4-r2\n    initrd /android-4.4-r2/initrd.img\n    }\n然後更新引導\n\n    sudo grub-mkconfig\n    sudo update-grub\n\n添加完成後，總是無法進入到選擇頁面，後來發現，講快速啓動設爲0就可以了\n\n    sudo gedit /etc/grub.d/00_header\n\n    quick_boot=”0”\n    if [ “$quick_boot” = 1 ];\n    then\n    ([ “$quick_boot” = 1 ] || [ “x${1}” != “x0″ ]) ;\n    then\n\n修改後完美啓動","slug":"4","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekii3001pro5udy9kzl1s"},{"title":"tachyon0.7.0分布式配置","date":"2015-12-28T07:25:18.000Z","_content":"# 自己编译tachyon0.7.0关联hadoop2.6.0\n\n由于使用编译好的`tachyon`和自己的hadoop连接不上，总是出现下面这个问题：\n\n>org.apache.hadoop.ipc.RemoteException: Server IPC version 9 cannot communicate with client version 4 at org.apache.hadoop.ipc.Client.call(Client.java:1070)\n\n无奈只好自己编译了。\n\n在这里还是承接一面两篇文章，拥有一个`master`一个`slave`.\n<!--more-->\n## 安装`maven`\n首先安装`maven`在`ubuntu`下使用命令\n```shell\nsudo apt-get install maven\n```\n\n## 编译`tachyon`\n首先下载`tachyon0.7.0`\n```shell\nwget https://github.com/amplab/tachyon/archive/v0.7.0.zip\n```\n然后解压并且移动到我们的大数据文件夹\n```shell\nmv v0.7.0 tachyon-0.7.0.zip\nunzip tachyon-0.7.0.zip\nmv tachyon-0.7.0.zip /usr/local/bigdata/\ncd tachyon-0.7.0\n```\n然后开始编译，记得加上自己的`hadoop`版本，他默认的好像是hadoop1.x的版本，会造成一种错误\n>org.apache.hadoop.ipc.RemoteException: Server IPC version 9 cannot communicate with client version 4 at org.apache.hadoop.ipc.Client.call(Client.java:1070)\n\n编译的时候要用`mvn`,所以在源码文件夹下执行:\n```shell\nmvn -Dhadoop.version=2.6.0 clean package -DskipTests=true\n```\n额，我在虚拟机中编译了大概20分钟。\n编译完成后，在源码目录下创建几个文件夹：\n```shell\nmkdir journal\nmkdir ramdisk\n```\n\n## 配置`tachyon`\n首先在`.bashrc`中添加环境变量：\n```shell\n#tachyon\nexport TACHYON_HOME=/usr/local/bigdata/tachyon-0.7.0\nexport PATH=$TACHYON_HOME/bin:$PATH\n```\n然后将`conf`文件夹下的`tachyon-env.sh.template`改名为`tachyon-env.sh`\n```shell\ncp conf/tachyon-env.sh.template conf/tachyon-env.sh\nvim conf/tachyon-evn.sh\n```\n修改其中的配置文件：\n```shell\nexport TACHYON_MASTER_ADDRESS=master\n#export TACHYON_UNDERFS_ADDRESS=$TACHYON_HOME/underFSStorage\nexport TACHYON_UNDERFS_ADDRESS=hdfs://master:9000\n\n-Dtachyon.master.journal.folder=$TACHYON_HOME/journal     #这一条不改好像也没多少关系\n```\n然后设置日志的输出位置，默认是命令行中。\n```\nvim conf/log4j.properties\n```\n在`=`后面写上地址就好了.\n\n>tachyon.logs.dir=/usr/local/bigdata/tachyon-0.7.0/logs\n\n接下来在`conf`下创建`core-site.xml`:\n```shell\nvim conf/core-site.xml\n```\n在里面添加:\n```xml\n<configuration>\n　　<property>\n　　　　<name>fs.tachyon.impl</name>\n　　　　<value>tachyon.hadoop.TFS</value>\n　　</property>\n</configuration>\n```\n最后，在`conf/workers`里面添加`slave`.\n然后将`tachyon-0.7.0`这个文件夹分发到`slave`节点.\n\n## 启动`tachyon`\n启动之前首先应该格式化:\n```shell\nbin/tachyon format\n```\n因为我不是用`root`账户登录的，所以只能用下面这条命令运行:\n```shell\nbin/tachyon-start.sh all SudoMount\n```\n输入密码后，即可完成启动，可以在`master:19999`查看情况，也可以通过`jps`去查看。\n","source":"_posts/39.md","raw":"title: tachyon0.7.0分布式配置\ndate: 2015-12-28 15:25:18\ncategories: 编程与算法\ntags: [tachyon,大数据]\n---\n# 自己编译tachyon0.7.0关联hadoop2.6.0\n\n由于使用编译好的`tachyon`和自己的hadoop连接不上，总是出现下面这个问题：\n\n>org.apache.hadoop.ipc.RemoteException: Server IPC version 9 cannot communicate with client version 4 at org.apache.hadoop.ipc.Client.call(Client.java:1070)\n\n无奈只好自己编译了。\n\n在这里还是承接一面两篇文章，拥有一个`master`一个`slave`.\n<!--more-->\n## 安装`maven`\n首先安装`maven`在`ubuntu`下使用命令\n```shell\nsudo apt-get install maven\n```\n\n## 编译`tachyon`\n首先下载`tachyon0.7.0`\n```shell\nwget https://github.com/amplab/tachyon/archive/v0.7.0.zip\n```\n然后解压并且移动到我们的大数据文件夹\n```shell\nmv v0.7.0 tachyon-0.7.0.zip\nunzip tachyon-0.7.0.zip\nmv tachyon-0.7.0.zip /usr/local/bigdata/\ncd tachyon-0.7.0\n```\n然后开始编译，记得加上自己的`hadoop`版本，他默认的好像是hadoop1.x的版本，会造成一种错误\n>org.apache.hadoop.ipc.RemoteException: Server IPC version 9 cannot communicate with client version 4 at org.apache.hadoop.ipc.Client.call(Client.java:1070)\n\n编译的时候要用`mvn`,所以在源码文件夹下执行:\n```shell\nmvn -Dhadoop.version=2.6.0 clean package -DskipTests=true\n```\n额，我在虚拟机中编译了大概20分钟。\n编译完成后，在源码目录下创建几个文件夹：\n```shell\nmkdir journal\nmkdir ramdisk\n```\n\n## 配置`tachyon`\n首先在`.bashrc`中添加环境变量：\n```shell\n#tachyon\nexport TACHYON_HOME=/usr/local/bigdata/tachyon-0.7.0\nexport PATH=$TACHYON_HOME/bin:$PATH\n```\n然后将`conf`文件夹下的`tachyon-env.sh.template`改名为`tachyon-env.sh`\n```shell\ncp conf/tachyon-env.sh.template conf/tachyon-env.sh\nvim conf/tachyon-evn.sh\n```\n修改其中的配置文件：\n```shell\nexport TACHYON_MASTER_ADDRESS=master\n#export TACHYON_UNDERFS_ADDRESS=$TACHYON_HOME/underFSStorage\nexport TACHYON_UNDERFS_ADDRESS=hdfs://master:9000\n\n-Dtachyon.master.journal.folder=$TACHYON_HOME/journal     #这一条不改好像也没多少关系\n```\n然后设置日志的输出位置，默认是命令行中。\n```\nvim conf/log4j.properties\n```\n在`=`后面写上地址就好了.\n\n>tachyon.logs.dir=/usr/local/bigdata/tachyon-0.7.0/logs\n\n接下来在`conf`下创建`core-site.xml`:\n```shell\nvim conf/core-site.xml\n```\n在里面添加:\n```xml\n<configuration>\n　　<property>\n　　　　<name>fs.tachyon.impl</name>\n　　　　<value>tachyon.hadoop.TFS</value>\n　　</property>\n</configuration>\n```\n最后，在`conf/workers`里面添加`slave`.\n然后将`tachyon-0.7.0`这个文件夹分发到`slave`节点.\n\n## 启动`tachyon`\n启动之前首先应该格式化:\n```shell\nbin/tachyon format\n```\n因为我不是用`root`账户登录的，所以只能用下面这条命令运行:\n```shell\nbin/tachyon-start.sh all SudoMount\n```\n输入密码后，即可完成启动，可以在`master:19999`查看情况，也可以通过`jps`去查看。\n","slug":"39","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekii7001uro5u97s3a0ox"},{"title":"ubuntu64位使用32位Dr.com","date":"2015-12-20T14:51:50.000Z","_content":"关于如何在ubuntu14.04以上的64位系统中使用32位的Dr.com上网。\n\n当时因为64位不能使用校园网上网，所以导致整个实验室的Linux都用的32位。现在终于解决了这个问题。\n\n<!--more-->\n\n## 1、安装32位链接库 \n首先安装32位链接库\n\n14.04系统是这个命令:\n```shell\nsudo apt-get install ia32z1\n```\n15.10系统是这个命令:\n```shell\nsudo apt-get install lib32z1\n```\n## 2、安装软件需要的库\n然后安装需要的链接库因为是32位的，所以后面要加`:i386`.链接库列表如下:\n```shell\nsudo apt-get install libc6:i386\nsudo apt-get install libpng12-0:i386\nsudo apt-get install libsm6:i386\nsudo apt-get install libxi6:i386\nsudo apt-get install libxrender1:i386\nsudo apt-get install libxrandr2:i386\nsudo apt-get install libxcursor1:i386\nsudo apt-get install libXinerama1:i386\nsudo apt-get install libfreetype6:i386\nsudo apt-get install libfontconfig1:i386\nsudo apt-get install libstdc++6:i386\n```\n\n安装完成之后就可以正常使用`Dr.com`","source":"_posts/38.md","raw":"title: ubuntu64位使用32位Dr.com\ncategories: 日常维护\ndate: 2015-12-20 22:51:50\ntags: [ubuntu,dr.com,64位]\n---\n关于如何在ubuntu14.04以上的64位系统中使用32位的Dr.com上网。\n\n当时因为64位不能使用校园网上网，所以导致整个实验室的Linux都用的32位。现在终于解决了这个问题。\n\n<!--more-->\n\n## 1、安装32位链接库 \n首先安装32位链接库\n\n14.04系统是这个命令:\n```shell\nsudo apt-get install ia32z1\n```\n15.10系统是这个命令:\n```shell\nsudo apt-get install lib32z1\n```\n## 2、安装软件需要的库\n然后安装需要的链接库因为是32位的，所以后面要加`:i386`.链接库列表如下:\n```shell\nsudo apt-get install libc6:i386\nsudo apt-get install libpng12-0:i386\nsudo apt-get install libsm6:i386\nsudo apt-get install libxi6:i386\nsudo apt-get install libxrender1:i386\nsudo apt-get install libxrandr2:i386\nsudo apt-get install libxcursor1:i386\nsudo apt-get install libXinerama1:i386\nsudo apt-get install libfreetype6:i386\nsudo apt-get install libfontconfig1:i386\nsudo apt-get install libstdc++6:i386\n```\n\n安装完成之后就可以正常使用`Dr.com`","slug":"38","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekii9001yro5uq6u0zhaw"},{"title":"spark1.3.1分布式配置","date":"2015-12-15T07:17:04.000Z","_content":"## 1 download spark-bin\n在`apache`官网下载`spark1.3.1-bin-hadoop-2.6.tgz`地址如下:\n\n\"http://spark.apache.org/downloads.html\"\n\n## 2 配置spark集群\n承接上一篇文章，我们将`spark`文件放在`/usr/local/bigdata/spark`下。\n并且在`.bashrc`中配置`spark`的环境变量。\n\n<!--more-->\n```bash\n#spark\nexport SPARK_HOME=/usr/local/bigdata/spark\nexport PATH=$SPARK_HOME/bin:$PATH\n```\n然后安装`scala`，因为`spark`使用`scala`写的所以最好还是安装一下。\n\n下载地址:\"http://www.scala-lang.org/download/2.11.7.html\"\n\n安装完成后得到`scala`的安装路径。我是在`ubuntu`下安装的`deb`，路径应该是`/usr/share/scala`这个地方。\n\n然后在`spark`配置文件`conf/`下操作：\n```sh\ncp spark-env.sh.template spark-env.sh\nvim spark-env.sh\n```\n在里面添加如下内容：\n```\nexport JAVA_HOME=/usr/lib/jvm/java-7-oracle\nexport SCALA_HOME=/usr/share/scala\nexport SPARK_MASTER_IP=master\nexport SPARK_WORKER_MEMORY=1g\nexport HADOOP_CONF_DIR=/usr/local/bigdata/hadoop/etc/hadoop\nexport HADOOP_OPTS=\"-Djava.library.path=$HADOOP_HOME/lib:$HADOOP_HOME/lib/native\"\n```\n\n然后创建`slave`文件:\n```sh\ncp slaves.template slaves\nvim slaves\n```\n去掉里面的`localhost`，加上自己的`slave`节点ip.`slave`.我这里的`slave`是在`hosts`里面改过的，所以可以直接写别名的。\n\n然后将`spark`文件分发到其他节点，同时其他节点也要配置好环境，和`scala`\n\n然后启动`spart`\n```sh\nSPARK_HOME/sbin/start-all.sh\n```\n\n## 3 测试\n\n启动`hadoop`和`spark`后，在`master`节点输入`jps`:\n```\n~ [10:59:16]\nbd$ jps\n6047 Jps\n5013 SecondaryNameNode\n4803 NameNode\n5472 Master\n5157 ResourceManager\n5771 SparkSubmit\n ~ [10:59:23]\n```\n`slave`节点上:\n```\n ~ [10:43:23]\nbd$ jps                                   \n5843 Jps\n5527 Worker\n5210 DataNode\n5339 NodeManager\n ~ [11:01:22]\n```\n然后启动`bin/spark-shell`\n进行测试:\n```\nscala> val a = sc.parallelize(1 to 10)\na: org.apache.spark.rdd.RDD[Int] = ParallelCollectionRDD[0] at parallelize at <console>:21\n\nscala> val b = a.map(x => x*2)\nb: org.apache.spark.rdd.RDD[Int] = MapPartitionsRDD[1] at map at <console>:23\n\nscala> b.collect\n15/12/14 22:57:02 INFO spark.SparkContext: Starting job: collect at <console>:26\n15/12/14 22:57:02 INFO scheduler.DAGScheduler: Got job 0 (collect at <console>:26) with 1 output partitions (allowLocal=false)\n15/12/14 22:57:02 INFO scheduler.DAGScheduler: Final stage: Stage 0(collect at <console>:26)\n15/12/14 22:57:02 INFO scheduler.DAGScheduler: Parents of final stage: List()\n15/12/14 22:57:02 INFO scheduler.DAGScheduler: Missing parents: List()\n15/12/14 22:57:02 INFO scheduler.DAGScheduler: Submitting Stage 0 (MapPartitionsRDD[1] at map at <console>:23), which has no missing parents\n15/12/14 22:57:05 INFO storage.MemoryStore: ensureFreeSpace(1792) called with curMem=0, maxMem=280248975\n15/12/14 22:57:05 INFO storage.MemoryStore: Block broadcast_0 stored as values in memory (estimated size 1792.0 B, free 267.3 MB)\n15/12/14 22:57:05 INFO storage.MemoryStore: ensureFreeSpace(1291) called with curMem=1792, maxMem=280248975\n15/12/14 22:57:05 INFO storage.MemoryStore: Block broadcast_0_piece0 stored as bytes in memory (estimated size 1291.0 B, free 267.3 MB)\n15/12/14 22:57:05 INFO storage.BlockManagerInfo: Added broadcast_0_piece0 in memory on localhost:60692 (size: 1291.0 B, free: 267.3 MB)\n15/12/14 22:57:05 INFO storage.BlockManagerMaster: Updated info of block broadcast_0_piece0\n15/12/14 22:57:05 INFO spark.SparkContext: Created broadcast 0 from broadcast at DAGScheduler.scala:839\n15/12/14 22:57:05 INFO scheduler.DAGScheduler: Submitting 1 missing tasks from Stage 0 (MapPartitionsRDD[1] at map at <console>:23)\n15/12/14 22:57:05 INFO scheduler.TaskSchedulerImpl: Adding task set 0.0 with 1 tasks\n15/12/14 22:57:05 INFO scheduler.TaskSetManager: Starting task 0.0 in stage 0.0 (TID 0, localhost, PROCESS_LOCAL, 1317 bytes)\n15/12/14 22:57:05 INFO executor.Executor: Running task 0.0 in stage 0.0 (TID 0)\n15/12/14 22:57:06 INFO executor.Executor: Finished task 0.0 in stage 0.0 (TID 0). 643 bytes result sent to driver\n15/12/14 22:57:06 INFO scheduler.DAGScheduler: Stage 0 (collect at <console>:26) finished in 0.459 s\n15/12/14 22:57:06 INFO scheduler.TaskSetManager: Finished task 0.0 in stage 0.0 (TID 0) in 364 ms on localhost (1/1)\n15/12/14 22:57:06 INFO scheduler.TaskSchedulerImpl: Removed TaskSet 0.0, whose tasks have all completed, from pool \n15/12/14 22:57:06 INFO scheduler.DAGScheduler: Job 0 finished: collect at <console>:26, took 3.878411 s\nres0: Array[Int] = Array(2, 4, 6, 8, 10, 12, 14, 16, 18, 20)\n\nscala> (1 to 10,3)\nres1: (scala.collection.immutable.Range.Inclusive, Int) = (Range(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),3)\n\nscala> exit\n```","source":"_posts/37.md","raw":"title: spark1.3.1分布式配置\ndate: 2015-12-15 15:17:04\ncategories: 编程与算法\ntags: [spark,大数据]\n---\n## 1 download spark-bin\n在`apache`官网下载`spark1.3.1-bin-hadoop-2.6.tgz`地址如下:\n\n\"http://spark.apache.org/downloads.html\"\n\n## 2 配置spark集群\n承接上一篇文章，我们将`spark`文件放在`/usr/local/bigdata/spark`下。\n并且在`.bashrc`中配置`spark`的环境变量。\n\n<!--more-->\n```bash\n#spark\nexport SPARK_HOME=/usr/local/bigdata/spark\nexport PATH=$SPARK_HOME/bin:$PATH\n```\n然后安装`scala`，因为`spark`使用`scala`写的所以最好还是安装一下。\n\n下载地址:\"http://www.scala-lang.org/download/2.11.7.html\"\n\n安装完成后得到`scala`的安装路径。我是在`ubuntu`下安装的`deb`，路径应该是`/usr/share/scala`这个地方。\n\n然后在`spark`配置文件`conf/`下操作：\n```sh\ncp spark-env.sh.template spark-env.sh\nvim spark-env.sh\n```\n在里面添加如下内容：\n```\nexport JAVA_HOME=/usr/lib/jvm/java-7-oracle\nexport SCALA_HOME=/usr/share/scala\nexport SPARK_MASTER_IP=master\nexport SPARK_WORKER_MEMORY=1g\nexport HADOOP_CONF_DIR=/usr/local/bigdata/hadoop/etc/hadoop\nexport HADOOP_OPTS=\"-Djava.library.path=$HADOOP_HOME/lib:$HADOOP_HOME/lib/native\"\n```\n\n然后创建`slave`文件:\n```sh\ncp slaves.template slaves\nvim slaves\n```\n去掉里面的`localhost`，加上自己的`slave`节点ip.`slave`.我这里的`slave`是在`hosts`里面改过的，所以可以直接写别名的。\n\n然后将`spark`文件分发到其他节点，同时其他节点也要配置好环境，和`scala`\n\n然后启动`spart`\n```sh\nSPARK_HOME/sbin/start-all.sh\n```\n\n## 3 测试\n\n启动`hadoop`和`spark`后，在`master`节点输入`jps`:\n```\n~ [10:59:16]\nbd$ jps\n6047 Jps\n5013 SecondaryNameNode\n4803 NameNode\n5472 Master\n5157 ResourceManager\n5771 SparkSubmit\n ~ [10:59:23]\n```\n`slave`节点上:\n```\n ~ [10:43:23]\nbd$ jps                                   \n5843 Jps\n5527 Worker\n5210 DataNode\n5339 NodeManager\n ~ [11:01:22]\n```\n然后启动`bin/spark-shell`\n进行测试:\n```\nscala> val a = sc.parallelize(1 to 10)\na: org.apache.spark.rdd.RDD[Int] = ParallelCollectionRDD[0] at parallelize at <console>:21\n\nscala> val b = a.map(x => x*2)\nb: org.apache.spark.rdd.RDD[Int] = MapPartitionsRDD[1] at map at <console>:23\n\nscala> b.collect\n15/12/14 22:57:02 INFO spark.SparkContext: Starting job: collect at <console>:26\n15/12/14 22:57:02 INFO scheduler.DAGScheduler: Got job 0 (collect at <console>:26) with 1 output partitions (allowLocal=false)\n15/12/14 22:57:02 INFO scheduler.DAGScheduler: Final stage: Stage 0(collect at <console>:26)\n15/12/14 22:57:02 INFO scheduler.DAGScheduler: Parents of final stage: List()\n15/12/14 22:57:02 INFO scheduler.DAGScheduler: Missing parents: List()\n15/12/14 22:57:02 INFO scheduler.DAGScheduler: Submitting Stage 0 (MapPartitionsRDD[1] at map at <console>:23), which has no missing parents\n15/12/14 22:57:05 INFO storage.MemoryStore: ensureFreeSpace(1792) called with curMem=0, maxMem=280248975\n15/12/14 22:57:05 INFO storage.MemoryStore: Block broadcast_0 stored as values in memory (estimated size 1792.0 B, free 267.3 MB)\n15/12/14 22:57:05 INFO storage.MemoryStore: ensureFreeSpace(1291) called with curMem=1792, maxMem=280248975\n15/12/14 22:57:05 INFO storage.MemoryStore: Block broadcast_0_piece0 stored as bytes in memory (estimated size 1291.0 B, free 267.3 MB)\n15/12/14 22:57:05 INFO storage.BlockManagerInfo: Added broadcast_0_piece0 in memory on localhost:60692 (size: 1291.0 B, free: 267.3 MB)\n15/12/14 22:57:05 INFO storage.BlockManagerMaster: Updated info of block broadcast_0_piece0\n15/12/14 22:57:05 INFO spark.SparkContext: Created broadcast 0 from broadcast at DAGScheduler.scala:839\n15/12/14 22:57:05 INFO scheduler.DAGScheduler: Submitting 1 missing tasks from Stage 0 (MapPartitionsRDD[1] at map at <console>:23)\n15/12/14 22:57:05 INFO scheduler.TaskSchedulerImpl: Adding task set 0.0 with 1 tasks\n15/12/14 22:57:05 INFO scheduler.TaskSetManager: Starting task 0.0 in stage 0.0 (TID 0, localhost, PROCESS_LOCAL, 1317 bytes)\n15/12/14 22:57:05 INFO executor.Executor: Running task 0.0 in stage 0.0 (TID 0)\n15/12/14 22:57:06 INFO executor.Executor: Finished task 0.0 in stage 0.0 (TID 0). 643 bytes result sent to driver\n15/12/14 22:57:06 INFO scheduler.DAGScheduler: Stage 0 (collect at <console>:26) finished in 0.459 s\n15/12/14 22:57:06 INFO scheduler.TaskSetManager: Finished task 0.0 in stage 0.0 (TID 0) in 364 ms on localhost (1/1)\n15/12/14 22:57:06 INFO scheduler.TaskSchedulerImpl: Removed TaskSet 0.0, whose tasks have all completed, from pool \n15/12/14 22:57:06 INFO scheduler.DAGScheduler: Job 0 finished: collect at <console>:26, took 3.878411 s\nres0: Array[Int] = Array(2, 4, 6, 8, 10, 12, 14, 16, 18, 20)\n\nscala> (1 to 10,3)\nres1: (scala.collection.immutable.Range.Inclusive, Int) = (Range(1, 2, 3, 4, 5, 6, 7, 8, 9, 10),3)\n\nscala> exit\n```","slug":"37","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekiid0025ro5un2bopz5l"},{"title":"hadoop2.6.0分布式配置","date":"2015-12-03T12:48:01.000Z","_content":"\n# hadoop2.6.0集群搭建-ubuntu14.04\n\n<!--more-->\n## 1 物理条件准备\n### 1.1 集群准备\n两台机器，虚拟机实体机都可以。只要两者可以连通。\n### 1.2 系统准备\n这里及以下代码使用的系统为ubuntu14.04桌面版64位。只要是linux系统，基本上配置都是差不多的。\n\n然后一个命名为`master`另外一个命名为`slave`\n然后在`/etc/hosts`中设置两个节点的`ip`和别名。\n```\nxxx.xxx.xxx.xxx master\nxxx.xxx.xxx.xxx slave\n```\n## 2 基础环境配置\n### 2.1 java安装\n在ubuntu下其实已经可以采用ppa来安装了。当然，也可以直接解压安装。在这里只说明ppa安装的方法吧。\n```shell\nsudo add-apt-repository ppa:webupd8team/java\nsudo apt-get update\nsudo apt-get install Oracle-java7-installer\n```\n上述步骤分别为添加oracle-java的源、更新缓存和安装jdk7。\n\n如果想要安装jdk8的话，可以将`Oracle-java7-installer`换成`Oracle-java8-installer`\n\n如果同时拥有两个版本，可以通过`sudo update-java-alternatives -s java-7-oracle`进行切换。\n\n### 2.2 openssh安装\nubuntu14.04桌面版中自带`openssh-client`但是没有`openssh-server`。\n所以要安装`openssh-server`.\n```shell\nsudo apt-get install openssh-server\n```\n### 2.3 建立双向免密码通讯\n通过命令`ssh-keygen -t rsa`所有内容为空一直摁回车，然后再`~/.ssh`文件夹中在生成公钥`id_rsa.pub`和`id_rsa.pub `私钥。\n\n然后将自己的公钥分发到其他节点然后执行`cat id_rsa.pub >> ~/.ssh/authorized_keys`\n\n所有节点都这样执行一遍，即可完成免密码通讯。\n\n## 3 hadoop环境搭建\n首先在`apache`官网下载`hadoop2.6.0`.地址如下：\n\nhttp://www.apache.org/dyn/closer.cgi/hadoop/common/hadoop-2.6.0/hadoop-2.6.0.tar.gz\n\n然后将下载好的压缩包解压到某一个文件夹。在一下的例子中我解压到了`/usr/local/bigdata`下，并且将文件夹改名为`hadoop`.\n结构树如下:\n\n- /\n- \\----usr\n- \\--------local\n- \\------------bigdata\n- \\----------------hadoop\n- \\--------------------bin\n- \\--------------------sbin\n- \\--------------------etc\n- \\--------------------libexec\n- \\--------------------include\n- \\--------------------lib\n- \\--------------------LICENSE.txt\n- \\--------------------........\n\n所以`hadoop`的根目录为`/usr/local/bigdata/hadoop`\n\n### 3.1 将环境变量加入.bashrc\n打开主目录下的`.bashrc`，然后再里面加入：\n```shell\n#hadoop\nexport HADOOP_HOME=/usr/local/bigdata/hadoop\nexport PATH=$HADOOP_HOME/bin:$PATH\nexport HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native\nexport HADOOP_OPTS=\"-Djava.library.path=$HADOOP_HOME/lib\"\n```\n\n### 3.2 修改`hadooop`中的配置文件\n需要修改的配置文件有下面几个\n\n- /hadoop/etc/hadoop/hadoop-env.sh\n- /hadoop/etc/hadoop/yarn-env.sh\n- /hadoop/etc/hadoop/slaves\n- /hadoop/etc/hadoop/core-site.xml\n- /hadoop/etc/hadoop/hdfs-site.xml\n- /hadoop/etc/hadoop/mapred-site.xml\n- /hadoop/etc/hadoop/yarn-site.xml\n\n#### 3.2.1 hadoop-env.sh\n修改`java`路径\n```sh\n# The java implementation to use.\nexport JAVA_HOME=/usr/lib/jvm/java-7-oracle\n```\n\n#### 3.2.2 yarn-env.sh\n也是修改`java`路径，同时把注释去掉\n```sh\n# some Java parameters\nexport JAVA_HOME=/usr/lib/jvm/java-7-oracle/\n```\n\n#### 3.2.3 slaves\n增加slave节点的别名，这里就是`slave`\n\n#### 3.2.4 core-site.xml\n增加如下内容:\n```xml\n<configuration>\n    <property>\n        <name>hadoop.tmp.dir</name>\n        <value>/usr/local/bigdata/hadoop/tmp</value>\n        <description>Abase for other temporary directories.</description>\n    </property>\n    <property>\n        <name>fs.default.name</name>\n        <value>hdfs://master:9000</value>\n    </property>\n    <property>\n        <name>io.file.buffer.size</name>\n        <value>131072</value>\n    </property>\n    <property>\n        <name>hadoop.proxyuser.spark.hosts</name>\n        <value>*</value>\n    </property>\n    <property>\n        <name>hadoop.proxyuser.spark.groups</name>\n        <value>*</value>\n    </property>\n</configuration>\n```\n\n#### 3.2.5 hdfs-site.xml\n增加如下内容：\n```xml\n<configuration>\n    <property>\n        <name>dfs.namenode.secondary.http-address</name>\n        <value>master:9001</value>\n    </property>\n    <property>\n        <name>dfs.namenode.name.dir</name>\n        <value>file:/usr/local/bigdata/hadoop/dfs/name</value>\n    </property>\n    <property>\n        <name>dfs.datanode.data.dir</name>\n        <value>file:/usr/local/bigdata/hadoop/dfs/data</value>\n    </property>\n    <property>\n        <name>dfs.replication</name>\n        <value>3</value>\n    </property>\n    <property>\n        <name>dfs.webhdfs.enabled</name>\n        <value>true</value>\n    </property>\n</configuration>\n```\n\n#### 3.2.6 mapred-site.xml\n开始是没有这个文件的，需要复制`mapred-site.xml.template`一份，然后改名为`mapred-site.xml`\n```xml\n<configuration>\n    <property>\n        <name>mapreduce.framework.name</name>\n        <value>yarn</value>\n    </property>\n    <property>\n        <name>mapreduce.jobhistory.address</name>\n        <value>master:10020</value>\n    </property>\n    <property>\n        <name>mapreduce.jobhistory.webapp.address</name>\n        <value>master:19888</value>\n    </property>\n</configuration>\n```\n\n#### 3.2.7 yarn-site.xml\n在文件中增加如下内容\n```xml\n<configuration>\n    <!-- Site specific YARN configuration properties -->\n    <property>\n        <name>yarn.nodemanager.aux-services</name>\n        <value>mapreduce_shuffle</value>\n    </property>\n    <property>\n        <name>yarn.nodemanager.aux-services.mapreduce.shuffle.class</name>\n        <value>org.apache.hadoop.mapred.ShuffleHandler</value>\n    </property>\n    <property>\n        <name>yarn.resourcemanager.address</name>\n        <value>master:8032</value>\n    </property>\n    <property>\n        <name>yarn.resourcemanager.scheduler.address</name>\n        <value>master:8030</value>\n    </property>\n    <property>\n        <name>yarn.resourcemanager.resource-tracker.address</name>\n        <value>master:8035</value>\n    </property>\n    <property>\n        <name>yarn.resourcemanager.admin.address</name>\n        <value>master:8033</value>\n    </property>\n    <property>\n        <name>yarn.resourcemanager.webapp.address</name>\n        <value>master:8088</value>\n    </property>\n</configuration>\n```\n至此，配置文件已经修改完毕，然后可以将整个`hadoop`文件夹分发到其他机器。\n因为已经建立了`ssh`双向连接，所以可以直接使用`scp`命令。\n```shell\nscp -r /usr/local/bigdata/hadoop {your_username}@{your_pc_name}:/usr/local/bigdata\n```\n### 3.3 格式化`hdfs`\n在`hadoop`根目录下执行:\n```shell\nbin/hdfs namenode -format\n```\n\n### 3.4 启动`hadoop`\n在`hadoop`根目录下执行:\n```shell\nsbin/start-all.sh\n```\n便可以在`http://master:50070`查看到集群信息了。\n\n## 4 hello world\n在`hadoop`下，`wordcount`就是他的`hello world`\n首先在hadoop的根目录下新建一个文件夹，然后在文件夹中随便复制进去一个文本。\n```shell\nmkdir input\ncat \"xxxxxx\" >> input/file\n```\n### 4.1 在hdfs上新建文件夹\n```\nbin/hadoop fs -mkdir /hhu\nbin/hadoop fs -mkdir /hhu/input\n```\n### 4.2 将文本放到hdfs中\n```shell\nbin/hadoop fs -put input/ /hhu\n```\n### 4.3 执行`wordcount`\n```shell\nbin/hadoop jar share/hadoop/mapreduce/hadoop-mapreduce-examples-2.6.0.jar wordcount /hhu/input/ /output/wordcount1\n```\n\n如果执行成功基本就完成了，注意如果日志中出现`job_local[\\d]*`的字样，说明还是在本机执行，那就要查看自己的配置哪里没配好了。","source":"_posts/36.md","raw":"title: hadoop2.6.0分布式配置\ndate: 2015-12-03 20:48:01\ncategories: 编程与算法\ntags: [hadoop,大数据]\n---\n\n# hadoop2.6.0集群搭建-ubuntu14.04\n\n<!--more-->\n## 1 物理条件准备\n### 1.1 集群准备\n两台机器，虚拟机实体机都可以。只要两者可以连通。\n### 1.2 系统准备\n这里及以下代码使用的系统为ubuntu14.04桌面版64位。只要是linux系统，基本上配置都是差不多的。\n\n然后一个命名为`master`另外一个命名为`slave`\n然后在`/etc/hosts`中设置两个节点的`ip`和别名。\n```\nxxx.xxx.xxx.xxx master\nxxx.xxx.xxx.xxx slave\n```\n## 2 基础环境配置\n### 2.1 java安装\n在ubuntu下其实已经可以采用ppa来安装了。当然，也可以直接解压安装。在这里只说明ppa安装的方法吧。\n```shell\nsudo add-apt-repository ppa:webupd8team/java\nsudo apt-get update\nsudo apt-get install Oracle-java7-installer\n```\n上述步骤分别为添加oracle-java的源、更新缓存和安装jdk7。\n\n如果想要安装jdk8的话，可以将`Oracle-java7-installer`换成`Oracle-java8-installer`\n\n如果同时拥有两个版本，可以通过`sudo update-java-alternatives -s java-7-oracle`进行切换。\n\n### 2.2 openssh安装\nubuntu14.04桌面版中自带`openssh-client`但是没有`openssh-server`。\n所以要安装`openssh-server`.\n```shell\nsudo apt-get install openssh-server\n```\n### 2.3 建立双向免密码通讯\n通过命令`ssh-keygen -t rsa`所有内容为空一直摁回车，然后再`~/.ssh`文件夹中在生成公钥`id_rsa.pub`和`id_rsa.pub `私钥。\n\n然后将自己的公钥分发到其他节点然后执行`cat id_rsa.pub >> ~/.ssh/authorized_keys`\n\n所有节点都这样执行一遍，即可完成免密码通讯。\n\n## 3 hadoop环境搭建\n首先在`apache`官网下载`hadoop2.6.0`.地址如下：\n\nhttp://www.apache.org/dyn/closer.cgi/hadoop/common/hadoop-2.6.0/hadoop-2.6.0.tar.gz\n\n然后将下载好的压缩包解压到某一个文件夹。在一下的例子中我解压到了`/usr/local/bigdata`下，并且将文件夹改名为`hadoop`.\n结构树如下:\n\n- /\n- \\----usr\n- \\--------local\n- \\------------bigdata\n- \\----------------hadoop\n- \\--------------------bin\n- \\--------------------sbin\n- \\--------------------etc\n- \\--------------------libexec\n- \\--------------------include\n- \\--------------------lib\n- \\--------------------LICENSE.txt\n- \\--------------------........\n\n所以`hadoop`的根目录为`/usr/local/bigdata/hadoop`\n\n### 3.1 将环境变量加入.bashrc\n打开主目录下的`.bashrc`，然后再里面加入：\n```shell\n#hadoop\nexport HADOOP_HOME=/usr/local/bigdata/hadoop\nexport PATH=$HADOOP_HOME/bin:$PATH\nexport HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native\nexport HADOOP_OPTS=\"-Djava.library.path=$HADOOP_HOME/lib\"\n```\n\n### 3.2 修改`hadooop`中的配置文件\n需要修改的配置文件有下面几个\n\n- /hadoop/etc/hadoop/hadoop-env.sh\n- /hadoop/etc/hadoop/yarn-env.sh\n- /hadoop/etc/hadoop/slaves\n- /hadoop/etc/hadoop/core-site.xml\n- /hadoop/etc/hadoop/hdfs-site.xml\n- /hadoop/etc/hadoop/mapred-site.xml\n- /hadoop/etc/hadoop/yarn-site.xml\n\n#### 3.2.1 hadoop-env.sh\n修改`java`路径\n```sh\n# The java implementation to use.\nexport JAVA_HOME=/usr/lib/jvm/java-7-oracle\n```\n\n#### 3.2.2 yarn-env.sh\n也是修改`java`路径，同时把注释去掉\n```sh\n# some Java parameters\nexport JAVA_HOME=/usr/lib/jvm/java-7-oracle/\n```\n\n#### 3.2.3 slaves\n增加slave节点的别名，这里就是`slave`\n\n#### 3.2.4 core-site.xml\n增加如下内容:\n```xml\n<configuration>\n    <property>\n        <name>hadoop.tmp.dir</name>\n        <value>/usr/local/bigdata/hadoop/tmp</value>\n        <description>Abase for other temporary directories.</description>\n    </property>\n    <property>\n        <name>fs.default.name</name>\n        <value>hdfs://master:9000</value>\n    </property>\n    <property>\n        <name>io.file.buffer.size</name>\n        <value>131072</value>\n    </property>\n    <property>\n        <name>hadoop.proxyuser.spark.hosts</name>\n        <value>*</value>\n    </property>\n    <property>\n        <name>hadoop.proxyuser.spark.groups</name>\n        <value>*</value>\n    </property>\n</configuration>\n```\n\n#### 3.2.5 hdfs-site.xml\n增加如下内容：\n```xml\n<configuration>\n    <property>\n        <name>dfs.namenode.secondary.http-address</name>\n        <value>master:9001</value>\n    </property>\n    <property>\n        <name>dfs.namenode.name.dir</name>\n        <value>file:/usr/local/bigdata/hadoop/dfs/name</value>\n    </property>\n    <property>\n        <name>dfs.datanode.data.dir</name>\n        <value>file:/usr/local/bigdata/hadoop/dfs/data</value>\n    </property>\n    <property>\n        <name>dfs.replication</name>\n        <value>3</value>\n    </property>\n    <property>\n        <name>dfs.webhdfs.enabled</name>\n        <value>true</value>\n    </property>\n</configuration>\n```\n\n#### 3.2.6 mapred-site.xml\n开始是没有这个文件的，需要复制`mapred-site.xml.template`一份，然后改名为`mapred-site.xml`\n```xml\n<configuration>\n    <property>\n        <name>mapreduce.framework.name</name>\n        <value>yarn</value>\n    </property>\n    <property>\n        <name>mapreduce.jobhistory.address</name>\n        <value>master:10020</value>\n    </property>\n    <property>\n        <name>mapreduce.jobhistory.webapp.address</name>\n        <value>master:19888</value>\n    </property>\n</configuration>\n```\n\n#### 3.2.7 yarn-site.xml\n在文件中增加如下内容\n```xml\n<configuration>\n    <!-- Site specific YARN configuration properties -->\n    <property>\n        <name>yarn.nodemanager.aux-services</name>\n        <value>mapreduce_shuffle</value>\n    </property>\n    <property>\n        <name>yarn.nodemanager.aux-services.mapreduce.shuffle.class</name>\n        <value>org.apache.hadoop.mapred.ShuffleHandler</value>\n    </property>\n    <property>\n        <name>yarn.resourcemanager.address</name>\n        <value>master:8032</value>\n    </property>\n    <property>\n        <name>yarn.resourcemanager.scheduler.address</name>\n        <value>master:8030</value>\n    </property>\n    <property>\n        <name>yarn.resourcemanager.resource-tracker.address</name>\n        <value>master:8035</value>\n    </property>\n    <property>\n        <name>yarn.resourcemanager.admin.address</name>\n        <value>master:8033</value>\n    </property>\n    <property>\n        <name>yarn.resourcemanager.webapp.address</name>\n        <value>master:8088</value>\n    </property>\n</configuration>\n```\n至此，配置文件已经修改完毕，然后可以将整个`hadoop`文件夹分发到其他机器。\n因为已经建立了`ssh`双向连接，所以可以直接使用`scp`命令。\n```shell\nscp -r /usr/local/bigdata/hadoop {your_username}@{your_pc_name}:/usr/local/bigdata\n```\n### 3.3 格式化`hdfs`\n在`hadoop`根目录下执行:\n```shell\nbin/hdfs namenode -format\n```\n\n### 3.4 启动`hadoop`\n在`hadoop`根目录下执行:\n```shell\nsbin/start-all.sh\n```\n便可以在`http://master:50070`查看到集群信息了。\n\n## 4 hello world\n在`hadoop`下，`wordcount`就是他的`hello world`\n首先在hadoop的根目录下新建一个文件夹，然后在文件夹中随便复制进去一个文本。\n```shell\nmkdir input\ncat \"xxxxxx\" >> input/file\n```\n### 4.1 在hdfs上新建文件夹\n```\nbin/hadoop fs -mkdir /hhu\nbin/hadoop fs -mkdir /hhu/input\n```\n### 4.2 将文本放到hdfs中\n```shell\nbin/hadoop fs -put input/ /hhu\n```\n### 4.3 执行`wordcount`\n```shell\nbin/hadoop jar share/hadoop/mapreduce/hadoop-mapreduce-examples-2.6.0.jar wordcount /hhu/input/ /output/wordcount1\n```\n\n如果执行成功基本就完成了，注意如果日志中出现`job_local[\\d]*`的字样，说明还是在本机执行，那就要查看自己的配置哪里没配好了。","slug":"36","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekiih0029ro5ul2rlcwn0"},{"title":"全国各县市的经纬度","date":"2015-11-06T06:36:06.000Z","_content":"这一周实习做的是百度地图，所以要用到各个城市的经纬度来进行查询。百度了许久后找到一份几年前的记录。那时晋州还叫晋县，武穴还叫广济。现在先记录下来。\n\n<!--more-->\n\n因为为了导入方便，所以去除了省份。现在发上来肯定要加上省份啊，所以重新自己做一个格式吧。\n\n转载，还是注明出处吧。学生党改了好久格式呢。\n\n格式为:`省份-城市{经度,纬度}`\n\n```\n上海-上海{121.48,31.22}\n上海-嘉定{121.24,31.4}\n上海-宝山{121.48,31.41}\n上海-川沙{121.7,31.19}\n上海-南汇{121.76,31.05}\n上海-奉贤{121.46,30.92}\n上海-松江{121.24,31}\n上海-金山{121.16,30.89}\n上海-青浦{121.1,31.15}\n上海-崇明{121.4,31.73}\n云南-昆明{102.73,25.04}\n云南-富民{102.48,25.21}\n云南-晋宁{102.58,24.68}\n云南-呈贡{102.79,24.9}\n云南-安宁{102.44,24.95}\n云南-昭通{103.7,29.32}\n云南-永善{103.63,28.22}\n云南-大关{103.91,27.74}\n云南-彝良{104.06,27.61}\n云南-鲁甸{103.54,27.21}\n云南-绥江{103.97,28.58}\n云南-盐津{104.28,28.08}\n云南-威信{105.05,27.85}\n云南-镇雄{104.86,27.42}\n云南-巧家{102.92,26.9}\n云南-永富{104.38,28.62}\n云南-曲靖{103.79,25.51}\n云南-宣威{104.09,26.24}\n云南-富源{104.24,25.67}\n云南-师宗{103.97,24.85}\n云南-嵩明{103.03,25.35}\n云南-会泽{103.27,26.41}\n云南-沽益{103.82,25.62}\n云南-罗平{104.3,24.88}\n云南-陆良{104.64,25.04}\n云南-宜良{103.12,24.9}\n云南-马龙{103.61,25.41}\n云南-路南{103.24,24.77}\n云南-寻甸{103.25,25.56}\n云南-玉溪{102.52,24.35}\n云南-华宁{102.93,24.26}\n云南-通海{102.75,24.09}\n云南-澄江{102.91,24.68}\n云南-江川{102.73,24.27}\n云南-易门{102.15,24.67}\n云南-元江{102,23.59}\n云南-新平{101.98,24.06}\n云南-峨山{102.38,24.16}\n云南-思茅{101,22.79}\n云南-普洱{101.03,23.07}\n云南-镇沅{100.88,23.9}\n云南-景东{100.82,24.42}\n云南-景谷{100.71,23.5}\n云南-黑江{101.71,23.4}\n云南-澜沦{99.97,22.55}\n云南-西盟{99.47,22.73}\n云南-江城{101.88,22.58}\n云南-孟连{99.55,22.32}\n云南-临沦{100.09,23.88}\n云南-云县{100.12,24.44}\n云南-镇康{99.02,23.92}\n云南-永德{99.25,24.03}\n云南-凤庆{99.92,24.58}\n云南-双江{99.85,23.45}\n云南-沧源{99.24,23.15}\n云南-耿马{99.41,23.56}\n云南-保由{99.18,25.12}\n云南-施甸{99.15,24.69}\n云南-腾冲{98.51,25.01}\n云南-昌宁{99.61,24.82}\n云南-龙陵{98.7,24.58}\n云南-丽江{100.25,26.86}\n云南-华坪{101.24,26.63}\n云南-永胜{100.76,26.71}\n云南-宁蒗{100.82,27.29}\n云南-文山{104.24,23.37}\n云南-广南{105.09,24.05}\n云南-西畴{104.68,23.42}\n云南-麻栗坡{104.71,23.12}\n云南-马关{104.4,23.01}\n云南-丘北{104.19,24.03}\n云南-砚山{104.35,23.62}\n云南-富宁{105.6,23.62}\n云南-个旧{102.43,23.35}\n云南-弥勒{103.43,24.41}\n云南-蒙自{103.41,23.36}\n云南-元阳{102.81,23.17}\n云南-红河{102.42,23.35}\n云南-石屏{102.48,23.73}\n云南-泸西{103.76,24.52}\n云南-金平{103.24,22.77}\n云南-开远{103.23,23.7}\n云南-绿春{102.42,23.01}\n云南-建水{102.79,23.64}\n云南-河口{103.98,22.52}\n云南-屏边{103.67,22.68}\n云南-景淇{100.79,22}\n云南-勐海{100.5,21.95}\n云南-勐腊{101.56,21.48}\n云南-楚雄{101.54,25.01}\n云南-元谋{101.85,25.7}\n云南-武定{102.36,25.55}\n云南-禄丰{102.08,25.15}\n云南-南华{101.26,25.21}\n云南-大姚{101.34,25.73}\n云南-永仁{101.7,26.07}\n云南-禄劝{102.45,25.58}\n云南-牟定{101.58,25.32}\n云南-双柏{101.67,24.68}\n云南-姚安{101.24,25.4}\n云南-下关{100.24,25.45}\n云南-剑川{99.88,26.53}\n云南-洱源{99.94,26.1}\n云南-宾川{100.55,25.82}\n云南-弥渡{100.52,25.34}\n云南-永平{99.52,25.45}\n云南-鹤庆{100.18,26.55}\n云南-大理{100.19,25.69}\n云南-漾濞{99.98,25.68}\n云南-云龙{99.39,25.9}\n云南-祥云{100.56,25.48}\n云南-巍山{100.33,25.23}\n云南-南涧{100.51,25.04}\n云南-潞西{98.6,24.41}\n云南-陇川{97.96,24.33}\n云南-盈江{97.93,24.69}\n云南-畹町{98.08,24.08}\n云南-瑞丽{97.83,24}\n云南-梁河{98.3,24.78}\n云南-泸水{98.82,25.97}\n云南-碧江{98.95,26.55}\n云南-福贡{98.92,26.89}\n云南-兰坪{99.29,26.49}\n云南-贡山{98.65,27.73}\n云南-中甸{99.72,27.78}\n云南-德钦{98.93,28.49}\n云南-维西{99.27,27.15}\n其它岛屿-钓鱼岛{123.33,25}\n其它岛屿-黄岩岛{117.51,15.07}\n内蒙古-呼和浩特{111.65,40.82}\n内蒙古-上默特左旗{111.13,40.72}\n内蒙古-托克托{111.15,40.28}\n内蒙古-包头{110,40.58}\n内蒙古-上默特右旗{110.52,40.55}\n内蒙古-固阳{110.03,41.03}\n内蒙古-乌海{106.82,39.67}\n内蒙古-集宁{113.08,41.03}\n内蒙古-兴和{113.97,40.88}\n内蒙古-清水河{111.65,39.92}\n内蒙古-武川{111.42,41.12}\n内蒙古-卓资{112.52,40.93}\n内蒙古-商都{113.53,41.58}\n内蒙古-丰镇{113.15,40.45}\n内蒙古-凉城{112.48,40.52}\n内蒙古-和林格尔{111.8,40.4}\n内蒙古-化德{114,41.9}\n内蒙古-四子王旗{111.68,41.37}\n内蒙古-二连浩特{111.96,43.65}\n内蒙古-阿巴哈纳尔旗{116.08,43.95}\n内蒙古-多伦{116.48,42.18}\n内蒙古-阿巴嘎旗{114.97,44.03}\n内蒙古-西乌珠穆沁旗{117.58,44.6}\n内蒙古-东乌珠穆沁旗{116.97,45.53}\n内蒙古-苏尼特左旗{113.7,43.85}\n内蒙古-苏尼特右旗{112.95,42.47}\n内蒙古-太仆寺旗{115.3,41.9}\n内蒙古-正镶白旗{115,42.32}\n内蒙古-正蓝旗{116.02,42.25}\n内蒙古-镶黄旗{113.83,42.25}\n内蒙古-海拉尔{119.73,29.22}\n内蒙古-满洲里{117.47,49.58}\n内蒙古-陈巴尔虎旗{119.45,49.33}\n内蒙古-额尔古纳右旗{120.08,50.45}\n内蒙古-额尔古纳左旗{121.52,50.8}\n内蒙古-喜桂图旗{120.73,49.3}\n内蒙古-阿荣旗{123.5,48.13}\n内蒙古-布特哈旗{122.78,47.98}\n内蒙古-新巴尔虎左旗{116.82,48.67}\n内蒙古-新巴尔虎右旗{118.23,48.22}\n内蒙古-鄂伦春自治旗{123.7,50.58}\n内蒙古-通辽{122.28,43.63}\n内蒙古-开鲁{121.32,43.62}\n内蒙古-库伦旗{121.75,42.72}\n内蒙古-奈曼旗{120.65,42.85}\n内蒙古-扎鲁特旗{120.87,44.55}\n内蒙古-赤峰{118.87,42.28}\n内蒙古-宁城{119.32,41.62}\n内蒙古-林西{118.02,43.62}\n内蒙古-喀喇沁旗{118.67,41.95}\n内蒙古-敖汉旗{119.87,42.3}\n内蒙古-翁牛特旗{119,42.97}\n内蒙古-巴林右旗{118.65,43.52}\n内蒙古-巴林左旗{119.35,43.98}\n内蒙古-阿鲁科尔沁旗{120.05,43.97}\n内蒙古-克什克腾旗{117.48,43.28}\n内蒙古-伊克昭盟{110,39.83}\n内蒙古-东胜县{110,39.83}\n内蒙古-准格尔旗{111.13,39.68}\n内蒙古-乌审旗{109.03,38.38}\n内蒙古-伊金霍洛旗{109.77,39.25}\n内蒙古-鄂托克旗{107.97,39.12}\n内蒙古-鄂托克前旗{107.43,38.18}\n内蒙古-杭锦旗{108.7,39.83}\n内蒙古-达拉特旗{110.02,40.42}\n内蒙古-临河{107.37,40.78}\n内蒙古-五原{108.28,41.12}\n内蒙古-磴口{106.98,40.33}\n内蒙古-杭锦后旗{107.12,40.88}\n内蒙古-乌拉特中旗{108.52,41.55}\n内蒙古-乌拉特前旗{108.65,40.75}\n内蒙古-乌拉特后旗{108.52,40.88}\n内蒙古-阿拉善左旗{105.68,38.85}\n内蒙古-阿拉善右旗{101.68,39.2}\n内蒙古-额济纳旗{100.88,41.9}\n内蒙古-乌兰浩特{122.08,46.07}\n内蒙古-突泉{121.5,45.4}\n北京-北京{116.46,39.92}\n北京-平谷{117.1,40.13}\n北京-密云{116.85,40.37}\n北京-顺义{116.65,40.13}\n北京-通县{116.67,39.92}\n北京-怀柔{116.62,40.32}\n北京-大兴{116.33,39.73}\n北京-房山{115.98,39.72}\n吉林-长春{125.35,43.88}\n吉林-吉林{126.57,43.87}\n吉林-农安{125.15,44.45}\n吉林-德惠{125.68,44.52}\n吉林-榆树{126.55,44.83}\n吉林-九台{126.83,44.15}\n吉林-双阳{125.68,43.53}\n吉林-永吉{126.57,43.87}\n吉林-舒兰{126.97,44.4}\n吉林-蛟河{127.33,43.75}\n吉林-桦甸{126.72,42.97}\n吉林-磐石{126.03,42.93}\n吉林-延吉{129.52,42.93}\n吉林-汪清{129.75,43.32}\n吉林-珲春{130.35,42.85}\n吉林-图们{129.83,42.98}\n吉林-和龙{129,42.52}\n吉林-安图{128.3,42.58}\n吉林-敦化{128.18,43.35}\n吉林-通化{125.92,41.49}\n吉林-柳河{125.7,40.88}\n吉林-海龙{125.65,42.53}\n吉林-辉南{126.03,42.68}\n吉林-靖宇{126.8,42.38}\n吉林-浑江{126.4,41.97}\n吉林-抚松{127.27,42.33}\n吉林-集安{126.17,41.15}\n吉林-长白{128.17,41.43}\n吉林-四平{124.37,43.17}\n吉林-梨树{124.33,43.32}\n吉林-怀德{124.82,43.5}\n吉林-伊通{125.32,43.33}\n吉林-辽源{125.15,42.97}\n吉林-东丰{125.5,42.68}\n吉林-双辽{123.5,43.52}\n吉林-白城{122.82,45.63}\n吉林-大安{124.18,45.5}\n吉林-扶余{124.82,45.2}\n吉林-乾安{124.02,45}\n吉林-长岭{123.97,44.3}\n吉林-通榆{123.13,44.82}\n吉林-洮安{122.75,45.35}\n四川-成都{104.06,30.67}\n四川-金堂{104.32,30.88}\n四川-双流{104.94,30.57}\n四川-蒲江{103.29,30.2}\n四川-郫县{103.86,30.8}\n四川-新都{104.13,30.82}\n四川-来易{102.15,26.9}\n四川-盐边{101.56,26.9}\n四川-温江{103.81,30.97}\n四川-灌县{103.61,31.04}\n四川-彭县{103.94,30.99}\n四川-什邡{104.16,31.13}\n四川-广汉{104.25,30.99}\n四川-新津{103.78,30.42}\n四川-邛崃{103.47,30.42}\n四川-大邑{103.53,30.58}\n四川-崇庆{103.69,30.63}\n四川-绵阳{104.73,31.48}\n四川-江油{104.7,31.8}\n四川-青川{105.21,32.59}\n四川-平武{104.52,32.42}\n四川-光元{105.86,32.44}\n四川-旺苍{106.33,32.25}\n四川-剑阁{105.45,32.03}\n四川-梓潼{105.16,31.64}\n四川-三台{105.06,31.1}\n四川-盐亭{105.35,31.23}\n四川-射洪{105.31,30.9}\n四川-遂宁{105.58,30.52}\n四川-蓬溪{105.74,30.78}\n四川-中江{104.68,31.06}\n四川-德阳{104.37,31.13}\n四川-绵竹{104.19,31.32}\n四川-安县{104.41,31.64}\n四川-北川{104.44,31.89}\n四川-内江{105.04,29.59}\n四川-乐至{105.02,30.3}\n四川-安岳{105.3,30.12}\n四川-威远{104.7,29.57}\n四川-资中{104.85,29.81}\n四川-资阳{104.6,30.19}\n四川-简阳{104.53,30.38}\n四川-隆昌{105.25,29.64}\n四川-宜宾{104.56,29.77}\n四川-富顺{104.97,29.24}\n四川-南溪{104.96,28.87}\n四川-江安{105.06,28.71}\n四川-纳溪{105.38,28.77}\n四川-泸县{105.46,28.96}\n四川-合江{105.78,28.79}\n四川-泸州{105.39,28.91}\n四川-古蔺{105.79,28.03}\n四川-叙水{105.44,28.19}\n四川-长宁{104.91,28.6}\n四川-兴文{105.06,28.36}\n四川-琪县{104.81,28.38}\n四川-高县{104.52,28.4}\n四川-筠连{104.53,28.16}\n四川-屏由{104.15,28.68}\n四川-乐由{103.73,29.59}\n四川-夹江{103.59,29.75}\n四川-洪雅{103.38,29.95}\n四川-丹棱{103.53,30.04}\n四川-青神{103.81,29.86}\n四川-眉由{103.81,30.05}\n四川-彭由{103.83,30.22}\n四川-井研{104.06,29.67}\n四川-仁寿{104.09,30}\n四川-犍为{103.93,29.21}\n四川-沐川{103.98,28.96}\n四川-娥眉{103.5,29.62}\n四川-马边{103.53,28.87}\n四川-峨边{103.25,29.23}\n四川-金口{103.13,29.24}\n四川-涪陵{107.36,29.7}\n四川-垫江{107.34,30.36}\n四川-丰都{107.7,29.89}\n四川-石柱{108.13,29.98}\n四川-秀山{108.97,28.47}\n四川-西阳{108.75,28.85}\n四川-黔江{108.81,29.53}\n四川-彭水{108.19,29.29}\n四川-武隆{108.72,29.29}\n四川-南川{107.13,29.15}\n四川-万县{108.35,30.83}\n四川-开县{108.39,31.23}\n四川-城口{108.67,31.98}\n四川-巫溪{109.6,31.42}\n四川-巫山{109.86,31.1}\n四川-奉节{109.52,31.06}\n四川-云阳{108.89,30.99}\n四川-忠县{108.03,30.33}\n四川-梁平{107.78,30.66}\n四川-南允{106.06,30.8}\n四川-苍溪{105.96,31.75}\n四川-阆中{105.97,31.75}\n四川-仪陇{106.38,31.52}\n四川-南部{106.03,31.34}\n四川-西允{105.84,31.01}\n四川-营山{106.57,31.07}\n四川-蓬安{106.44,31.04}\n四川-广安{106.61,30.48}\n四川-岳池{106.43,30.55}\n四川-武胜{106.3,30.38}\n四川-华云{106.74,30.41}\n四川-达县{107.49,31.23}\n四川-万源{108.06,32.07}\n四川-宜汉{107.71,31.39}\n四川-开江{107.87,31.1}\n四川-邻水{106.91,30.36}\n四川-大竹{107.21,30.75}\n四川-渠县{106.94,30.85}\n四川-南江{106.83,32.36}\n四川-巴中{106.73,31.86}\n四川-平昌{107.11,31.59}\n四川-通江{108.24,31.95}\n四川-百沙{108.18,32}\n四川-雅安{102.97,29.97}\n四川-芦山{102.91,30.17}\n四川-名山{103.06,30.09}\n四川-荣经{102.81,29.79}\n四川-汉源{102.66,29.4}\n四川-石棉{102.38,29.21}\n四川-天全{102.78,30.09}\n四川-宝兴{102.84,30.36}\n四川-马尔康{102.22,31.92}\n四川-红原{102.55,31.79}\n四川-阿坝{101.72,31.93}\n四川-若尔盖{102.94,33.62}\n四川-黑水{102.95,32.06}\n四川-松潘{103.61,32.64}\n四川-南坪{104.19,33.23}\n四川-汶川{103.61,31.46}\n四川-理县{103.16,31.42}\n四川-小金{102.34,30.97}\n四川-金川{102.03,31.48}\n四川-壤塘{100.97,32.3}\n四川-茂汶{103.89,31.67}\n四川-康定{101.95,30.04}\n四川-炉霍{100.65,31.38}\n四川-甘孜{99.96,31.64}\n四川-新龙{100.28,30.96}\n四川-白玉{98.83,32.23}\n四川-德格{98.57,31.81}\n四川-石渠{98.06,33.01}\n四川-色达{100.35,32.3}\n四川-泸定{102.25,29.92}\n四川-丹巴{101.87,30.85}\n四川-九龙{101.53,29.01}\n四川-雅江{101,30.03}\n四川-道孚{101.14,30.99}\n四川-理塘{100.28,30.03}\n四川-乡城{99.78,28.93}\n四川-稻城{100.31,29.04}\n四川-巴塘{99,30}\n四川-得荣{99.25,28.71}\n四川-西昌{102.29,27.92}\n四川-昭觉{102.83,28.03}\n四川-甘洛{102.74,28.96}\n四川-雷波{103.62,28.21}\n四川-宁南{102.76,27.07}\n四川-会东{102.55,26.74}\n四川-会理{102.21,26.67}\n四川-德昌{102.15,27.4}\n四川-美姑{103.14,28.33}\n四川-金阳{103.22,27.73}\n四川-布拖{102.8,27.7}\n四川-普格{102.52,27.38}\n四川-喜德{102.42,28.33}\n四川-越西{102.49,28.66}\n四川-盐源{101.51,27.42}\n四川-冕宁{102.15,28.58}\n四川-木里{101.25,27.9}\n天津-天津{117.2,39.13}\n天津-宁河{117.83,39.33}\n天津-静海{116.92,38.93}\n天津-蓟县{117.4,40.05}\n天津-宝坻{117.3,39.75}\n天津-武清{117.05,39.4}\n宁夏回族自治区-银川{106.27,38.47}\n宁夏回族自治区-永宁{106.24,38.28}\n宁夏回族自治区-贺兰{106.35,38.55}\n宁夏回族自治区-石嘴山{106.39,39.04}\n宁夏回族自治区-平罗{106.54,38.91}\n宁夏回族自治区-陶乐{106.69,38.82}\n宁夏回族自治区-吴忠{106.21,37.99}\n宁夏回族自治区-同心{105.94,36.97}\n宁夏回族自治区-灵武{106.34,38.1}\n宁夏回族自治区-中宁{105.66,37.48}\n宁夏回族自治区-盐池{107.41,37.78}\n宁夏回族自治区-中卫{105.18,37.51}\n宁夏回族自治区-青铜峡{106.07,38.02}\n宁夏回族自治区-固原{106.28,36.01}\n宁夏回族自治区-西吉{105.7,35.97}\n宁夏回族自治区-泾源{106.33,35.5}\n宁夏回族自治区-海原{105.64,36.56}\n宁夏回族自治区-隆德{106.11,35.63}\n安徽-合肥{117.27,31.86}\n安徽-长丰{117.16,32.47}\n安徽-淮南{116.98,32.62}\n安徽-凤台{116.71,32.68}\n安徽-淮北{116.77,33.97}\n安徽-濉溪{116.76,33.92}\n安徽-芜湖{118.38,31.33}\n安徽-铜陵{117.82,30.93}\n安徽-蚌埠{117.34,32.93}\n安徽-马鞍山{118.48,31.56}\n安徽-安庆{117.03,30.52}\n安徽-宿州{116.97,33.63}\n安徽-宿县{116.97,33.63}\n安徽-砀山{116.34,34.42}\n安徽-萧县{116.93,34.19}\n安徽-吴壁{117.55,33.55}\n安徽-泗县{117.89,33.49}\n安徽-五河{117.87,33.14}\n安徽-固镇{117.32,33.33}\n安徽-怀远{117.19,32.95}\n安徽-滁州{118.31,32.33}\n安徽-嘉山{117.98,32.78}\n安徽-天长{119,32.68}\n安徽-来安{118.44,32.44}\n安徽-全椒{118.27,32.1}\n安徽-定远{117.68,32.52}\n安徽-凤阳{117.4,32.86}\n安徽-巢湖{117.87,31.62}\n安徽-巢县{117.87,31.62}\n安徽-肥东{117.47,31.89}\n安徽-含山{118.11,31.7}\n安徽-和县{118.37,31.7}\n安徽-无为{117.75,31.3}\n安徽-卢江{117.29,31.23}\n安徽-宣城{118.73,31.95}\n安徽-当涂{118.49,31.55}\n安徽-郎溪{119.17,31.14}\n安徽-广德{119.41,30.89}\n安徽-泾县{118.41,30.68}\n安徽-南陵{118.32,30.91}\n安徽-繁昌{118.21,31.07}\n安徽-宁国{118.95,30.62}\n安徽-青阳{117.84,30.64}\n安徽-屯溪{118.31,29.72}\n安徽-休宁{118.19,29.81}\n安徽-旌得{118.53,30.28}\n安徽-绩溪{118.57,30.07}\n安徽-歙县{118.44,29.88}\n安徽-祁门{117.7,29.86}\n安徽-黟县{117.92,29.93}\n安徽-太平{118.13,30.28}\n安徽-石台{117.48,30.19}\n安徽-桐城{116.94,31.04}\n安徽-纵阳{117.21,30.69}\n安徽-怀宁{116.63,30.41}\n安徽-望江{116.69,30.12}\n安徽-宿松{116.13,30.15}\n安徽-太湖{116.27,30.42}\n安徽-岳西{116.36,30.84}\n安徽-潜山{116.53,30.62}\n安徽-东至{116.99,30.08}\n安徽-贵池{117.48,30.66}\n安徽-六安{116.49,31.73}\n安徽-霍丘{116.27,32.32}\n安徽-寿县{116.78,32.57}\n安徽-肥西{117.15,31.7}\n安徽-舒城{116.94,31.45}\n安徽-霍山{116.32,31.38}\n安徽-金寨{115.87,31.67}\n安徽-阜阳{115.81,32.89}\n安徽-毫县{116.76,33.86}\n安徽-涡阳{116.21,33.49}\n安徽-蒙城{116.55,33.25}\n安徽-利辛{116.19,33.12}\n安徽-颖上{116.26,32.62}\n安徽-阜南{115.6,32.63}\n安徽-临泉{115.24,33.06}\n安徽-界首{115.34,33.24}\n安徽-太和{115.61,33.16}\n山东-济南{117,36.65}\n山东-历城{117.07,36.69}\n山东-长清{116.73,36.55}\n山东-章丘{117.53,36.72}\n山东-青岛{120.33,36.07}\n山东-崂山{120.42,36.15}\n山东-胶南{119.97,35.88}\n山东-即墨{120.45,36.38}\n山东-胶县{120,36.28}\n山东-淄博{118.05,36.78}\n山东-枣庄{117.57,34.86}\n山东-滕县{117.17,35.09}\n山东-东营{118.49,37.46}\n山东-垦利{118.54,37.59}\n山东-利津{118.25,37.49}\n山东-德州{116.29,37.45}\n山东-宁津{116.8,37.64}\n山东-乐陵{117.22,37.74}\n山东-商河{117.15,37.31}\n山东-济阳{117.2,36.97}\n山东-禹城{116.66,36.95}\n山东-夏津{116,36.95}\n山东-陵县{116.58,37.34}\n山东-庆云{117.37,37.37}\n山东-临邑{116.86,37.2}\n山东-齐河{116.76,36.79}\n山东-平原{116.44,37.16}\n山东-武城{116.08,37.2}\n山东-滨州{118.03,37.36}\n山东-滨县{117.97,37.47}\n山东-广饶{118.41,37.04}\n山东-桓台{118.12,36.95}\n山东-邹平{117.75,36.89}\n山东-阳信{117.58,37.65}\n山东-沾化{118.14,37.7}\n山东-博兴{118.12,37.12}\n山东-高青{117.66,37.18}\n山东-惠民{117.51,17.49}\n山东-无棣{117.58,37.73}\n山东-潍坊{119.1,36.62}\n山东-潍县{119.22,36.77}\n山东-平度{119.97,36.77}\n山东-诸城{119.42,35.99}\n山东-安丘{119.2,36.42}\n山东-临朐{118.53,36.5}\n山东-寿光{118.73,36.86}\n山东-昌邑{119.41,36.86}\n山东-高密{119.75,36.38}\n山东-五莲{119.2,35.74}\n山东-昌乐{118.83,36.69}\n山东-高都{118.47,36.69}\n山东-烟台{121.39,37.52}\n山东-牟平{121.59,37.38}\n山东-文登{122.05,37.2}\n山东-海阳{121.17,36.76}\n山东-莱阳{120.71,36.97}\n山东-栖霞{120.83,37.28}\n山东-掖县{119.93,37.18}\n山东-长岛{120.73,37.91}\n山东-威海{122.1,37.5}\n山东-福山{121.27,37.49}\n山东-荣成{122.41,37.16}\n山东-乳山{121.52,36.89}\n山东-莱西{120.53,36.86}\n山东-招远{120.38,37.35}\n山东-黄县{120.51,37.64}\n山东-蓬莱{120.75,37.8}\n山东-临沂{118.35,35.05}\n山东-沂水{118.64,35.78}\n山东-日照{119.46,35.42}\n山东-临沭{118.73,34.89}\n山东-仓山{118.03,34.84}\n山东-平邑{117.63,35.49}\n山东-沂源{118.17,36.18}\n山东-沂南{118.47,35.54}\n山东-营县{118.83,35.57}\n山东-莒南{118.83,35.17}\n山东-郯城{118.35,34.61}\n山东-费县{117.97,35.26}\n山东-蒙阴{117.95,35.7}\n山东-泰安{117.13,36.18}\n山东-莱芜{117.67,36.19}\n山东-肥城{116.76,36.24}\n山东-平阴{116.46,36.29}\n山东-新汶{117.67,35.86}\n山东-新泰{117.76,35.91}\n山东-宁阳{116.8,35.76}\n山东-东平{116.3,35.91}\n山东-济宁{116.59,35.38}\n山东-兖州{116.83,35.54}\n山东-泗水{117.27,35.65}\n山东-鱼台{116.65,35}\n山东-嘉祥{116.34,35.41}\n山东-汶上{116.49,35.71}\n山东-曲阜{116.98,35.59}\n山东-邹县{116.97,35.39}\n山东-微山{117.12,34.8}\n山东-金乡{116.32,35.07}\n山东-荷泽{115.43,35.24}\n山东-郓城{115.94,35.59}\n山东-巨野{116.08,35.38}\n山东-单县{116.07,34.82}\n山东-曹县{115.53,34.83}\n山东-鄄城{115.5,35.57}\n山东-梁山{116.1,35.8}\n山东-成武{115.88,34.97}\n山东-定陶{115.57,35.07}\n山东-东明{115.08,35.31}\n山东-聊城{115.97,36.45}\n山东-高唐{116.23,36.86}\n山东-东阿{116.23,36.32}\n山东-莘县{115.67,36.24}\n山东-临清{115.72,36.68}\n山东-茌平{116.27,36.58}\n山东-阳谷{115.78,36.11}\n山东-冠县{115.45,35.47}\n山西-太原{112.53,37.87}\n山西-阳曲{112.65,38.05}\n山西-娄烦{111.78,38.05}\n山西-清徐{112.33,37.62}\n山西-大同{113.3,40.12}\n山西-阳泉{113.57,37.85}\n山西-长治{113.08,36.18}\n山西-天镇{114.08,40.42}\n山西-灵丘{114.2,39.47}\n山西-怀仁{113.1,39.82}\n山西-山阴{112.82,39.52}\n山西-平鲁{112.12,39.53}\n山西-右玉{112.33,40.18}\n山西-阳高{113.72,40.38}\n山西-广灵{113.27,39.75}\n山西-浑源{113.68,39.7}\n山西-应县{113.18,39.58}\n山西-朔县{112.42,39.32}\n山西-左云{112.67,40.02}\n山西-忻县{112.7,38.38}\n山西-代县{112.97,39.07}\n山西-五台{113.32,38.72}\n山西-静乐{111.9,38.37}\n山西-保德{111.09,38.01}\n山西-河曲{111.17,39.38}\n山西-神池{112.17,39.1}\n山西-原平{112.7,38.73}\n山西-繁峙{113.28,39.2}\n山西-定襄{112.95,38.5}\n山西-岢岚{111.58,38.7}\n山西-五寨{111.82,38.93}\n山西-偏关{111.47,39.45}\n山西-宁武{112.28,39}\n山西-榆次{112.72,37.68}\n山西-孟县{113.37,38.01}\n山西-昔阳{113.68,37.62}\n山西-左权{113.35,37.07}\n山西-太谷{112.53,37.42}\n山西-平遥{112.18,37.2}\n山西-灵石{111.77,36.83}\n山西-寿阳{113.17,37.88}\n山西-平定{113.62,37.79}\n山西-和顺{113.55,37.33}\n山西-榆社{112.97,37.08}\n山西-祁县{112.33,37.36}\n山西-介休{111.88,37.03}\n山西-离石{111.13,37.53}\n山西-兴县{111.22,38.47}\n山西-方由{111.24,37.86}\n山西-岚县{111.62,38.28}\n山西-交城{112.14,37.55}\n山西-文水{112.02,37.42}\n山西-汾阳{111.75,37.27}\n山西-孝义{111.8,37.12}\n山西-交口{111.2,36.97}\n山西-石楼{110.83,37}\n山西-中阳{111.17,37.37}\n山西-临县{110.95,37.95}\n山西-柳林{110.85,37.45}\n山西-襄垣{113.02,36.55}\n山西-黎城{113.4,36.56}\n山西-壶关{113.23,35.11}\n山西-高平{112.88,35.48}\n山西-阳城{112.38,35.84}\n山西-长子{112.87,36.13}\n山西-沁源{112.32,36.5}\n山西-潞城{113.22,36.33}\n山西-武乡{112.83,36.83}\n山西-平顺{113.43,36.19}\n山西-陵川{113.27,35.78}\n山西-晋城{112.83,35.52}\n山西-沁水{112.15,35.67}\n山西-屯留{112.87,36.32}\n山西-沁县{112.68,36.75}\n山西-临汾{111.5,36.08}\n山西-汾西{111.53,36.63}\n山西-安泽{112.2,36.15}\n山西-古县{111.9,36.29}\n山西-翼城{111.68,35.73}\n山西-曲沃{111.33,35.63}\n山西-吉县{110.65,36.12}\n山西-大宁{110.72,36.47}\n山西-侯马{111.45,35.03}\n山西-永和{110.64,36.62}\n山西-洪洞{111.68,36.25}\n山西-霍县{111.72,36.57}\n山西-浮山{111.83,35.97}\n山西-襄汾{111.43,35.86}\n山西-乡宁{110.8,35.97}\n山西-蒲县{111.07,36.42}\n山西-运城{110.97,35.03}\n山西-闻喜{111.2,35.37}\n山西-垣曲{111.63,35.3}\n山西-芮城{110.68,34.71}\n山西-临猗{110.78,35.15}\n山西-新绛{111.22,35.62}\n山西-河津{110.7,35.58}\n山西-夏县{111.22,35.12}\n山西-绛县{111.58,35.48}\n山西-平陆{111.2,34.12}\n山西-永济{110.42,34.88}\n山西-万荣{110.83,35.42}\n山西-稷山{110.97,35.6}\n广东-广州{113.23,23.16}\n广东-花县{113.19,23.4}\n广东-新十{114.2,24.09}\n广东-增城{113.81,23.13}\n广东-从化{113.55,23.57}\n广东-龙门{114.25,23.75}\n广东-番禺{113.36,22.95}\n广东-海口{110.35,20.02}\n广东-汕头{116.69,23.39}\n广东-洪江{110.38,21.2}\n广东-茂名{110.88,21.68}\n广东-佛山{113.11,23.05}\n广东-江门{113.06,22.61}\n广东-深圳{114.07,22.62}\n广东-宝安{113.85,22.58}\n广东-珠海{113.52,22.3}\n广东-韶关{113.62,24.84}\n广东-曲江{113.58,24.68}\n广东-乐昌{113.35,25.14}\n广东-仁化{113.73,25.11}\n广东-南雄{114.33,25.14}\n广东-始兴{114.08,24.78}\n广东-翁源{114.13,24.36}\n广东-佛岗{113.52,23.86}\n广东-英德{113.38,24.17}\n广东-清远{113.01,23.7}\n广东-阳山{112.65,24.48}\n广东-连县{112.4,24.77}\n广东-连山{112.07,24.59}\n广东-连南{112.28,24.77}\n广东-惠州{114.4,23.09}\n广东-惠阳{114.4,23.09}\n广东-博罗{114.28,23.18}\n广东-河源{114.68,23.73}\n广东-连平{114.48,24.39}\n广东-和平{114.89,24.45}\n广东-龙川{115.25,24.09}\n广东-紫金{115.18,23.64}\n广东-惠东{114.7,22.97}\n广东-东莞{113.75,23.04}\n广东-梅州{116.1,24.55}\n广东-梅县{116.1,24.55}\n广东-平远{117.9,24.59}\n广东-蕉岭{116.18,24.66}\n广东-大埔{116.7,24.34}\n广东-丰顺{116.18,23.78}\n广东-五华{115.75,23.93}\n广东-兴宁{115.75,24.15}\n广东-潮州{116.63,23.68}\n广东-澄海{116.8,23.48}\n广东-潮安{116.63,23.68}\n广东-饶平{117.01,23.7}\n广东-南澳{117.03,23.44}\n广东-潮阳{116.61,23.27}\n广东-惠来{116.29,23.07}\n广东-陆丰{117.64,22.95}\n广东-海丰{117.33,22.98}\n广东-普宁{116.17,23.29}\n广东-揭西{115.82,23.45}\n广东-揭阳{116.35,23.55}\n广东-南海{113.11,23.05}\n广东-三水{112.89,23.18}\n广东-顺德{113.24,22.84}\n广东-中山{113.38,22.52}\n广东-斗门{113.25,22.2}\n广东-新会{113.02,22.52}\n广东-鹤山{112.94,22.76}\n广东-开平{112.68,22.36}\n广东-台山{112.78,22.27}\n广东-恩平{112.29,22.21}\n广东-高明{112.76,21.71}\n广东-廉江{110.27,21.63}\n广东-化州{110.59,21.64}\n广东-高州{110.83,21.95}\n广东-信宜{110.9,22.36}\n广东-阳春{111.78,22.16}\n广东-阳江{111.95,21.85}\n广东-电白{110.99,21.52}\n广东-吴川{110.78,21.43}\n广东-徐闻{110.17,20.34}\n广东-海康{110.07,20.91}\n广东-遂溪{110.24,21.39}\n广东-肇庆{112.44,23.05}\n广东-高要{112.44,23.05}\n广东-怀集{112.18,23.93}\n广东-广宁{112.43,23.14}\n广东-四会{112.68,23.36}\n广东-新兴{112.2,22.68}\n广东-云浮{112.02,22.93}\n广东-罗定{111.56,22.77}\n广东-郁南{111.51,23.23}\n广东-德庆{111.75,23.15}\n广东-封开{111.48,23.45}\n广西-南宁{108.33,22.84}\n广西-柳州{109.4,24.33}\n广西-桂林{110.28,25.29}\n广西-梧州{111.34,23.51}\n广西-凭祥{106.75,22.11}\n广西-邕宁{108.49,22.74}\n广西-武鸣{108.27,23.17}\n广西-马山{108.2,23.73}\n广西-上林{108.59,23.44}\n广西-宾阳{108.8,23.22}\n广西-横县{109.2,22.69}\n广西-扶绥{107.92,22.65}\n广西-崇左{107.37,22.42}\n广西-宁明{107.08,22.12}\n广西-龙州{106.84,22.36}\n广西-大新{107.21,22.85}\n广西-天等{107.12,23.08}\n广西-隆安{107.68,23.18}\n广西-河池{108.06,24.7}\n广西-环江{108.26,24.83}\n广西-罗城{108.9,24.79}\n广西-宜山{108.64,24.47}\n广西-东兰{107.36,24.53}\n广西-凤山{107.05,24.55}\n广西-天峨{107.16,25.01}\n广西-南丹{107.54,24.98}\n广西-都安{108.09,23.94}\n广西-巴马{107.25,24.15}\n广西-合山{108.89,23.82}\n广西-柳城{109.24,24.67}\n广西-融安{109.37,24.24}\n广西-鹿寨{109.74,24.49}\n广西-象州{109.7,23.98}\n广西-武宜{109.66,23.6}\n广西-柳江{109.34,24.27}\n广西-来宾{109.24,23.76}\n广西-忻城{108.66,24.07}\n广西-融水{109.24,25.07}\n广西-三江{109.58,25.8}\n广西-金秀{110.18,24.14}\n广西-临桂{110.22,25.22}\n广西-灵川{110.33,25.42}\n广西-兴安{110.66,25.6}\n广西-资源{110.66,26.03}\n广西-全州{111.06,25.96}\n广西-灌阳{111.14,25.49}\n广西-恭城{110.81,24.85}\n广西-平乐{110.66,24.64}\n广西-荔浦{110.38,24.51}\n广西-永福{109.98,24.99}\n广西-龙胜{110.02,25.78}\n广西-苍悟{111.22,23.51}\n广西-钟山{111.3,24.53}\n广西-富川{110.26,24.83}\n广西-贺县{111.54,24.44}\n广西-岑溪{111,22.95}\n广西-藤县{110.9,23.36}\n广西-蒙山{110.54,24.22}\n广西-昭平{110.8,24.18}\n广西-玉林{110.14,22.64}\n广西-桂平{110.07,23.38}\n广西-平南{110.4,23.55}\n广西-容县{110.53,22.87}\n广西-北流{110.33,22.71}\n广西-陆川{110.25,22.33}\n广西-博白{109.98,22.27}\n广西-贵县{109.6,23.11}\n广西-北海{109.12,21.49}\n广西-钦州{108.61,21.96}\n广西-灵山{109.29,22.44}\n广西-浦北{109.56,22.27}\n广西-合浦{109.2,21.33}\n广西-上思{107.98,22.16}\n广西-防城{108.35,21.78}\n广西-百色{106.62,23.91}\n广西-凌云{106.55,24.35}\n广西-乐业{106.56,24.78}\n广西-田阳{106.9,23.75}\n广西-田东{107.12,23.62}\n广西-平果{107.59,23.33}\n广西-德保{106.6,23.34}\n广西-靖西{106.41,23.15}\n广西-那坡{105.85,23.42}\n广西-西林{105.08,24.51}\n广西-田林{106.24,24.31}\n广西-隆林{105.34,24.8}\n新疆-乌鲁木齐{87.68,43.77}\n新疆-克拉玛依{84.77,45.59}\n新疆-石河子{85.94,44.27}\n新疆-吐鲁番{89.19,42.91}\n新疆-托克逊{88.63,42.77}\n新疆-鄯善{90.25,42.82}\n新疆-哈密{93.44,42.78}\n新疆-伊吾{94.65,43.28}\n新疆-巴里坤{93,43.6}\n新疆-库尔勒{86.06,41.68}\n新疆-和静{86.35,42.31}\n新疆-和硕{86.84,42.23}\n新疆-博湖{86.53,41.95}\n新疆-尉梨{86.24,41.36}\n新疆-轮台{84.25,41.77}\n新疆-焉耆{86.55,42.05}\n新疆-和田{79.94,37.12}\n新疆-民丰{82.63,37.07}\n新疆-策勒{80.78,37.04}\n新疆-于田{81.63,36.86}\n新疆-洛浦{80.17,37.12}\n新疆-皮山{78.29,37.06}\n新疆-墨玉{79.74,37.31}\n新疆-阿克苏{80.29,41.15}\n新疆-温宿{80.24,41.29}\n新疆-拜城{81.84,41.82}\n新疆-库车{82.97,41.68}\n新疆-新和{82.63,41.55}\n新疆-沙雅{82.9,41.25}\n新疆-阿瓦提{80.34,40.64}\n新疆-柯平{79.06,40.55}\n新疆-乌什{79.25,41.22}\n新疆-咯什{75.94,39.52}\n新疆-巴楚{78.59,39.78}\n新疆-枷师{76.78,39.46}\n新疆-乐普湖{76.67,39.23}\n新疆-麦盖提{77.62,38.95}\n新疆-莎车{77.25,38.45}\n新疆-泽普{77.26,38.2}\n新疆-叶城{77.42,37.89}\n新疆-疏勒{76.05,39.41}\n新疆-英吉沙{76.17,38.91}\n新疆-疏附{75.83,39.42}\n新疆-塔什库尔干{75.22,37.76}\n新疆-阿图什{76.12,39.73}\n新疆-阿合奇{78.42,41.91}\n新疆-阿克陶{75.94,39.14}\n新疆-乌恰{75.18,39.7}\n新疆-昌吉{87.31,44.05}\n新疆-阜康{87.94,44.14}\n新疆-奇台{89.52,44.02}\n新疆-吉木萨尔{89.14,44}\n新疆-米泉{87.68,43.97}\n新疆-玛纳斯{86.22,44.28}\n新疆-呼图壁{86.92,44.18}\n新疆-木垒{90.34,43.8}\n新疆-博乐{82.1,44.93}\n新疆-精河{82.92,44.67}\n新疆-温泉{81.08,44.95}\n新疆-伊宁{81.33,43.91}\n新疆-尼勒克{82.53,43.82}\n新疆-新源{83.27,43.41}\n新疆-巩留{82.23,43.35}\n新疆-奎屯{84.89,44.45}\n新疆-特克斯{81.81,43.23}\n新疆-昭苏{81.08,43.15}\n新疆-霍城{80.87,44.07}\n新疆-察布察尔{81.12,43.82}\n新疆-塔城{82.96,46.74}\n新疆-额敏{83.62,46.52}\n新疆-乌苏{84.62,44.45}\n新疆-托里{83.59,45.92}\n新疆-裕民{82.94,46.21}\n新疆-沙湾{85.56,44.29}\n新疆-和布克赛尔{85.13,46.78}\n新疆-阿勒泰{88.14,47.86}\n新疆-青河{90.37,46.71}\n新疆-富蕴{89.44,47.05}\n新疆-福海{87.51,47.15}\n新疆-吉木乃{85.84,47.42}\n新疆-布尔津{86.92,47.7}\n新疆-哈巴河{86.41,48.05}\n江苏-南京{118.78,32.04}\n江苏-江宁{118.83,31.95}\n江苏-六合{118.83,32.36}\n江苏-江浦{118.62,32.07}\n江苏-徐州{117.2,34.26}\n江苏-连云港{119.16,34.59}\n江苏-南通{120.86,32.01}\n江苏-苏州{120.62,31.32}\n江苏-无锡{120.29,31.59}\n江苏-常州{119.95,31.79}\n江苏-丰县{116.57,34.79}\n江苏-沛县{116.93,34.73}\n江苏-赣榆{119.11,34.83}\n江苏-东海{118.75,34.54}\n江苏-新沂{118.33,34.38}\n江苏-邳县{117.97,34.3}\n江苏-睢宁{117.94,33.89}\n江苏-铜山{117.2,34.26}\n江苏-清江{119.02,33.59}\n江苏-灌云{119.23,34.3}\n江苏-灌南{119.36,34.09}\n江苏-沭阳{118.79,34.12}\n江苏-宿迁{118.3,33.96}\n江苏-泗阳{118.68,33.73}\n江苏-盱眙{118.05,33}\n江苏-涟水{119.26,33.77}\n江苏-淮阴{119.02,33.62}\n江苏-淮安{119.15,33.5}\n江苏-洪泽{118.85,33.28}\n江苏-泗洪{118.23,33.46}\n江苏-金湖{119.02,33.01}\n江苏-盐城{120.13,33.38}\n江苏-滨海{119.84,34.01}\n江苏-阜宁{119.79,33.78}\n江苏-射阳{120.26,33.77}\n江苏-建湖{119.77,33.46}\n江苏-响水{119.56,34.2}\n江苏-大丰{120.45,33.19}\n江苏-东台{120.31,32.84}\n江苏-海安{120.45,32.57}\n江苏-如皋{120.56,32.39}\n江苏-如东{121.18,32.33}\n江苏-启东{121.66,31.8}\n江苏-海门{121.15,31.89}\n江苏-南通{120.86,32.01}\n江苏-扬州{119.42,32.39}\n江苏-宝应{119.32,33.23}\n江苏-兴化{119.82,32.93}\n江苏-高邮{119.45,32.78}\n江苏-泰兴{120.02,32.16}\n江苏-泰县{120.15,32.51}\n江苏-泰州{119.9,32.49}\n江苏-靖江{120.26,32.03}\n江苏-江都{119.55,32.43}\n江苏-邗江{119.42,32.39}\n江苏-仪征{119.16,32.27}\n江苏-镇江{119.44,32.2}\n江苏-丹徒{119.44,32.2}\n江苏-扬中{119.81,32.24}\n江苏-丹阳{119.55,32}\n江苏-武进{119.95,31.78}\n江苏-宜兴{119.82,31.36}\n江苏-金坛{119.56,31.74}\n江苏-溧阳{119.48,31.43}\n江苏-句容{119.16,31.95}\n江苏-溧水{119.02,31.65}\n江苏-高淳{118.87,31.32}\n江苏-江阴{120.26,31.91}\n江苏-沙洲{120.55,31.86}\n江苏-常熟{120.74,31.64}\n江苏-太仓{121.1,31.45}\n江苏-昆山{120.95,31.39}\n江苏-吴县{120.62,31.32}\n江苏-吴江{120.63,31.16}\n江西-南昌{115.89,28.68}\n江西-新建{115.8,28.69}\n江西-景德镇{117.22,29.3}\n江西-萍乡{113.85,27.6}\n江西-九江{115.97,29.71}\n江西-彭泽{116.56,29.9}\n江西-湖口{116.23,29.75}\n江西-都昌{116.19,29.29}\n江西-星子{116.03,29.47}\n江西-永修{115.82,29.04}\n江西-德安{115.75,29.33}\n江西-瑞昌{115.65,29.68}\n江西-武宁{115.09,29.26}\n江西-修永{114.55,29.04}\n江西-上饶{117.97,28.47}\n江西-婺源{117.83,29.25}\n江西-德兴{117.58,28.96}\n江西-玉山{118.25,28.68}\n江西-广丰{118.2,28.45}\n江西-铅山{117.71,28.32}\n江西-横峰{117.62,28.42}\n江西-鹰潭{117.02,28.23}\n江西-贵溪{117.2,28.3}\n江西-余江{116.82,28.22}\n江西-万年{117.08,28.7}\n江西-乐平{117.12,28.97}\n江西-波阳{116.68,29}\n江西-于干{116.69,28.7}\n江西-弋阳{117.43,28.42}\n江西-宜春{114.38,27.81}\n江西-万载{114.44,28.11}\n江西-铜鼓{114.37,28.53}\n江西-宜丰{114.78,28.4}\n江西-上高{114.91,28.25}\n江西-安义{115.55,28.86}\n江西-奉新{115.38,28.71}\n江西-高安{115.38,28.42}\n江西-丰城{115.7,28.19}\n江西-清江{115.54,28.07}\n江西-新余{114.92,27.81}\n江西-分宜{114.68,27.82}\n江西-靖安{115.37,28.88}\n江西-抚州{116.34,28}\n江西-临川{116.29,27.95}\n江西-金溪{116.77,27.92}\n江西-资溪{117.06,27.7}\n江西-黎川{116.91,27.3}\n江西-南丰{116.52,27.22}\n江西-南城{116.62,27.56}\n江西-宜黄{116.2,27.55}\n江西-崇仁{116.05,27.75}\n江西-乐安{115.82,27.44}\n江西-东乡{116.61,28.23}\n江西-进贤{116.26,28.37}\n江西-吉安{114.97,27.12}\n江西-新干{115.4,27.77}\n江西-峡江{115.15,27.56}\n江西-吉水{115.14,27.22}\n江西-永丰{115.42,27.33}\n江西-泰和{114.88,26.81}\n江西-万安{114.77,26.47}\n江西-遂川{114.5,26.33}\n江西-宁冈{113.97,26.71}\n江西-永新{114.23,26.96}\n江西-莲花{113.94,27.14}\n江西-安福{114.62,27.39}\n江西-井冈山{114.17,26.57}\n江西-赣州{114.92,25.85}\n江西-广昌{116.32,26.84}\n江西-石城{116.32,26.34}\n江西-宁都{116,26.46}\n江西-兴国{115.33,26.32}\n江西-于都{115.39,25.96}\n江西-瑞金{116.02,25.89}\n江西-会昌{115.79,25.58}\n江西-安远{115.41,25.15}\n江西-寻乌{115.64,24.96}\n江西-定南{115.02,24.7}\n江西-龙南{114.79,24.91}\n江西-全南{114.53,24.76}\n江西-信丰{114.94,25.39}\n江西-赣县{114.02,25.85}\n江西-南康{114.75,25.66}\n江西-上犹{114.55,25.8}\n江西-崇义{114.31,25.69}\n江西-大余{114.36,25.39}\n河北-石家庄{114.48,38.03}\n河北-唐山{118.02,39.63}\n河北-行唐{114.54,38.42}\n河北-灵寿{114.38,38.31}\n河北-束鹿{115.18,37.94}\n河北-晋县{115.03,38.03}\n河北-藁城{114.84,38.03}\n河北-高邑{114.58,37.62}\n河北-赵县{114.78,37.76}\n河北-井陉{114.13,38.03}\n河北-获鹿{114.03,38.08}\n河北-新乐{114.67,38.33}\n河北-正定{114.56,38.13}\n河北-深泽{115.2,38.2}\n河北-无极{114.96,38.16}\n河北-赞皇{114.35,37.65}\n河北-元氏{114.5,37.74}\n河北-栾城{114.64,38.87}\n河北-平山{114.24,38.2}\n河北-邯郸{114.47,36.6}\n河北-永年{114.5,36.77}\n河北-曲周{114.92,36.78}\n河北-馆陶{115.4,36.47}\n河北-魏县{114.94,36.37}\n河北-成安{114.68,36.43}\n河北-大名{115.14,36.28}\n河北-涉县{113.67,36.57}\n河北-鸡泽{113.85,36.95}\n河北-丘县{115.18,36.84}\n河北-广平{114.94,36.49}\n河北-肥乡{114.8,36.56}\n河北-临漳{114.62,36.35}\n河北-磁县{114.37,36.37}\n河北-武安{114.2,36.7}\n河北-邢台{114.48,37.05}\n河北-柏乡{114.68,37.49}\n河北-宁普{114.9,37.62}\n河北-隆尧{114.75,37.35}\n河北-临西{115.5,36.87}\n河北-南官{115.37,37.37}\n河北-巨鹿{115.03,37.22}\n河北-任县{114.68,37.11}\n河北-沙河{114.52,36.94}\n河北-临城{114.5,37.43}\n河北-内丘{114.5,37.28}\n河北-新河{115.22,37.53}\n河北-清河{115.67,37.07}\n河北-威县{115.08,36.97}\n河北-广宗{115.14,37.06}\n河北-平乡{115.02,37.06}\n河北-南和{114.71,37}\n河北-保定{115.48,38.85}\n河北-涞水{115.71,39.39}\n河北-涿县{115.98,39.48}\n河北-定兴{115.78,39.28}\n河北-容城{115.86,39.06}\n河北-安新{115.92,38.92}\n河北-蠡县{115.58,38.49}\n河北-博野{115.46,38.46}\n河北-定县{114.02,38.52}\n河北-阜平{114.18,38.85}\n河北-唐县{114.97,38.75}\n河北-涞源{114.67,39.37}\n河北-易县{115.49,39.35}\n河北-新城{115.84,39.34}\n河北-雄县{116.1,38.98}\n河北-徐水{115.65,39.02}\n河北-高阳{115.78,38.68}\n河北-安国{115.3,38.41}\n河北-清苑{115.47,38.76}\n河北-望都{115.14,38.71}\n河北-曲阳{114.68,38.62}\n河北-完县{115.12,38.84}\n河北-满城{115.45,38.95}\n河北-张家口{114.87,40.82}\n河北-康保{114.6,41.87}\n河北-赤城{115.82,40.92}\n河北-怀来{115.54,40.4}\n河北-蔚县{114.53,39.83}\n河北-宣化{115.03,40.63}\n河北-张北{114.7,41.15}\n河北-沽源{115.68,41.68}\n河北-崇礼{115.25,40.98}\n河北-涿鹿{115.2,40.37}\n河北-阳原{114.15,40.12}\n河北-怀安{114.38,40.67}\n河北-尚义{113.95,41.05}\n河北-万全{114.73,40.84}\n河北-承德{117.93,40.97}\n河北-围场{117.72,41.95}\n河北-平泉{118.68,41.02}\n河北-宽城{118.47,40.62}\n河北-兴隆{117.48,40.42}\n河北-滦平{117.53,40.95}\n河北-隆化{117.7,41.32}\n河北-青龙{118.93,40.43}\n河北-丰宁{116.63,41.2}\n河北-秦皇岛{119.57,39.95}\n河北-迁西{118.3,40.15}\n河北-迁安{118.69,40.02}\n河北-昌黎{119.15,39.72}\n河北-卢龙{118.85,39.89}\n河北-滦南{118.67,39.49}\n河北-玉田{117.9,39.9}\n河北-唐海{118.54,39.31}\n河北-遵化{117.97,40.2}\n河北-抚宁{119.22,39.88}\n河北-乐亭{118.9,39.43}\n河北-滦县{118.73,39.74}\n河北-丰南{118.1,39.58}\n河北-丰润{118.13,39.82}\n河北-廊坊{116.7,39.53}\n河北-安次{116.69,39.52}\n河北-三河{117.06,39.97}\n河北-香河{117,39.76}\n河北-霸县{116.38,39.12}\n河北-固安{116.29,39.44}\n河北-大城{116.63,38.7}\n河北-文安{116.45,38.87}\n河北-永清{116.48,39.32}\n河北-大厂{116.98,39.98}\n河北-沧州{116.83,38.33}\n河北-黄骅{117.33,38.4}\n河北-盐山{117.22,38.07}\n河北-吴桥{116.37,37.65}\n河北-东光{116.52,37.89}\n河北-肃宁{115.82,38.43}\n河北-河间{116.07,38.45}\n河北-泊头{116.56,38.08}\n河北-交河{116.27,38.02}\n河北-青县{116.8,38.58}\n河北-海兴{117.85,38.17}\n河北-南皮{116.7,38.05}\n河北-任丘{116.08,38.72}\n河北-献县{116.12,38.2}\n河北-孟村{117.1,38.06}\n河北-衡水{115.72,37.72}\n河北-饶阳{115.74,38.24}\n河北-阜城{116.14,37.87}\n河北-景县{116.26,37.69}\n河北-枣强{115.72,37.52}\n河北-深县{115.56,38.02}\n河北-安平{115.5,38.22}\n河北-武强{115.96,38.03}\n河北-武邑{115.9,37.81}\n河北-故城{115.96,37.36}\n河北-冀县{115.56,37.59}\n河南-郑州{113.65,34.76}\n河南-荥阳{113.35,34.79}\n河南-开封{114.35,34.79}\n河南-平顶山{113.29,33.75}\n河南-洛阳{112.44,34.7}\n河南-焦作{113.21,35.24}\n河南-鹤壁{114.17,35.9}\n河南-杞县{114.77,34.56}\n河南-尉氏{114.17,34.41}\n河南-新郑{113.71,34.4}\n河南-登封{113.02,34.46}\n河南-通许{114.46,34.48}\n河南-中牟{114,34.73}\n河南-密县{113.35,34.51}\n河南-巩县{112.96,34.76}\n河南-兰考{114.81,34.69}\n河南-新乡{113.85,35.31}\n河南-汲县{114.05,35.44}\n河南-封丘{114.04,35.03}\n河南-获嘉{113.63,35.27}\n河南-温贺{113.06,34.94}\n河南-济源{112.57,35.08}\n河南-博爱{113.05,35.16}\n河南-辉县{113.77,35.46}\n河南-延津{114.19,35.14}\n河南-原阳{113.96,35.05}\n河南-武陟{113.38,35.1}\n河南-孟县{112.77,34.92}\n河南-沁阳{112.92,35.08}\n河南-修武{113.42,35.24}\n河南-安阳{114.35,36.1}\n河南-南乐{115.21,36.08}\n河南-范县{115.46,35.9}\n河南-台前{115.83,36}\n河南-滑县{114.52,35.57}\n河南-浚县{114.54,35.67}\n河南-淇县{114.17,35.6}\n河南-内黄{114.88,35.95}\n河南-清丰{115.1,35.89}\n河南-濮阳{114.98,35.71}\n河南-长垣{114.67,35.19}\n河南-汤阴{114.35,35.92}\n河南-林县{113.81,36.06}\n河南-商丘{115.65,34.44}\n河南-夏邑{116.13,34.22}\n河南-柘城{115.29,34.08}\n河南-睢县{115.04,34.46}\n河南-虞城{115.87,34.4}\n河南-永城{116.37,33.94}\n河南-宁陵{115.31,34.44}\n河南-民权{115.13,34.65}\n河南-周口{114.63,33.63}\n河南-商水{114.59,33.54}\n河南-扶沟{114.38,34.05}\n河南-鹿邑{115.48,33.86}\n河南-淮阳{114.88,33.74}\n河南-沈丘{115.06,33.41}\n河南-西华{114.5,33.79}\n河南-太康{114.85,34.06}\n河南-郸城{115.17,33.63}\n河南-项城{114.9,33.44}\n河南-许昌{113.81,34.02}\n河南-鄢县{114.17,34.11}\n河南-郾城{113.98,33.6}\n河南-襄城{113.46,33.86}\n河南-鲁山{112.88,33.74}\n河南-郏县{113.19,33.98}\n河南-漯河{114.02,33.56}\n河南-长葛{113.77,34.22}\n河南-临颖{113.94,33.81}\n河南-舞阳{113.58,33.44}\n河南-叶县{113.35,33.62}\n河南-宝丰{113.04,33.86}\n河南-禹县{113.47,34.16}\n河南-驻马店{114.02,32.98}\n河南-确山{114.02,32.83}\n河南-西平{114,33.38}\n河南-汝南{114.35,33}\n河南-新蔡{114.97,32.75}\n河南-泌阳{113.31,32.72}\n河南-遂平{113.98,33.15}\n河南-上蔡{114.26,33.25}\n河南-平舆{114.62,32.97}\n河南-正阳{114.38,32.62}\n河南-信阳{114.08,32.13}\n河南-息县{114.72,32.35}\n河南-固始{115.68,32.17}\n河南-潢川{115.04,32.13}\n河南-新县{114.83,31.62}\n河南-罗山{114.53,32.21}\n河南-淮滨{115.41,32.44}\n河南-商城{115.42,31.81}\n河南-光山{114.91,32.02}\n河南-南阳{112.53,33.01}\n河南-方城{112.98,33.25}\n河南-唐河{112.83,32.7}\n河南-新野{112.36,32.51}\n河南-邓县{112.08,32.68}\n河南-淅川{111.47,33.14}\n河南-南召{112.4,33.49}\n河南-社旗{112.92,33.05}\n河南-桐柏{113.4,32.37}\n河南-镇平{112.23,33.03}\n河南-内乡{111.83,33.05}\n河南-西峡{111.5,33.31}\n河南-三门峡{111.19,34.76}\n河南-孟津{112.42,34.84}\n河南-临汝{112.83,34.17}\n河南-汝阳{112.46,34.16}\n河南-嵩县{112.07,34.14}\n河南-栾川{111.6,33.81}\n河南-灵宝{110.85,34.52}\n河南-渑池{111.75,34.76}\n河南-义马{111.92,34.73}\n河南-偃师{112.77,34.73}\n河南-伊川{112.42,34.43}\n河南-宜阳{112.15,34.51}\n河南-洛宁{111.65,34.39}\n河南-卢氏{111.03,34.06}\n河南-陕县{111.19,34.76}\n河南-新安{112.14,34.75}\n浙江-杭州{120.19,30.26}\n浙江-余杭{120.3,30.43}\n浙江-富阳{119.95,30.07}\n浙江-建德{119.27,29.49}\n浙江-临安{119.72,30.23}\n浙江-萧山{120.25,30.16}\n浙江-桐庐{119.64,29.8}\n浙江-淳安{119.05,29.61}\n浙江-宁波{121.56,29.86}\n浙江-镇海{121.72,29.96}\n浙江-温州{120.65,28.01}\n浙江-瓯海{120.65,28.01}\n浙江-永喜{120.68,28.16}\n浙江-洞头{121.12,27.84}\n浙江-平阳{120.55,27.68}\n浙江-泰顺{119.7,27.57}\n浙江-乐清{120.94,28.14}\n浙江-瑞安{120.62,27.8}\n浙江-文成{120.08,27.08}\n浙江-苍南{120.36,27.53}\n浙江-湖州{120.1,30.86}\n浙江-平湖{121.02,30.7}\n浙江-桐乡{120.54,30.64}\n浙江-安吉{119.68,30.68}\n浙江-嘉善{120.92,30.84}\n浙江-嘉兴{120.76,30.77}\n浙江-海盐{120.92,30.53}\n浙江-海宁{120.69,30.53}\n浙江-德清{120.08,30.54}\n浙江-长兴{119.91,30.01}\n浙江-定海{122.11,30.03}\n浙江-岱山{122.2,30.26}\n浙江-嵊四{122.45,30.72}\n浙江-普陀{122.3,29.97}\n浙江-鄞县{121.56,29.86}\n浙江-象山{121.8,29.48}\n浙江-奉化{121.41,29.66}\n浙江-慈溪{121.23,30.18}\n浙江-宁海{121.42,29.3}\n浙江-余姚{121.16,30.04}\n浙江-绍兴{120.58,30.01}\n浙江-新昌{120.89,29.49}\n浙江-诸暨{120.23,29.71}\n浙江-上虞{120.87,30.03}\n浙江-嵊县{120.81,29.6}\n浙江-椒江{121.44,28.67}\n浙江-临海{121.13,28.8}\n浙江-三门{121.38,29.11}\n浙江-温岭{121.36,28.36}\n浙江-仙居{120.73,28.85}\n浙江-天台{121.03,29.15}\n浙江-黄岩{121.27,28.64}\n浙江-玉环{121.23,28.14}\n浙江-丽水{119.92,28.45}\n浙江-青田{120.28,28.45}\n浙江-庆无{119.06,27.61}\n浙江-遂昌{119.25,28.59}\n浙江-缙云{120.6,28.66}\n浙江-云和{119.56,28.12}\n浙江-龙泉{119.13,28.08}\n浙江-松阳{119.48,28.46}\n浙江-金华{119.64,29.12}\n浙江-浦江{119.88,29.46}\n浙江-东阳{120.23,29.27}\n浙江-武义{119.81,28.9}\n浙江-江山{118.61,28.74}\n浙江-开化{118.39,29.15}\n浙江-衢州{118.88,28.97}\n浙江-兰溪{119.48,29.19}\n浙江-义乌{120.06,29.32}\n浙江-永康{120.02,28.92}\n浙江-常山{118.5,28.9}\n海南-海口{110.35,20.02}\n海南-琼山{110.33,19.98}\n海南-文昌{110.72,19.61}\n海南-定安{110.31,19.68}\n海南-琼海{110.46,19.25}\n海南-万宁{110.39,18.8}\n海南-屯昌{110.1,19.36}\n海南-澄迈{110,19.75}\n海南-儋县{109.57,19.52}\n海南-临高{109.69,19.91}\n海南-保亭{109.7,18.64}\n海南-白沙{109.44,19.23}\n海南-琼中{109.83,19.05}\n海南-陵水{110.02,18.48}\n海南-崖县{109.5,18.25}\n海南-乐东{109.17,18.73}\n海南-东方{108.64,19.09}\n海南-昌江{109.03,19.25}\n港澳台-香港{114.1,22.2}\n港澳台-澳门{113.33,22.13}\n港澳台-台北{121.5,25.05}\n港澳台-高雄{120.37,22.64}\n港澳台-基隆{121.73,25.14}\n港澳台-台中{120.67,24.15}\n港澳台-台南{120.19,22.98}\n港澳台-宜兰{121.75,24.75}\n港澳台-桃园{121.3,25}\n港澳台-新竹{120.96,24.81}\n湖北-武汉{114.31,30.52}\n湖北-武昌{114.33,30.35}\n湖北-汉阳{114.02,30.57}\n湖北-黄石{115.09,30.2}\n湖北-十堰{110.79,32.65}\n湖北-沙市{112.24,30.32}\n湖北-宜昌{111.3,30.7}\n湖北-襄樊{112.14,30.02}\n湖北-孝感{113.91,31.92}\n湖北-黄陂{114.36,30.88}\n湖北-汉川{113.59,30.63}\n湖北-云梦{113.73,31.02}\n湖北-应山{113.81,31.62}\n湖北-大悟{114.09,31.56}\n湖北-应城{113.6,30.94}\n湖北-安陆{113.69,31.25}\n湖北-鄂城{114.87,30.38}\n湖北-黄冈{114.87,30.44}\n湖北-新洲{114.8,31.84}\n湖北-红安{114.61,31.29}\n湖北-麻城{115,31.17}\n湖北-罗川{115.37,30.79}\n湖北-浠水{115.22,30.46}\n湖北-蕲春{115.3,30.24}\n湖北-黄梅{115.93,30.09}\n湖北-广济{115.56,29.85}\n湖北-英山{115.57,30.75}\n湖北-咸宁{114.28,29.87}\n湖北-阳新{115.22,29.83}\n湖北-通山{114.52,29.6}\n湖北-通城{113.8,29.23}\n湖北-嘉鱼{113.91,29.97}\n湖北-崇阳{114.04,29.54}\n湖北-蒲圻{113.85,29.71}\n湖北-荆门{112.19,31.02}\n湖北-江陵{112.18,30.35}\n湖北-钟祥{112.58,31.17}\n湖北-京山{113.11,31.03}\n湖北-监利{112.9,29.83}\n湖北-石首{112.41,29.73}\n湖南-长沙{113,28.21}\n湖南-望城{112.8,28.37}\n湖南-株洲{113.16,27.83}\n湖南-湘潭{112.91,27.87}\n湖南-衡阳{112.61,26.89}\n湖南-邵阳{111.5,27.22}\n湖南-岳阳{113.09,29.37}\n湖南-临湘{113.42,29.48}\n湖南-平江{113.56,29.71}\n湖南-泪罗{113.05,28.8}\n湖南-湘阴{112.87,28.68}\n湖南-华容{112.55,29.52}\n湖南-浏阳{113.63,28.16}\n湖南-醴陵{113.5,27.67}\n湖南-攸县{113.32,27.01}\n湖南-茶陵{113.54,26.79}\n湖南-酃县{113.77,26.49}\n湖南-湘乡{112.5,27.75}\n湖南-郴州{113,25.79}\n湖南-郴县{113,25.79}\n湖南-安仁{113.27,26.71}\n湖南-永兴{113.11,26.13}\n湖南-资兴{113.39,25.95}\n湖南-桂东{113.91,25.08}\n湖南-汝城{113.68,25.54}\n湖南-宜章{113.96,25.41}\n湖南-临武{112.55,25.27}\n湖南-嘉禾{112.35,25.56}\n湖南-桂阳{112.72,25.73}\n湖南-来阳{112.84,26.41}\n湖南-衡南{112.61,26.89}\n湖南-衡山{112.86,27.25}\n湖南-衡东{112.95,27.1}\n湖南-常宁{112.39,26.38}\n湖南-祁阳{111.85,26.59}\n湖南-祁东{112.14,26.8}\n湖南-衡阳{112.61,26.89}\n湖南-永州{111.63,26.22}\n湖南-零陵{111.63,26.22}\n湖南-新田{112.21,25.91}\n湖南-宁远{111.95,25.6}\n湖南-蓝山{112.16,25.37}\n湖南-双牌{111.64,25.96}\n湖南-江永{111.33,25.41}\n湖南-道县{111.57,25.52}\n湖南-东安{111.28,26.41}\n湖南-江华{111.79,24.97}\n湖南-新宁{110.84,26.44}\n湖南-武冈{110.61,26.73}\n湖南-隆回{111.04,27.13}\n湖南-绥宁{110.14,25.59}\n湖南-洞口{110.57,27.06}\n湖南-城步{110.3,26.37}\n湖南-娄底{111.96,27.71}\n湖南-涟源{111.66,27.68}\n湖南-新邵{111.46,27.33}\n湖南-双峰{112.18,27.44}\n湖南-冷水江{111.41,27.68}\n湖南-邵东{111.73,27.25}\n湖南-新化{111.29,27.73}\n湖南-怀化{109.95,27.52}\n湖南-黔阳{110.14,27.33}\n湖南-辰溪{110.18,28.02}\n湖南-沅陵{110.39,28.46}\n湖南-溆浦{110.57,27.92}\n湖南-会同{109.71,26.86}\n湖南-靖县{109.68,26.57}\n湖南-洪江{109.96,27.1}\n湖南-芷江{109.78,27.44}\n湖南-麻阳{109.79,27.87}\n湖南-通道{109.77,26.16}\n湖南-新晃{109.16,27.37}\n湖南-吉首{109.71,28.3}\n湖南-永顺{109.84,29}\n湖南-桑植{110.16,29.38}\n湖南-大庸{110.48,29.13}\n湖南-古丈{109.91,28.62}\n湖南-泸溪{110.73,28.29}\n湖南-凤凰{109.43,27.92}\n湖南-花垣{109.46,28.59}\n湖南-保靖{109.64,28.7}\n湖南-龙山{109.42,29.64}\n湖南-常德{111.69,29.05}\n湖南-临澧{111.64,29.44}\n湖南-澧县{111.75,29.65}\n湖南-安乡{112.16,29.41}\n湖南-津市{111.87,29.64}\n湖南-汉寿{111.97,28.9}\n湖南-桃源{111.47,28.9}\n湖南-慈利{111.09,29.41}\n湖南-石门{111.35,29.59}\n湖南-益阳{112.33,28.6}\n湖南-南县{112.39,29.37}\n湖南-沅江{112.36,28.83}\n湖南-宁乡{112.55,28.27}\n湖南-安化{111.2,28.38}\n湖南-桃江{112.11,28.51}\n甘肃-兰州{103.73,36.03}\n甘肃-永登{103.25,36.73}\n甘肃-榆中{104.09,35.87}\n甘肃-永昌{101.94,38.23}\n甘肃-皋兰{103.97,36.32}\n甘肃-定西{104.57,35.57}\n甘肃-会宁{105.08,35.72}\n甘肃-陇西{104.61,34.98}\n甘肃-临洮{103.88,35.39}\n甘肃-靖远{104.71,36.54}\n甘肃-通渭{105.27,35.24}\n甘肃-渭源{104.19,35.17}\n甘肃-平凉{106.68,35.51}\n甘肃-灵台{107.61,35.1}\n甘肃-华亭{106.65,35.21}\n甘肃-静宁{105.73,35.51}\n甘肃-泾川{107.38,35.31}\n甘肃-崇信{107.05,35.27}\n甘肃-庄浪{106.06,35.2}\n甘肃-庆阳{107.88,36.03}\n甘肃-华池{108,36.44}\n甘肃-庄宁{108.43,35.5}\n甘肃-镇源{107.22,35.7}\n甘肃-环县{107.33,36.57}\n甘肃-合水{108.02,35.81}\n甘肃-宁县{107.94,35.17}\n甘肃-天水{105.69,34.6}\n甘肃-徽县{106.11,33.78}\n甘肃-礼县{105.15,34.22}\n甘肃-武山{104.88,34.69}\n甘肃-秦安{105.69,34.89}\n甘肃-清水{106.12,34.73}\n甘肃-两当{106.28,33.9}\n甘肃-西和{105.28,34.02}\n甘肃-甘谷{105.35,34.7}\n甘肃-漳县{104.48,34.87}\n甘肃-张家川{106.23,35}\n甘肃-武都{104.94,33.43}\n甘肃-宕昌{104.38,34.06}\n甘肃-康县{105.58,33.33}\n甘肃-成县{105.7,33.75}\n甘肃-文县{104.7,32.95}\n甘肃-临潭{103.35,34.69}\n甘肃-舟曲{104.38,33.81}\n甘肃-玛曲{102.04,33.97}\n甘肃-下河{102.46,35.21}\n甘肃-卓尼{103.54,34.61}\n甘肃-迭部{103.23,34.08}\n甘肃-碌曲{102.5,34.6}\n甘肃-临夏{103.22,35.62}\n甘肃-永靖{103.34,35.97}\n甘肃-和政{103.31,35.43}\n甘肃-康乐{103.68,35.39}\n甘肃-广河{103.54,35.46}\n甘肃-东乡{103.39,35.68}\n甘肃-岷县{104.04,34.41}\n甘肃-积石山{102.85,35.74}\n甘肃-武威{102.61,37.94}\n甘肃-民勤{103.08,38.62}\n甘肃-古浪{102.86,37.43}\n甘肃-景泰{104.05,37.14}\n甘肃-天祝{102.84,37.24}\n甘肃-张掖{100.46,38.93}\n甘肃-民乐{100.85,38.43}\n甘肃-临泽{100.17,39.14}\n甘肃-山丹{101.19,38.79}\n甘肃-高台{99.84,39.14}\n甘肃-肃南{99.57,38.86}\n甘肃-玉门{97.58,39.81}\n甘肃-酒泉{98.5,39.71}\n甘肃-敦煌{94.71,40.13}\n甘肃-金塔{98.92,39.97}\n甘肃-安西{95.77,40.51}\n甘肃-阿克塞{94.25,38.46}\n甘肃-肃北{94.89,39.49}\n福建-福州{119.3,26.08}\n福建-闽侯{119.14,26.16}\n福建-厦门{118.1,24.46}\n福建-同安{118.15,24.74}\n福建-南平{118.16,26.65}\n福建-南平{118.16,26.65}\n福建-建瓯{118.32,27.05}\n福建-浦城{118.55,27.92}\n福建-邵武{117.48,27.34}\n福建-顺昌{117.8,26.8}\n福建-崇安{118.02,27.76}\n福建-光泽{117.34,27.54}\n福建-松溪{118.77,27.53}\n福建-政和{118.85,27.38}\n福建-宁德{119.52,26.65}\n福建-福安{119.65,27.09}\n福建-连江{119.53,26.2}\n福建-福鼎{120.2,27.34}\n福建-霞浦{120,26.89}\n福建-吉田{118.74,26.59}\n福建-罗源{119.55,26.49}\n福建-寿宁{119.5,27.47}\n福建-周宁{119.36,27.12}\n福建-屏南{118.98,26.92}\n福建-柘荣{119.89,27.25}\n福建-莆田{119,25.44}\n福建-仙游{118.7,25.37}\n福建-福清{119.39,25.73}\n福建-长乐{119.52,25.96}\n福建-永泰{118.95,25.88}\n福建-平潭{119.78,25.51}\n福建-闽清{118.86,26.21}\n福建-泉州{118.58,24.93}\n福建-晋江{118.57,24.82}\n福建-南安{118.39,24.96}\n福建-惠安{118.78,25.04}\n福建-安溪{118.18,25.07}\n福建-永春{118.3,25.34}\n福建-德化{118.24,25.5}\n福建-金门{118.34,24.43}\n福建-漳州{117.35,24.52}\n福建-龙海{117.79,24.44}\n福建-漳浦{117.61,24.12}\n福建-诏安{117.16,23.73}\n福建-平和{117.3,24.38}\n福建-云霄{117.34,23.99}\n福建-南靖{117.35,24.51}\n福建-长泰{117.75,24.62}\n福建-东山{117.4,23.72}\n福建-华安{117.53,25}\n福建-龙岩{117.01,25.12}\n福建-上杭{116.41,25.43}\n福建-永定{116.81,24.76}\n福建-长汀{116.37,25.85}\n福建-武平{116.1,25.11}\n福建-连城{116.75,25.72}\n福建-漳平{117.4,25.3}\n福建-三明{117.61,26.23}\n福建-龙溪{118.17,26.18}\n福建-宁化{116.64,26.26}\n福建-大田{117.83,25.69}\n福建-永安{117.37,25.97}\n福建-沙县{117.77,26.41}\n福建-将乐{117.45,26.73}\n福建-清流{116.81,26.12}\n福建-建宁{116.82,26.85}\n福建-泰宁{117.15,26.92}\n福建-明溪{117.18,26.36}\n西藏自治区-拉萨{91.11,29.97}\n西藏自治区-林周{91.24,30.2}\n西藏自治区-当雄{91.05,30.51}\n西藏自治区-墨竹工卡{91.77,29.77}\n西藏自治区-尼木{90.14,29.44}\n西藏自治区-米林{94.13,29.18}\n西藏自治区-墨脱{95.26,29.22}\n西藏自治区-达孜{91.39,29.63}\n西藏自治区-曲水{90.7,29.39}\n西藏自治区-堆龙德庆{90.96,29.67}\n西藏自治区-林芝{94.25,29.59}\n西藏自治区-工布江达{93.25,29.92}\n西藏自治区-那曲{92.1,31.47}\n西藏自治区-巴青{94.1,31.96}\n西藏自治区-比如{93.68,31.53}\n西藏自治区-班戈{90.05,31.35}\n西藏自治区-嘉黎{93.46,30.63}\n西藏自治区-聂荣{92.3,31.08}\n西藏自治区-索县{93.71,31.92}\n西藏自治区-安多{91.68,32.29}\n西藏自治区-申扎{88.7,30.94}\n西藏自治区-吕都{97.14,31.18}\n西藏自治区-贡觉{98.29,30.86}\n西藏自治区-左贡{97.9,29.68}\n西藏自治区-察隅{97.49,28.62}\n西藏自治区-洛隆{95.76,30.81}\n西藏自治区-丁青{95.63,31.42}\n西藏自治区-波密{95.75,29.92}\n西藏自治区-江达{89.19,31.53}\n西藏自治区-察雅{97.56,30.69}\n西藏自治区-芒康{98.68,29.64}\n西藏自治区-八宿{96.95,30.04}\n西藏自治区-边坝{94.69,30.94}\n西藏自治区-类乌齐{96.57,31.2}\n西藏自治区-乃东{91.76,29.18}\n西藏自治区-加查{92.6,29.09}\n西藏自治区-曲松{92.11,29.08}\n西藏自治区-错那{91.91,27.98}\n西藏自治区-穷结{91.65,29.04}\n西藏自治区-贡嘎{90.96,29.25}\n西藏自治区-浪卡子{90.33,29.96}\n西藏自治区-桑日{92,29.26}\n西藏自治区-朗县{93.11,29.06}\n西藏自治区-隆子{92.42,28.46}\n西藏自治区-措美{91.4,28.49}\n西藏自治区-洛扎{90.83,28.42}\n西藏自治区-扎囊{91.26,29.22}\n西藏自治区-日喀则{88.82,29.28}\n西藏自治区-定结{87.77,28.38}\n西藏自治区-拉孜{87.62,29.1}\n西藏自治区-聂拉木{85.94,28.19}\n西藏自治区-谢通门{88.25,29.43}\n西藏自治区-仲巴{84.15,29.66}\n西藏自治区-康马{89.67,28.57}\n西藏自治区-亚东{88.93,27.55}\n西藏自治区-岗巴{88.5,28.29}\n西藏自治区-南木林{89.02,29.71}\n西藏自治区-萨迦{88,28.87}\n西藏自治区-定日{87.11,28.57}\n西藏自治区-吉隆{85.29,28.94}\n西藏自治区-昂仁{87.22,29.3}\n西藏自治区-江孜{89.63,28.94}\n西藏自治区-仁布{89.77,29.21}\n西藏自治区-白朗{89.16,29.11}\n西藏自治区-萨嘎{85.3,29.38}\n西藏自治区-噶尔{80,32.08}\n西藏自治区-革吉{81.13,32.45}\n西藏自治区-扎达{79.76,31.47}\n西藏自治区-措勤{85.16,31.06}\n西藏自治区-日上{79.61,33.44}\n西藏自治区-改则{84.1,32.33}\n西藏自治区-普兰{81.18,30.37}\n贵州-贵阳{106.71,26.57}\n贵州-六盘水{104.82,26.58}\n贵州-水城{104.82,26.58}\n贵州-盘县{104.64,25.81}\n贵州-六枝{105.47,26.21}\n贵州-遵义{106.9,27.7}\n贵州-绥阳{107.19,27.95}\n贵州-道真{107.6,28.89}\n贵州-凤冈{107.72,27.97}\n贵州-余庆{107.88,27.22}\n贵州-赤水{105.69,28.57}\n贵州-桐梓{106.8,28.16}\n贵州-正安{107.43,28.56}\n贵州-务川{107.87,28.54}\n贵州-湄潭{107.5,27.76}\n贵州-仁怀{106.41,27.81}\n贵州-习水{106.2,28.33}\n贵州-铜仁{109.21,27.73}\n贵州-玉屏{108.91,27.24}\n贵州-思南{108.23,27.94}\n贵州-德江{108.13,28.27}\n贵州-万山{109.2,27.52}\n贵州-江口{108.82,27.68}\n贵州-师阡{108.24,27.52}\n贵州-印江{108.41,28.02}\n贵州-沿河{108.48,28.57}\n贵州-松桃{109.18,28.17}\n贵州-毕节{105.29,27.32}\n贵州-黔西{106.04,27.03}\n贵州-织金{105.76,26.66}\n贵州-赫章{104.71,27.13}\n贵州-大方{105.61,27.16}\n贵州-金沙{106.22,27.46}\n贵州-钠雍{105.38,26.77}\n贵州-威宁{104.28,26.87}\n贵州-安顺{105.92,26.25}\n贵州-息烽{106.73,27.1}\n贵州-清镇{106.46,26.56}\n贵州-普定{105.75,26.32}\n贵州-开阳{106.95,27.06}\n贵州-修文{106.59,26.84}\n贵州-平坝{106.26,26.42}\n贵州-镇宁{105.75,26.08}\n贵州-紫云{106.06,25.75}\n贵州-关岭{105.62,25.94}\n贵州-兴义{104.91,25.1}\n贵州-普安{104.96,25.79}\n贵州-贞丰{105.63,25.39}\n贵州-望谟{106.09,25.17}\n贵州-册亭{105.79,25}\n贵州-安龙{105.49,25.11}\n贵州-兴仁{105.18,25.44}\n贵州-晴龙{105.21,25.83}\n贵州-凯里{107.97,26.59}\n贵州-施秉{108.11,27.03}\n贵州-镇远{108.41,27.06}\n贵州-天柱{109.2,26.89}\n贵州-剑河{108.58,26.64}\n贵州-黎平{109.14,26.24}\n贵州-从江{108.9,25.76}\n贵州-麻江{107.58,26.49}\n贵州-黄平{107.89,26.89}\n贵州-三穗{108.68,26.98}\n贵州-岑巩{108.72,27.21}\n贵州-锦屏{109.18,26.7}\n贵州-台江{108.32,26.68}\n贵州-榕江{108.5,25.94}\n贵州-雷山{108.07,26.38}\n贵州-丹寨{107.79,26.21}\n贵州-都匀{107.53,26.72}\n贵州-贵定{107.22,26.58}\n贵州-瓮安{107.48,27.08}\n贵州-平塘{107.55,25.83}\n贵州-长顺{106.45,26.03}\n贵州-惠水{106.66,26.14}\n贵州-荔波{107.88,25.42}\n贵州-福泉{107.51,26.7}\n贵州-独山{107.54,25.84}\n贵州-罗甸{106.74,25.43}\n贵州-龙里{106.98,26.46}\n贵州-三都{107.86,26}\n辽宁-沈阳{123.38,41.8}\n辽宁-新民{122.83,42}\n辽宁-辽中{122.7,41.52}\n辽宁-大连{121.62,38.92}\n辽宁-金县{121.7,39.13}\n辽宁-复县{121.97,39.63}\n辽宁-新金{121.95,39.55}\n辽宁-庄河{22.97,39.7}\n辽宁-长海{122.58,39.28}\n辽宁-鞍山{122.85,41.12}\n辽宁-海城{122.75,40.85}\n辽宁-台安{122.4,41.4}\n辽宁-抚顺{123.97,41.97}\n辽宁-新宾{125.02,41.72}\n辽宁-清原{124.9,42.13}\n辽宁-本溪{123.73,41.3}\n辽宁-垣仁{125.33,41.28}\n辽宁-锦州{121.15,41.13}\n辽宁-锦县{121.35,41.17}\n辽宁-义县{121.22,41.55}\n辽宁-黑山{122.12,41.7}\n辽宁-北镇{121.8,41.6}\n辽宁-锦西{120.83,40.77}\n辽宁-兴城{120.68,40.63}\n辽宁-绥中{120.32,40.35}\n辽宁-丹东{124.37,40.13}\n辽宁-东沟{124.13,39.97}\n辽宁-岫岩{123.25,40.3}\n辽宁-凤城{124.05,40.47}\n辽宁-宽甸{124.77,40.75}\n辽宁-阜新{121.65,42}\n辽宁-彰武{122.52,42.42}\n辽宁-营口{122.18,40.65}\n辽宁-盖县{122.37,40.42}\n辽宁-盘山{122.03,41.02}\n辽宁-大洼{122.06,41}\n辽宁-辽阳{123.17,41.28}\n辽宁-灯塔{123.34,41.43}\n辽宁-铁岭{123.85,42.32}\n辽宁-开原{124.03,42.53}\n辽宁-昌图{124.13,42.8}\n辽宁-铁法{123.5,42.48}\n辽宁-康平{123.33,42.75}\n辽宁-法库{123.37,42.52}\n辽宁-西丰{124.7,42.77}\n辽宁-朝阳{120.42,41.58}\n辽宁-建昌{119.78,40.82}\n辽宁-北票{120.75,41.82}\n辽宁-凌源{119.37,41.27}\n辽宁-建平{119.63,41.38}\n重庆-重庆{106.54,29.59}\n重庆-綦江{106.56,29.41}\n重庆-长寿{106.64,29.01}\n重庆-南桐{107.04,29.86}\n重庆-合川{106.28,29.26}\n重庆-潼南{106.22,30.03}\n重庆-铜梁{105.8,30.16}\n重庆-壁山{106.03,29.86}\n重庆-荣昌{106.21,29.62}\n重庆-大足{105.59,29.4}\n重庆-永川{105.71,29.75}\n重庆-万盛{105.91,29.38}\n陕西-西安{108.95,34.27}\n陕西-长安{108.97,34.18}\n陕西-铜川{109.11,35.09}\n陕西-耀县{108.98,34.91}\n陕西-宝鸡{107.15,34.38}\n陕西-凤翔{107.39,34.53}\n陕西-千阳{107.13,34.65}\n陕西-陇县{106.86,34.91}\n陕西-麟游{107.8,34.69}\n陕西-岐山{107.63,34.46}\n陕西-浮风{107.87,34.38}\n陕西-武功{108.22,34.28}\n陕西-眉县{107.76,34.29}\n陕西-太白{107.3,34.09}\n陕西-凤县{106.51,33.93}\n陕西-榆林{109.77,38.3}\n陕西-神木{110.51,38.83}\n陕西-府谷{111.07,39.05}\n陕西-佳县{110.48,38.04}\n陕西-米脂{110.23,37.78}\n陕西-吴堡{110.73,37.49}\n陕西-绥德{110.24,37.49}\n陕西-清涧{110.15,37.11}\n陕西-子洲{110.05,37.45}\n陕西-横山{109.32,37.97}\n陕西-靖边{108.79,37.61}\n陕西-定边{107.59,37.6}\n陕西-延安{109.47,36.6}\n陕西-安寨{109.34,36.88}\n陕西-子长{109.65,37.16}\n陕西-延川{110.18,36.87}\n陕西-延长{110.02,36.59}\n陕西-宜川{110.15,36.04}\n陕西-黄龙{109.86,35.6}\n陕西-洛川{109.42,35.76}\n陕西-宜君{109.11,35.43}\n陕西-黄陵{109.27,35.6}\n陕西-富县{109.37,36}\n陕西-甘泉{109.37,36.29}\n陕西-志丹{108.78,36.84}\n陕西-吴旗{108.22,36.93}\n陕西-咸阳{108.72,34.36}\n陕西-礼泉{108.43,34.5}\n陕西-永寿{108.14,34.71}\n陕西-彬县{108.09,35.04}\n陕西-长武{107.8,35.22}\n陕西-旬邑{108.33,35.13}\n陕西-淳化{108.57,34.81}\n陕西-泾阳{108.84,34.53}\n陕西-三原{108.94,34.62}\n陕西-高陵{109.1,34.55}\n陕西-户县{108.61,34.12}\n陕西-周至{108.22,34.18}\n陕西-兴平{108.49,34.32}\n陕西-乾县{108.25,34.54}\n陕西-渭南{109.5,34.52}\n陕西-蒲城{109.59,34.97}\n陕西-白水{109.6,35.18}\n陕西-成城{109.93,35.2}\n陕西-韩城{110.45,35.47}\n陕西-合阳{110.15,35.24}\n陕西-人荔{109.96,34.82}\n陕西-潼关{110.25,34.56}\n陕西-华阴{110.09,34.58}\n陕西-华县{109.77,34.53}\n陕西-蓝田{109.32,34.17}\n陕西-临潼{109.22,34.38}\n陕西-富平{109.17,34.76}\n陕西-商县{109.96,33.88}\n陕西-洛南{110.15,34.11}\n陕西-丹凤{110.35,33.71}\n陕西-商南{110.88,33.54}\n陕西-山阳{109.91,33.55}\n陕西-镇安{109.16,33.45}\n陕西-柞水{109.14,33.69}\n陕西-安康{109.02,32.7}\n陕西-旬阳{109.35,32.83}\n陕西-白河{110.06,32.83}\n陕西-平利{109.37,32.41}\n陕西-镇坪{109.51,31.91}\n陕西-岚皋{108.89,32.3}\n陕西-紫阳{108.55,32.56}\n陕西-汉阴{108.53,32.9}\n陕西-石泉{108.26,33.05}\n陕西-宁陕{108.33,33.34}\n陕西-汉中{108.04,33.07}\n陕西-留坝{106.95,33.65}\n陕西-城固{107.32,33.16}\n陕西-洋县{107.56,33.23}\n陕西-佛坪{108,33.55}\n陕西-西乡{107.77,33}\n陕西-镇巴{107.91,32.56}\n陕西-南郑{106.93,33}\n陕西-宁强{106.25,32.82}\n陕西-勉县{106.68,33.16}\n陕西-略阳{106.16,33.34}\n青海-西宁{101.74,36.56}\n青海-大通{101.67,36.92}\n青海-平安{102.09,36.47}\n青海-湟中{101.57,36.49}\n青海-乐都{102.38,36.49}\n青海-民和{102.8,36.3}\n青海-湟源{101.28,36.72}\n青海-互助{101.95,36.84}\n青海-化隆{102.3,36.11}\n青海-循化{102.46,35.84}\n青海-门源{101.62,37.37}\n青海-海晏{100.99,36.89}\n青海-刚察{100.17,37.32}\n青海-祁连{100.22,38.2}\n青海-同仁{102,35.54}\n青海-尖扎{102,35.92}\n青海-泽库{101.5,35.03}\n青海-河南{101.62,34.75}\n青海-共和{100.61,36.27}\n青海-贵德{101.47,36.02}\n青海-贵南{100.75,35.57}\n青海-同德{100.63,35.24}\n青海-兴海{99.99,35.6}\n青海-玛沁{100.26,34.49}\n青海-甘德{99.89,33.95}\n青海-久治{101.47,33.46}\n青海-班玛{100.73,32.92}\n青海-达日{99.68,33.74}\n青海-玛多{98.26,34.92}\n青海-玉树{96.97,33.03}\n青海-称多{97.12,33.35}\n青海-囊谦{96.47,32.23}\n青海-杂多{95.3,32.92}\n青海-治多{95.6,33.86}\n青海-曲麻菜{95.5,34.52}\n青海-格尔木{94.9,36.41}\n青海-乌兰{98.46,36.9}\n青海-都兰{98.13,36.3}\n青海-天峻{99.03,37.28}\n黑龙江-哈尔滨{126.63,45.75}\n黑龙江-齐齐哈尔{123.97,47.33}\n黑龙江-鹤岗{130.3,47.33}\n黑龙江-双鸭山{131.17,46.65}\n黑龙江-鸡四{130.97,45.3}\n黑龙江-大庆{125.03,46.58}\n黑龙江-伊春{128.92,47.73}\n黑龙江-嘉荫{130,48.93}\n黑龙江-铁力{128.08,47.98}\n黑龙江-绥化{127,46.63}\n黑龙江-绥棱{127.12,47.22}\n黑龙江-海伦{126.97,47.47}\n黑龙江-庆安{127.5,46.87}\n黑龙江-兰西{126.3,46.28}\n黑龙江-肇东{125.98,46.07}\n黑龙江-肇州{125.25,45.72}\n黑龙江-肇源{125.07,45.53}\n黑龙江-安达{125.33,46.42}\n黑龙江-明水{125.88,47.18}\n黑龙江-青岗{126.13,46.68}\n黑龙江-望奎{126.5,46.83}\n黑龙江-黑河{127.53,50.22}\n黑龙江-爱辉{127.53,50.22}\n黑龙江-德都{126.17,48.5}\n黑龙江-通北{126.8,49.76}\n黑龙江-北安{126.5,48.22}\n黑龙江-孙吴{127.5,49.22}\n黑龙江-逊克{128.42,49.57}\n黑龙江-嫩江{125.2,49.17}\n黑龙江-佳木斯{130.35,46.83}\n黑龙江-桦川{130.68,47.02}\n黑龙江-萝北{130.83,47.58}\n黑龙江-绥滨{131.83,47.3}\n黑龙江-富锦{132.02,47.23}\n黑龙江-同江{132.5,47.67}\n黑龙江-抚远{134.15,48.33}\n黑龙江-饶河{134,46.78}\n黑龙江-七台河{130.83,45.82}\n黑龙江-宝清{132.17,46.33}\n黑龙江-集贤{131.13,46.7}\n黑龙江-勃利{130.53,45.75}\n黑龙江-桦南{130.53,46.25}\n黑龙江-依兰{129.55,46.33}\n黑龙江-汤源{129.92,46.73}\n黑龙江-牡丹江{129.58,44.6}\n黑龙江-林口{130.23,45.3}\n黑龙江-鸡东{131.04,45.27}\n黑龙江-密山{131.85,45.53}\n黑龙江-虎林{133.97,45.75}\n黑龙江-绥芬河{131.17,44.38}\n黑龙江-东宁{131.12,44.07}\n黑龙江-穆棱{130.5,44.9}\n黑龙江-宁安{129.47,44.35}\n黑龙江-海林{129.35,44.57}\n黑龙江-阿城{126.95,45.52}\n黑龙江-呼兰{126.58,46}\n黑龙江-巴彦{127.38,46.08}\n黑龙江-宾县{127.48,45.75}\n黑龙江-木兰{128.03,45.95}\n黑龙江-通河{128.7,45.98}\n黑龙江-方正{128.8,45.83}\n黑龙江-延寿{128.35,45.47}\n黑龙江-尚志{127.95,45.22}\n黑龙江-五常{127.17,44.93}\n黑龙江-双城{126.32,45.53}\n黑龙江-富裕{124.4,47.8}\n黑龙江-讷河{124.85,48.48}\n黑龙江-克山{125.87,48.03}\n黑龙江-克东{126.22,48.03}\n黑龙江-拜泉{126.07,47.62}\n黑龙江-依安{125.3,47.92}\n黑龙江-林甸{124.87,47.18}\n黑龙江-泰来{123.45,46.4}\n黑龙江-龙江{123.18,47.35}\n黑龙江-甘南{123.48,47.9}\n黑龙江-杜尔伯特{124.44,46.86}\n黑龙江-加格达奇{124.07,50.42}\n黑龙江-呼玛{126.6,51.72}\n黑龙江-塔河{124.7,52.32}\n黑龙江-漠河{122.37,53.48}\n```","source":"_posts/35.md","raw":"title: 全国各县市的经纬度\ndate: 2015-11-06 14:36:06\ncategories: [点点滴滴]\ntags: [经纬度]\n---\n这一周实习做的是百度地图，所以要用到各个城市的经纬度来进行查询。百度了许久后找到一份几年前的记录。那时晋州还叫晋县，武穴还叫广济。现在先记录下来。\n\n<!--more-->\n\n因为为了导入方便，所以去除了省份。现在发上来肯定要加上省份啊，所以重新自己做一个格式吧。\n\n转载，还是注明出处吧。学生党改了好久格式呢。\n\n格式为:`省份-城市{经度,纬度}`\n\n```\n上海-上海{121.48,31.22}\n上海-嘉定{121.24,31.4}\n上海-宝山{121.48,31.41}\n上海-川沙{121.7,31.19}\n上海-南汇{121.76,31.05}\n上海-奉贤{121.46,30.92}\n上海-松江{121.24,31}\n上海-金山{121.16,30.89}\n上海-青浦{121.1,31.15}\n上海-崇明{121.4,31.73}\n云南-昆明{102.73,25.04}\n云南-富民{102.48,25.21}\n云南-晋宁{102.58,24.68}\n云南-呈贡{102.79,24.9}\n云南-安宁{102.44,24.95}\n云南-昭通{103.7,29.32}\n云南-永善{103.63,28.22}\n云南-大关{103.91,27.74}\n云南-彝良{104.06,27.61}\n云南-鲁甸{103.54,27.21}\n云南-绥江{103.97,28.58}\n云南-盐津{104.28,28.08}\n云南-威信{105.05,27.85}\n云南-镇雄{104.86,27.42}\n云南-巧家{102.92,26.9}\n云南-永富{104.38,28.62}\n云南-曲靖{103.79,25.51}\n云南-宣威{104.09,26.24}\n云南-富源{104.24,25.67}\n云南-师宗{103.97,24.85}\n云南-嵩明{103.03,25.35}\n云南-会泽{103.27,26.41}\n云南-沽益{103.82,25.62}\n云南-罗平{104.3,24.88}\n云南-陆良{104.64,25.04}\n云南-宜良{103.12,24.9}\n云南-马龙{103.61,25.41}\n云南-路南{103.24,24.77}\n云南-寻甸{103.25,25.56}\n云南-玉溪{102.52,24.35}\n云南-华宁{102.93,24.26}\n云南-通海{102.75,24.09}\n云南-澄江{102.91,24.68}\n云南-江川{102.73,24.27}\n云南-易门{102.15,24.67}\n云南-元江{102,23.59}\n云南-新平{101.98,24.06}\n云南-峨山{102.38,24.16}\n云南-思茅{101,22.79}\n云南-普洱{101.03,23.07}\n云南-镇沅{100.88,23.9}\n云南-景东{100.82,24.42}\n云南-景谷{100.71,23.5}\n云南-黑江{101.71,23.4}\n云南-澜沦{99.97,22.55}\n云南-西盟{99.47,22.73}\n云南-江城{101.88,22.58}\n云南-孟连{99.55,22.32}\n云南-临沦{100.09,23.88}\n云南-云县{100.12,24.44}\n云南-镇康{99.02,23.92}\n云南-永德{99.25,24.03}\n云南-凤庆{99.92,24.58}\n云南-双江{99.85,23.45}\n云南-沧源{99.24,23.15}\n云南-耿马{99.41,23.56}\n云南-保由{99.18,25.12}\n云南-施甸{99.15,24.69}\n云南-腾冲{98.51,25.01}\n云南-昌宁{99.61,24.82}\n云南-龙陵{98.7,24.58}\n云南-丽江{100.25,26.86}\n云南-华坪{101.24,26.63}\n云南-永胜{100.76,26.71}\n云南-宁蒗{100.82,27.29}\n云南-文山{104.24,23.37}\n云南-广南{105.09,24.05}\n云南-西畴{104.68,23.42}\n云南-麻栗坡{104.71,23.12}\n云南-马关{104.4,23.01}\n云南-丘北{104.19,24.03}\n云南-砚山{104.35,23.62}\n云南-富宁{105.6,23.62}\n云南-个旧{102.43,23.35}\n云南-弥勒{103.43,24.41}\n云南-蒙自{103.41,23.36}\n云南-元阳{102.81,23.17}\n云南-红河{102.42,23.35}\n云南-石屏{102.48,23.73}\n云南-泸西{103.76,24.52}\n云南-金平{103.24,22.77}\n云南-开远{103.23,23.7}\n云南-绿春{102.42,23.01}\n云南-建水{102.79,23.64}\n云南-河口{103.98,22.52}\n云南-屏边{103.67,22.68}\n云南-景淇{100.79,22}\n云南-勐海{100.5,21.95}\n云南-勐腊{101.56,21.48}\n云南-楚雄{101.54,25.01}\n云南-元谋{101.85,25.7}\n云南-武定{102.36,25.55}\n云南-禄丰{102.08,25.15}\n云南-南华{101.26,25.21}\n云南-大姚{101.34,25.73}\n云南-永仁{101.7,26.07}\n云南-禄劝{102.45,25.58}\n云南-牟定{101.58,25.32}\n云南-双柏{101.67,24.68}\n云南-姚安{101.24,25.4}\n云南-下关{100.24,25.45}\n云南-剑川{99.88,26.53}\n云南-洱源{99.94,26.1}\n云南-宾川{100.55,25.82}\n云南-弥渡{100.52,25.34}\n云南-永平{99.52,25.45}\n云南-鹤庆{100.18,26.55}\n云南-大理{100.19,25.69}\n云南-漾濞{99.98,25.68}\n云南-云龙{99.39,25.9}\n云南-祥云{100.56,25.48}\n云南-巍山{100.33,25.23}\n云南-南涧{100.51,25.04}\n云南-潞西{98.6,24.41}\n云南-陇川{97.96,24.33}\n云南-盈江{97.93,24.69}\n云南-畹町{98.08,24.08}\n云南-瑞丽{97.83,24}\n云南-梁河{98.3,24.78}\n云南-泸水{98.82,25.97}\n云南-碧江{98.95,26.55}\n云南-福贡{98.92,26.89}\n云南-兰坪{99.29,26.49}\n云南-贡山{98.65,27.73}\n云南-中甸{99.72,27.78}\n云南-德钦{98.93,28.49}\n云南-维西{99.27,27.15}\n其它岛屿-钓鱼岛{123.33,25}\n其它岛屿-黄岩岛{117.51,15.07}\n内蒙古-呼和浩特{111.65,40.82}\n内蒙古-上默特左旗{111.13,40.72}\n内蒙古-托克托{111.15,40.28}\n内蒙古-包头{110,40.58}\n内蒙古-上默特右旗{110.52,40.55}\n内蒙古-固阳{110.03,41.03}\n内蒙古-乌海{106.82,39.67}\n内蒙古-集宁{113.08,41.03}\n内蒙古-兴和{113.97,40.88}\n内蒙古-清水河{111.65,39.92}\n内蒙古-武川{111.42,41.12}\n内蒙古-卓资{112.52,40.93}\n内蒙古-商都{113.53,41.58}\n内蒙古-丰镇{113.15,40.45}\n内蒙古-凉城{112.48,40.52}\n内蒙古-和林格尔{111.8,40.4}\n内蒙古-化德{114,41.9}\n内蒙古-四子王旗{111.68,41.37}\n内蒙古-二连浩特{111.96,43.65}\n内蒙古-阿巴哈纳尔旗{116.08,43.95}\n内蒙古-多伦{116.48,42.18}\n内蒙古-阿巴嘎旗{114.97,44.03}\n内蒙古-西乌珠穆沁旗{117.58,44.6}\n内蒙古-东乌珠穆沁旗{116.97,45.53}\n内蒙古-苏尼特左旗{113.7,43.85}\n内蒙古-苏尼特右旗{112.95,42.47}\n内蒙古-太仆寺旗{115.3,41.9}\n内蒙古-正镶白旗{115,42.32}\n内蒙古-正蓝旗{116.02,42.25}\n内蒙古-镶黄旗{113.83,42.25}\n内蒙古-海拉尔{119.73,29.22}\n内蒙古-满洲里{117.47,49.58}\n内蒙古-陈巴尔虎旗{119.45,49.33}\n内蒙古-额尔古纳右旗{120.08,50.45}\n内蒙古-额尔古纳左旗{121.52,50.8}\n内蒙古-喜桂图旗{120.73,49.3}\n内蒙古-阿荣旗{123.5,48.13}\n内蒙古-布特哈旗{122.78,47.98}\n内蒙古-新巴尔虎左旗{116.82,48.67}\n内蒙古-新巴尔虎右旗{118.23,48.22}\n内蒙古-鄂伦春自治旗{123.7,50.58}\n内蒙古-通辽{122.28,43.63}\n内蒙古-开鲁{121.32,43.62}\n内蒙古-库伦旗{121.75,42.72}\n内蒙古-奈曼旗{120.65,42.85}\n内蒙古-扎鲁特旗{120.87,44.55}\n内蒙古-赤峰{118.87,42.28}\n内蒙古-宁城{119.32,41.62}\n内蒙古-林西{118.02,43.62}\n内蒙古-喀喇沁旗{118.67,41.95}\n内蒙古-敖汉旗{119.87,42.3}\n内蒙古-翁牛特旗{119,42.97}\n内蒙古-巴林右旗{118.65,43.52}\n内蒙古-巴林左旗{119.35,43.98}\n内蒙古-阿鲁科尔沁旗{120.05,43.97}\n内蒙古-克什克腾旗{117.48,43.28}\n内蒙古-伊克昭盟{110,39.83}\n内蒙古-东胜县{110,39.83}\n内蒙古-准格尔旗{111.13,39.68}\n内蒙古-乌审旗{109.03,38.38}\n内蒙古-伊金霍洛旗{109.77,39.25}\n内蒙古-鄂托克旗{107.97,39.12}\n内蒙古-鄂托克前旗{107.43,38.18}\n内蒙古-杭锦旗{108.7,39.83}\n内蒙古-达拉特旗{110.02,40.42}\n内蒙古-临河{107.37,40.78}\n内蒙古-五原{108.28,41.12}\n内蒙古-磴口{106.98,40.33}\n内蒙古-杭锦后旗{107.12,40.88}\n内蒙古-乌拉特中旗{108.52,41.55}\n内蒙古-乌拉特前旗{108.65,40.75}\n内蒙古-乌拉特后旗{108.52,40.88}\n内蒙古-阿拉善左旗{105.68,38.85}\n内蒙古-阿拉善右旗{101.68,39.2}\n内蒙古-额济纳旗{100.88,41.9}\n内蒙古-乌兰浩特{122.08,46.07}\n内蒙古-突泉{121.5,45.4}\n北京-北京{116.46,39.92}\n北京-平谷{117.1,40.13}\n北京-密云{116.85,40.37}\n北京-顺义{116.65,40.13}\n北京-通县{116.67,39.92}\n北京-怀柔{116.62,40.32}\n北京-大兴{116.33,39.73}\n北京-房山{115.98,39.72}\n吉林-长春{125.35,43.88}\n吉林-吉林{126.57,43.87}\n吉林-农安{125.15,44.45}\n吉林-德惠{125.68,44.52}\n吉林-榆树{126.55,44.83}\n吉林-九台{126.83,44.15}\n吉林-双阳{125.68,43.53}\n吉林-永吉{126.57,43.87}\n吉林-舒兰{126.97,44.4}\n吉林-蛟河{127.33,43.75}\n吉林-桦甸{126.72,42.97}\n吉林-磐石{126.03,42.93}\n吉林-延吉{129.52,42.93}\n吉林-汪清{129.75,43.32}\n吉林-珲春{130.35,42.85}\n吉林-图们{129.83,42.98}\n吉林-和龙{129,42.52}\n吉林-安图{128.3,42.58}\n吉林-敦化{128.18,43.35}\n吉林-通化{125.92,41.49}\n吉林-柳河{125.7,40.88}\n吉林-海龙{125.65,42.53}\n吉林-辉南{126.03,42.68}\n吉林-靖宇{126.8,42.38}\n吉林-浑江{126.4,41.97}\n吉林-抚松{127.27,42.33}\n吉林-集安{126.17,41.15}\n吉林-长白{128.17,41.43}\n吉林-四平{124.37,43.17}\n吉林-梨树{124.33,43.32}\n吉林-怀德{124.82,43.5}\n吉林-伊通{125.32,43.33}\n吉林-辽源{125.15,42.97}\n吉林-东丰{125.5,42.68}\n吉林-双辽{123.5,43.52}\n吉林-白城{122.82,45.63}\n吉林-大安{124.18,45.5}\n吉林-扶余{124.82,45.2}\n吉林-乾安{124.02,45}\n吉林-长岭{123.97,44.3}\n吉林-通榆{123.13,44.82}\n吉林-洮安{122.75,45.35}\n四川-成都{104.06,30.67}\n四川-金堂{104.32,30.88}\n四川-双流{104.94,30.57}\n四川-蒲江{103.29,30.2}\n四川-郫县{103.86,30.8}\n四川-新都{104.13,30.82}\n四川-来易{102.15,26.9}\n四川-盐边{101.56,26.9}\n四川-温江{103.81,30.97}\n四川-灌县{103.61,31.04}\n四川-彭县{103.94,30.99}\n四川-什邡{104.16,31.13}\n四川-广汉{104.25,30.99}\n四川-新津{103.78,30.42}\n四川-邛崃{103.47,30.42}\n四川-大邑{103.53,30.58}\n四川-崇庆{103.69,30.63}\n四川-绵阳{104.73,31.48}\n四川-江油{104.7,31.8}\n四川-青川{105.21,32.59}\n四川-平武{104.52,32.42}\n四川-光元{105.86,32.44}\n四川-旺苍{106.33,32.25}\n四川-剑阁{105.45,32.03}\n四川-梓潼{105.16,31.64}\n四川-三台{105.06,31.1}\n四川-盐亭{105.35,31.23}\n四川-射洪{105.31,30.9}\n四川-遂宁{105.58,30.52}\n四川-蓬溪{105.74,30.78}\n四川-中江{104.68,31.06}\n四川-德阳{104.37,31.13}\n四川-绵竹{104.19,31.32}\n四川-安县{104.41,31.64}\n四川-北川{104.44,31.89}\n四川-内江{105.04,29.59}\n四川-乐至{105.02,30.3}\n四川-安岳{105.3,30.12}\n四川-威远{104.7,29.57}\n四川-资中{104.85,29.81}\n四川-资阳{104.6,30.19}\n四川-简阳{104.53,30.38}\n四川-隆昌{105.25,29.64}\n四川-宜宾{104.56,29.77}\n四川-富顺{104.97,29.24}\n四川-南溪{104.96,28.87}\n四川-江安{105.06,28.71}\n四川-纳溪{105.38,28.77}\n四川-泸县{105.46,28.96}\n四川-合江{105.78,28.79}\n四川-泸州{105.39,28.91}\n四川-古蔺{105.79,28.03}\n四川-叙水{105.44,28.19}\n四川-长宁{104.91,28.6}\n四川-兴文{105.06,28.36}\n四川-琪县{104.81,28.38}\n四川-高县{104.52,28.4}\n四川-筠连{104.53,28.16}\n四川-屏由{104.15,28.68}\n四川-乐由{103.73,29.59}\n四川-夹江{103.59,29.75}\n四川-洪雅{103.38,29.95}\n四川-丹棱{103.53,30.04}\n四川-青神{103.81,29.86}\n四川-眉由{103.81,30.05}\n四川-彭由{103.83,30.22}\n四川-井研{104.06,29.67}\n四川-仁寿{104.09,30}\n四川-犍为{103.93,29.21}\n四川-沐川{103.98,28.96}\n四川-娥眉{103.5,29.62}\n四川-马边{103.53,28.87}\n四川-峨边{103.25,29.23}\n四川-金口{103.13,29.24}\n四川-涪陵{107.36,29.7}\n四川-垫江{107.34,30.36}\n四川-丰都{107.7,29.89}\n四川-石柱{108.13,29.98}\n四川-秀山{108.97,28.47}\n四川-西阳{108.75,28.85}\n四川-黔江{108.81,29.53}\n四川-彭水{108.19,29.29}\n四川-武隆{108.72,29.29}\n四川-南川{107.13,29.15}\n四川-万县{108.35,30.83}\n四川-开县{108.39,31.23}\n四川-城口{108.67,31.98}\n四川-巫溪{109.6,31.42}\n四川-巫山{109.86,31.1}\n四川-奉节{109.52,31.06}\n四川-云阳{108.89,30.99}\n四川-忠县{108.03,30.33}\n四川-梁平{107.78,30.66}\n四川-南允{106.06,30.8}\n四川-苍溪{105.96,31.75}\n四川-阆中{105.97,31.75}\n四川-仪陇{106.38,31.52}\n四川-南部{106.03,31.34}\n四川-西允{105.84,31.01}\n四川-营山{106.57,31.07}\n四川-蓬安{106.44,31.04}\n四川-广安{106.61,30.48}\n四川-岳池{106.43,30.55}\n四川-武胜{106.3,30.38}\n四川-华云{106.74,30.41}\n四川-达县{107.49,31.23}\n四川-万源{108.06,32.07}\n四川-宜汉{107.71,31.39}\n四川-开江{107.87,31.1}\n四川-邻水{106.91,30.36}\n四川-大竹{107.21,30.75}\n四川-渠县{106.94,30.85}\n四川-南江{106.83,32.36}\n四川-巴中{106.73,31.86}\n四川-平昌{107.11,31.59}\n四川-通江{108.24,31.95}\n四川-百沙{108.18,32}\n四川-雅安{102.97,29.97}\n四川-芦山{102.91,30.17}\n四川-名山{103.06,30.09}\n四川-荣经{102.81,29.79}\n四川-汉源{102.66,29.4}\n四川-石棉{102.38,29.21}\n四川-天全{102.78,30.09}\n四川-宝兴{102.84,30.36}\n四川-马尔康{102.22,31.92}\n四川-红原{102.55,31.79}\n四川-阿坝{101.72,31.93}\n四川-若尔盖{102.94,33.62}\n四川-黑水{102.95,32.06}\n四川-松潘{103.61,32.64}\n四川-南坪{104.19,33.23}\n四川-汶川{103.61,31.46}\n四川-理县{103.16,31.42}\n四川-小金{102.34,30.97}\n四川-金川{102.03,31.48}\n四川-壤塘{100.97,32.3}\n四川-茂汶{103.89,31.67}\n四川-康定{101.95,30.04}\n四川-炉霍{100.65,31.38}\n四川-甘孜{99.96,31.64}\n四川-新龙{100.28,30.96}\n四川-白玉{98.83,32.23}\n四川-德格{98.57,31.81}\n四川-石渠{98.06,33.01}\n四川-色达{100.35,32.3}\n四川-泸定{102.25,29.92}\n四川-丹巴{101.87,30.85}\n四川-九龙{101.53,29.01}\n四川-雅江{101,30.03}\n四川-道孚{101.14,30.99}\n四川-理塘{100.28,30.03}\n四川-乡城{99.78,28.93}\n四川-稻城{100.31,29.04}\n四川-巴塘{99,30}\n四川-得荣{99.25,28.71}\n四川-西昌{102.29,27.92}\n四川-昭觉{102.83,28.03}\n四川-甘洛{102.74,28.96}\n四川-雷波{103.62,28.21}\n四川-宁南{102.76,27.07}\n四川-会东{102.55,26.74}\n四川-会理{102.21,26.67}\n四川-德昌{102.15,27.4}\n四川-美姑{103.14,28.33}\n四川-金阳{103.22,27.73}\n四川-布拖{102.8,27.7}\n四川-普格{102.52,27.38}\n四川-喜德{102.42,28.33}\n四川-越西{102.49,28.66}\n四川-盐源{101.51,27.42}\n四川-冕宁{102.15,28.58}\n四川-木里{101.25,27.9}\n天津-天津{117.2,39.13}\n天津-宁河{117.83,39.33}\n天津-静海{116.92,38.93}\n天津-蓟县{117.4,40.05}\n天津-宝坻{117.3,39.75}\n天津-武清{117.05,39.4}\n宁夏回族自治区-银川{106.27,38.47}\n宁夏回族自治区-永宁{106.24,38.28}\n宁夏回族自治区-贺兰{106.35,38.55}\n宁夏回族自治区-石嘴山{106.39,39.04}\n宁夏回族自治区-平罗{106.54,38.91}\n宁夏回族自治区-陶乐{106.69,38.82}\n宁夏回族自治区-吴忠{106.21,37.99}\n宁夏回族自治区-同心{105.94,36.97}\n宁夏回族自治区-灵武{106.34,38.1}\n宁夏回族自治区-中宁{105.66,37.48}\n宁夏回族自治区-盐池{107.41,37.78}\n宁夏回族自治区-中卫{105.18,37.51}\n宁夏回族自治区-青铜峡{106.07,38.02}\n宁夏回族自治区-固原{106.28,36.01}\n宁夏回族自治区-西吉{105.7,35.97}\n宁夏回族自治区-泾源{106.33,35.5}\n宁夏回族自治区-海原{105.64,36.56}\n宁夏回族自治区-隆德{106.11,35.63}\n安徽-合肥{117.27,31.86}\n安徽-长丰{117.16,32.47}\n安徽-淮南{116.98,32.62}\n安徽-凤台{116.71,32.68}\n安徽-淮北{116.77,33.97}\n安徽-濉溪{116.76,33.92}\n安徽-芜湖{118.38,31.33}\n安徽-铜陵{117.82,30.93}\n安徽-蚌埠{117.34,32.93}\n安徽-马鞍山{118.48,31.56}\n安徽-安庆{117.03,30.52}\n安徽-宿州{116.97,33.63}\n安徽-宿县{116.97,33.63}\n安徽-砀山{116.34,34.42}\n安徽-萧县{116.93,34.19}\n安徽-吴壁{117.55,33.55}\n安徽-泗县{117.89,33.49}\n安徽-五河{117.87,33.14}\n安徽-固镇{117.32,33.33}\n安徽-怀远{117.19,32.95}\n安徽-滁州{118.31,32.33}\n安徽-嘉山{117.98,32.78}\n安徽-天长{119,32.68}\n安徽-来安{118.44,32.44}\n安徽-全椒{118.27,32.1}\n安徽-定远{117.68,32.52}\n安徽-凤阳{117.4,32.86}\n安徽-巢湖{117.87,31.62}\n安徽-巢县{117.87,31.62}\n安徽-肥东{117.47,31.89}\n安徽-含山{118.11,31.7}\n安徽-和县{118.37,31.7}\n安徽-无为{117.75,31.3}\n安徽-卢江{117.29,31.23}\n安徽-宣城{118.73,31.95}\n安徽-当涂{118.49,31.55}\n安徽-郎溪{119.17,31.14}\n安徽-广德{119.41,30.89}\n安徽-泾县{118.41,30.68}\n安徽-南陵{118.32,30.91}\n安徽-繁昌{118.21,31.07}\n安徽-宁国{118.95,30.62}\n安徽-青阳{117.84,30.64}\n安徽-屯溪{118.31,29.72}\n安徽-休宁{118.19,29.81}\n安徽-旌得{118.53,30.28}\n安徽-绩溪{118.57,30.07}\n安徽-歙县{118.44,29.88}\n安徽-祁门{117.7,29.86}\n安徽-黟县{117.92,29.93}\n安徽-太平{118.13,30.28}\n安徽-石台{117.48,30.19}\n安徽-桐城{116.94,31.04}\n安徽-纵阳{117.21,30.69}\n安徽-怀宁{116.63,30.41}\n安徽-望江{116.69,30.12}\n安徽-宿松{116.13,30.15}\n安徽-太湖{116.27,30.42}\n安徽-岳西{116.36,30.84}\n安徽-潜山{116.53,30.62}\n安徽-东至{116.99,30.08}\n安徽-贵池{117.48,30.66}\n安徽-六安{116.49,31.73}\n安徽-霍丘{116.27,32.32}\n安徽-寿县{116.78,32.57}\n安徽-肥西{117.15,31.7}\n安徽-舒城{116.94,31.45}\n安徽-霍山{116.32,31.38}\n安徽-金寨{115.87,31.67}\n安徽-阜阳{115.81,32.89}\n安徽-毫县{116.76,33.86}\n安徽-涡阳{116.21,33.49}\n安徽-蒙城{116.55,33.25}\n安徽-利辛{116.19,33.12}\n安徽-颖上{116.26,32.62}\n安徽-阜南{115.6,32.63}\n安徽-临泉{115.24,33.06}\n安徽-界首{115.34,33.24}\n安徽-太和{115.61,33.16}\n山东-济南{117,36.65}\n山东-历城{117.07,36.69}\n山东-长清{116.73,36.55}\n山东-章丘{117.53,36.72}\n山东-青岛{120.33,36.07}\n山东-崂山{120.42,36.15}\n山东-胶南{119.97,35.88}\n山东-即墨{120.45,36.38}\n山东-胶县{120,36.28}\n山东-淄博{118.05,36.78}\n山东-枣庄{117.57,34.86}\n山东-滕县{117.17,35.09}\n山东-东营{118.49,37.46}\n山东-垦利{118.54,37.59}\n山东-利津{118.25,37.49}\n山东-德州{116.29,37.45}\n山东-宁津{116.8,37.64}\n山东-乐陵{117.22,37.74}\n山东-商河{117.15,37.31}\n山东-济阳{117.2,36.97}\n山东-禹城{116.66,36.95}\n山东-夏津{116,36.95}\n山东-陵县{116.58,37.34}\n山东-庆云{117.37,37.37}\n山东-临邑{116.86,37.2}\n山东-齐河{116.76,36.79}\n山东-平原{116.44,37.16}\n山东-武城{116.08,37.2}\n山东-滨州{118.03,37.36}\n山东-滨县{117.97,37.47}\n山东-广饶{118.41,37.04}\n山东-桓台{118.12,36.95}\n山东-邹平{117.75,36.89}\n山东-阳信{117.58,37.65}\n山东-沾化{118.14,37.7}\n山东-博兴{118.12,37.12}\n山东-高青{117.66,37.18}\n山东-惠民{117.51,17.49}\n山东-无棣{117.58,37.73}\n山东-潍坊{119.1,36.62}\n山东-潍县{119.22,36.77}\n山东-平度{119.97,36.77}\n山东-诸城{119.42,35.99}\n山东-安丘{119.2,36.42}\n山东-临朐{118.53,36.5}\n山东-寿光{118.73,36.86}\n山东-昌邑{119.41,36.86}\n山东-高密{119.75,36.38}\n山东-五莲{119.2,35.74}\n山东-昌乐{118.83,36.69}\n山东-高都{118.47,36.69}\n山东-烟台{121.39,37.52}\n山东-牟平{121.59,37.38}\n山东-文登{122.05,37.2}\n山东-海阳{121.17,36.76}\n山东-莱阳{120.71,36.97}\n山东-栖霞{120.83,37.28}\n山东-掖县{119.93,37.18}\n山东-长岛{120.73,37.91}\n山东-威海{122.1,37.5}\n山东-福山{121.27,37.49}\n山东-荣成{122.41,37.16}\n山东-乳山{121.52,36.89}\n山东-莱西{120.53,36.86}\n山东-招远{120.38,37.35}\n山东-黄县{120.51,37.64}\n山东-蓬莱{120.75,37.8}\n山东-临沂{118.35,35.05}\n山东-沂水{118.64,35.78}\n山东-日照{119.46,35.42}\n山东-临沭{118.73,34.89}\n山东-仓山{118.03,34.84}\n山东-平邑{117.63,35.49}\n山东-沂源{118.17,36.18}\n山东-沂南{118.47,35.54}\n山东-营县{118.83,35.57}\n山东-莒南{118.83,35.17}\n山东-郯城{118.35,34.61}\n山东-费县{117.97,35.26}\n山东-蒙阴{117.95,35.7}\n山东-泰安{117.13,36.18}\n山东-莱芜{117.67,36.19}\n山东-肥城{116.76,36.24}\n山东-平阴{116.46,36.29}\n山东-新汶{117.67,35.86}\n山东-新泰{117.76,35.91}\n山东-宁阳{116.8,35.76}\n山东-东平{116.3,35.91}\n山东-济宁{116.59,35.38}\n山东-兖州{116.83,35.54}\n山东-泗水{117.27,35.65}\n山东-鱼台{116.65,35}\n山东-嘉祥{116.34,35.41}\n山东-汶上{116.49,35.71}\n山东-曲阜{116.98,35.59}\n山东-邹县{116.97,35.39}\n山东-微山{117.12,34.8}\n山东-金乡{116.32,35.07}\n山东-荷泽{115.43,35.24}\n山东-郓城{115.94,35.59}\n山东-巨野{116.08,35.38}\n山东-单县{116.07,34.82}\n山东-曹县{115.53,34.83}\n山东-鄄城{115.5,35.57}\n山东-梁山{116.1,35.8}\n山东-成武{115.88,34.97}\n山东-定陶{115.57,35.07}\n山东-东明{115.08,35.31}\n山东-聊城{115.97,36.45}\n山东-高唐{116.23,36.86}\n山东-东阿{116.23,36.32}\n山东-莘县{115.67,36.24}\n山东-临清{115.72,36.68}\n山东-茌平{116.27,36.58}\n山东-阳谷{115.78,36.11}\n山东-冠县{115.45,35.47}\n山西-太原{112.53,37.87}\n山西-阳曲{112.65,38.05}\n山西-娄烦{111.78,38.05}\n山西-清徐{112.33,37.62}\n山西-大同{113.3,40.12}\n山西-阳泉{113.57,37.85}\n山西-长治{113.08,36.18}\n山西-天镇{114.08,40.42}\n山西-灵丘{114.2,39.47}\n山西-怀仁{113.1,39.82}\n山西-山阴{112.82,39.52}\n山西-平鲁{112.12,39.53}\n山西-右玉{112.33,40.18}\n山西-阳高{113.72,40.38}\n山西-广灵{113.27,39.75}\n山西-浑源{113.68,39.7}\n山西-应县{113.18,39.58}\n山西-朔县{112.42,39.32}\n山西-左云{112.67,40.02}\n山西-忻县{112.7,38.38}\n山西-代县{112.97,39.07}\n山西-五台{113.32,38.72}\n山西-静乐{111.9,38.37}\n山西-保德{111.09,38.01}\n山西-河曲{111.17,39.38}\n山西-神池{112.17,39.1}\n山西-原平{112.7,38.73}\n山西-繁峙{113.28,39.2}\n山西-定襄{112.95,38.5}\n山西-岢岚{111.58,38.7}\n山西-五寨{111.82,38.93}\n山西-偏关{111.47,39.45}\n山西-宁武{112.28,39}\n山西-榆次{112.72,37.68}\n山西-孟县{113.37,38.01}\n山西-昔阳{113.68,37.62}\n山西-左权{113.35,37.07}\n山西-太谷{112.53,37.42}\n山西-平遥{112.18,37.2}\n山西-灵石{111.77,36.83}\n山西-寿阳{113.17,37.88}\n山西-平定{113.62,37.79}\n山西-和顺{113.55,37.33}\n山西-榆社{112.97,37.08}\n山西-祁县{112.33,37.36}\n山西-介休{111.88,37.03}\n山西-离石{111.13,37.53}\n山西-兴县{111.22,38.47}\n山西-方由{111.24,37.86}\n山西-岚县{111.62,38.28}\n山西-交城{112.14,37.55}\n山西-文水{112.02,37.42}\n山西-汾阳{111.75,37.27}\n山西-孝义{111.8,37.12}\n山西-交口{111.2,36.97}\n山西-石楼{110.83,37}\n山西-中阳{111.17,37.37}\n山西-临县{110.95,37.95}\n山西-柳林{110.85,37.45}\n山西-襄垣{113.02,36.55}\n山西-黎城{113.4,36.56}\n山西-壶关{113.23,35.11}\n山西-高平{112.88,35.48}\n山西-阳城{112.38,35.84}\n山西-长子{112.87,36.13}\n山西-沁源{112.32,36.5}\n山西-潞城{113.22,36.33}\n山西-武乡{112.83,36.83}\n山西-平顺{113.43,36.19}\n山西-陵川{113.27,35.78}\n山西-晋城{112.83,35.52}\n山西-沁水{112.15,35.67}\n山西-屯留{112.87,36.32}\n山西-沁县{112.68,36.75}\n山西-临汾{111.5,36.08}\n山西-汾西{111.53,36.63}\n山西-安泽{112.2,36.15}\n山西-古县{111.9,36.29}\n山西-翼城{111.68,35.73}\n山西-曲沃{111.33,35.63}\n山西-吉县{110.65,36.12}\n山西-大宁{110.72,36.47}\n山西-侯马{111.45,35.03}\n山西-永和{110.64,36.62}\n山西-洪洞{111.68,36.25}\n山西-霍县{111.72,36.57}\n山西-浮山{111.83,35.97}\n山西-襄汾{111.43,35.86}\n山西-乡宁{110.8,35.97}\n山西-蒲县{111.07,36.42}\n山西-运城{110.97,35.03}\n山西-闻喜{111.2,35.37}\n山西-垣曲{111.63,35.3}\n山西-芮城{110.68,34.71}\n山西-临猗{110.78,35.15}\n山西-新绛{111.22,35.62}\n山西-河津{110.7,35.58}\n山西-夏县{111.22,35.12}\n山西-绛县{111.58,35.48}\n山西-平陆{111.2,34.12}\n山西-永济{110.42,34.88}\n山西-万荣{110.83,35.42}\n山西-稷山{110.97,35.6}\n广东-广州{113.23,23.16}\n广东-花县{113.19,23.4}\n广东-新十{114.2,24.09}\n广东-增城{113.81,23.13}\n广东-从化{113.55,23.57}\n广东-龙门{114.25,23.75}\n广东-番禺{113.36,22.95}\n广东-海口{110.35,20.02}\n广东-汕头{116.69,23.39}\n广东-洪江{110.38,21.2}\n广东-茂名{110.88,21.68}\n广东-佛山{113.11,23.05}\n广东-江门{113.06,22.61}\n广东-深圳{114.07,22.62}\n广东-宝安{113.85,22.58}\n广东-珠海{113.52,22.3}\n广东-韶关{113.62,24.84}\n广东-曲江{113.58,24.68}\n广东-乐昌{113.35,25.14}\n广东-仁化{113.73,25.11}\n广东-南雄{114.33,25.14}\n广东-始兴{114.08,24.78}\n广东-翁源{114.13,24.36}\n广东-佛岗{113.52,23.86}\n广东-英德{113.38,24.17}\n广东-清远{113.01,23.7}\n广东-阳山{112.65,24.48}\n广东-连县{112.4,24.77}\n广东-连山{112.07,24.59}\n广东-连南{112.28,24.77}\n广东-惠州{114.4,23.09}\n广东-惠阳{114.4,23.09}\n广东-博罗{114.28,23.18}\n广东-河源{114.68,23.73}\n广东-连平{114.48,24.39}\n广东-和平{114.89,24.45}\n广东-龙川{115.25,24.09}\n广东-紫金{115.18,23.64}\n广东-惠东{114.7,22.97}\n广东-东莞{113.75,23.04}\n广东-梅州{116.1,24.55}\n广东-梅县{116.1,24.55}\n广东-平远{117.9,24.59}\n广东-蕉岭{116.18,24.66}\n广东-大埔{116.7,24.34}\n广东-丰顺{116.18,23.78}\n广东-五华{115.75,23.93}\n广东-兴宁{115.75,24.15}\n广东-潮州{116.63,23.68}\n广东-澄海{116.8,23.48}\n广东-潮安{116.63,23.68}\n广东-饶平{117.01,23.7}\n广东-南澳{117.03,23.44}\n广东-潮阳{116.61,23.27}\n广东-惠来{116.29,23.07}\n广东-陆丰{117.64,22.95}\n广东-海丰{117.33,22.98}\n广东-普宁{116.17,23.29}\n广东-揭西{115.82,23.45}\n广东-揭阳{116.35,23.55}\n广东-南海{113.11,23.05}\n广东-三水{112.89,23.18}\n广东-顺德{113.24,22.84}\n广东-中山{113.38,22.52}\n广东-斗门{113.25,22.2}\n广东-新会{113.02,22.52}\n广东-鹤山{112.94,22.76}\n广东-开平{112.68,22.36}\n广东-台山{112.78,22.27}\n广东-恩平{112.29,22.21}\n广东-高明{112.76,21.71}\n广东-廉江{110.27,21.63}\n广东-化州{110.59,21.64}\n广东-高州{110.83,21.95}\n广东-信宜{110.9,22.36}\n广东-阳春{111.78,22.16}\n广东-阳江{111.95,21.85}\n广东-电白{110.99,21.52}\n广东-吴川{110.78,21.43}\n广东-徐闻{110.17,20.34}\n广东-海康{110.07,20.91}\n广东-遂溪{110.24,21.39}\n广东-肇庆{112.44,23.05}\n广东-高要{112.44,23.05}\n广东-怀集{112.18,23.93}\n广东-广宁{112.43,23.14}\n广东-四会{112.68,23.36}\n广东-新兴{112.2,22.68}\n广东-云浮{112.02,22.93}\n广东-罗定{111.56,22.77}\n广东-郁南{111.51,23.23}\n广东-德庆{111.75,23.15}\n广东-封开{111.48,23.45}\n广西-南宁{108.33,22.84}\n广西-柳州{109.4,24.33}\n广西-桂林{110.28,25.29}\n广西-梧州{111.34,23.51}\n广西-凭祥{106.75,22.11}\n广西-邕宁{108.49,22.74}\n广西-武鸣{108.27,23.17}\n广西-马山{108.2,23.73}\n广西-上林{108.59,23.44}\n广西-宾阳{108.8,23.22}\n广西-横县{109.2,22.69}\n广西-扶绥{107.92,22.65}\n广西-崇左{107.37,22.42}\n广西-宁明{107.08,22.12}\n广西-龙州{106.84,22.36}\n广西-大新{107.21,22.85}\n广西-天等{107.12,23.08}\n广西-隆安{107.68,23.18}\n广西-河池{108.06,24.7}\n广西-环江{108.26,24.83}\n广西-罗城{108.9,24.79}\n广西-宜山{108.64,24.47}\n广西-东兰{107.36,24.53}\n广西-凤山{107.05,24.55}\n广西-天峨{107.16,25.01}\n广西-南丹{107.54,24.98}\n广西-都安{108.09,23.94}\n广西-巴马{107.25,24.15}\n广西-合山{108.89,23.82}\n广西-柳城{109.24,24.67}\n广西-融安{109.37,24.24}\n广西-鹿寨{109.74,24.49}\n广西-象州{109.7,23.98}\n广西-武宜{109.66,23.6}\n广西-柳江{109.34,24.27}\n广西-来宾{109.24,23.76}\n广西-忻城{108.66,24.07}\n广西-融水{109.24,25.07}\n广西-三江{109.58,25.8}\n广西-金秀{110.18,24.14}\n广西-临桂{110.22,25.22}\n广西-灵川{110.33,25.42}\n广西-兴安{110.66,25.6}\n广西-资源{110.66,26.03}\n广西-全州{111.06,25.96}\n广西-灌阳{111.14,25.49}\n广西-恭城{110.81,24.85}\n广西-平乐{110.66,24.64}\n广西-荔浦{110.38,24.51}\n广西-永福{109.98,24.99}\n广西-龙胜{110.02,25.78}\n广西-苍悟{111.22,23.51}\n广西-钟山{111.3,24.53}\n广西-富川{110.26,24.83}\n广西-贺县{111.54,24.44}\n广西-岑溪{111,22.95}\n广西-藤县{110.9,23.36}\n广西-蒙山{110.54,24.22}\n广西-昭平{110.8,24.18}\n广西-玉林{110.14,22.64}\n广西-桂平{110.07,23.38}\n广西-平南{110.4,23.55}\n广西-容县{110.53,22.87}\n广西-北流{110.33,22.71}\n广西-陆川{110.25,22.33}\n广西-博白{109.98,22.27}\n广西-贵县{109.6,23.11}\n广西-北海{109.12,21.49}\n广西-钦州{108.61,21.96}\n广西-灵山{109.29,22.44}\n广西-浦北{109.56,22.27}\n广西-合浦{109.2,21.33}\n广西-上思{107.98,22.16}\n广西-防城{108.35,21.78}\n广西-百色{106.62,23.91}\n广西-凌云{106.55,24.35}\n广西-乐业{106.56,24.78}\n广西-田阳{106.9,23.75}\n广西-田东{107.12,23.62}\n广西-平果{107.59,23.33}\n广西-德保{106.6,23.34}\n广西-靖西{106.41,23.15}\n广西-那坡{105.85,23.42}\n广西-西林{105.08,24.51}\n广西-田林{106.24,24.31}\n广西-隆林{105.34,24.8}\n新疆-乌鲁木齐{87.68,43.77}\n新疆-克拉玛依{84.77,45.59}\n新疆-石河子{85.94,44.27}\n新疆-吐鲁番{89.19,42.91}\n新疆-托克逊{88.63,42.77}\n新疆-鄯善{90.25,42.82}\n新疆-哈密{93.44,42.78}\n新疆-伊吾{94.65,43.28}\n新疆-巴里坤{93,43.6}\n新疆-库尔勒{86.06,41.68}\n新疆-和静{86.35,42.31}\n新疆-和硕{86.84,42.23}\n新疆-博湖{86.53,41.95}\n新疆-尉梨{86.24,41.36}\n新疆-轮台{84.25,41.77}\n新疆-焉耆{86.55,42.05}\n新疆-和田{79.94,37.12}\n新疆-民丰{82.63,37.07}\n新疆-策勒{80.78,37.04}\n新疆-于田{81.63,36.86}\n新疆-洛浦{80.17,37.12}\n新疆-皮山{78.29,37.06}\n新疆-墨玉{79.74,37.31}\n新疆-阿克苏{80.29,41.15}\n新疆-温宿{80.24,41.29}\n新疆-拜城{81.84,41.82}\n新疆-库车{82.97,41.68}\n新疆-新和{82.63,41.55}\n新疆-沙雅{82.9,41.25}\n新疆-阿瓦提{80.34,40.64}\n新疆-柯平{79.06,40.55}\n新疆-乌什{79.25,41.22}\n新疆-咯什{75.94,39.52}\n新疆-巴楚{78.59,39.78}\n新疆-枷师{76.78,39.46}\n新疆-乐普湖{76.67,39.23}\n新疆-麦盖提{77.62,38.95}\n新疆-莎车{77.25,38.45}\n新疆-泽普{77.26,38.2}\n新疆-叶城{77.42,37.89}\n新疆-疏勒{76.05,39.41}\n新疆-英吉沙{76.17,38.91}\n新疆-疏附{75.83,39.42}\n新疆-塔什库尔干{75.22,37.76}\n新疆-阿图什{76.12,39.73}\n新疆-阿合奇{78.42,41.91}\n新疆-阿克陶{75.94,39.14}\n新疆-乌恰{75.18,39.7}\n新疆-昌吉{87.31,44.05}\n新疆-阜康{87.94,44.14}\n新疆-奇台{89.52,44.02}\n新疆-吉木萨尔{89.14,44}\n新疆-米泉{87.68,43.97}\n新疆-玛纳斯{86.22,44.28}\n新疆-呼图壁{86.92,44.18}\n新疆-木垒{90.34,43.8}\n新疆-博乐{82.1,44.93}\n新疆-精河{82.92,44.67}\n新疆-温泉{81.08,44.95}\n新疆-伊宁{81.33,43.91}\n新疆-尼勒克{82.53,43.82}\n新疆-新源{83.27,43.41}\n新疆-巩留{82.23,43.35}\n新疆-奎屯{84.89,44.45}\n新疆-特克斯{81.81,43.23}\n新疆-昭苏{81.08,43.15}\n新疆-霍城{80.87,44.07}\n新疆-察布察尔{81.12,43.82}\n新疆-塔城{82.96,46.74}\n新疆-额敏{83.62,46.52}\n新疆-乌苏{84.62,44.45}\n新疆-托里{83.59,45.92}\n新疆-裕民{82.94,46.21}\n新疆-沙湾{85.56,44.29}\n新疆-和布克赛尔{85.13,46.78}\n新疆-阿勒泰{88.14,47.86}\n新疆-青河{90.37,46.71}\n新疆-富蕴{89.44,47.05}\n新疆-福海{87.51,47.15}\n新疆-吉木乃{85.84,47.42}\n新疆-布尔津{86.92,47.7}\n新疆-哈巴河{86.41,48.05}\n江苏-南京{118.78,32.04}\n江苏-江宁{118.83,31.95}\n江苏-六合{118.83,32.36}\n江苏-江浦{118.62,32.07}\n江苏-徐州{117.2,34.26}\n江苏-连云港{119.16,34.59}\n江苏-南通{120.86,32.01}\n江苏-苏州{120.62,31.32}\n江苏-无锡{120.29,31.59}\n江苏-常州{119.95,31.79}\n江苏-丰县{116.57,34.79}\n江苏-沛县{116.93,34.73}\n江苏-赣榆{119.11,34.83}\n江苏-东海{118.75,34.54}\n江苏-新沂{118.33,34.38}\n江苏-邳县{117.97,34.3}\n江苏-睢宁{117.94,33.89}\n江苏-铜山{117.2,34.26}\n江苏-清江{119.02,33.59}\n江苏-灌云{119.23,34.3}\n江苏-灌南{119.36,34.09}\n江苏-沭阳{118.79,34.12}\n江苏-宿迁{118.3,33.96}\n江苏-泗阳{118.68,33.73}\n江苏-盱眙{118.05,33}\n江苏-涟水{119.26,33.77}\n江苏-淮阴{119.02,33.62}\n江苏-淮安{119.15,33.5}\n江苏-洪泽{118.85,33.28}\n江苏-泗洪{118.23,33.46}\n江苏-金湖{119.02,33.01}\n江苏-盐城{120.13,33.38}\n江苏-滨海{119.84,34.01}\n江苏-阜宁{119.79,33.78}\n江苏-射阳{120.26,33.77}\n江苏-建湖{119.77,33.46}\n江苏-响水{119.56,34.2}\n江苏-大丰{120.45,33.19}\n江苏-东台{120.31,32.84}\n江苏-海安{120.45,32.57}\n江苏-如皋{120.56,32.39}\n江苏-如东{121.18,32.33}\n江苏-启东{121.66,31.8}\n江苏-海门{121.15,31.89}\n江苏-南通{120.86,32.01}\n江苏-扬州{119.42,32.39}\n江苏-宝应{119.32,33.23}\n江苏-兴化{119.82,32.93}\n江苏-高邮{119.45,32.78}\n江苏-泰兴{120.02,32.16}\n江苏-泰县{120.15,32.51}\n江苏-泰州{119.9,32.49}\n江苏-靖江{120.26,32.03}\n江苏-江都{119.55,32.43}\n江苏-邗江{119.42,32.39}\n江苏-仪征{119.16,32.27}\n江苏-镇江{119.44,32.2}\n江苏-丹徒{119.44,32.2}\n江苏-扬中{119.81,32.24}\n江苏-丹阳{119.55,32}\n江苏-武进{119.95,31.78}\n江苏-宜兴{119.82,31.36}\n江苏-金坛{119.56,31.74}\n江苏-溧阳{119.48,31.43}\n江苏-句容{119.16,31.95}\n江苏-溧水{119.02,31.65}\n江苏-高淳{118.87,31.32}\n江苏-江阴{120.26,31.91}\n江苏-沙洲{120.55,31.86}\n江苏-常熟{120.74,31.64}\n江苏-太仓{121.1,31.45}\n江苏-昆山{120.95,31.39}\n江苏-吴县{120.62,31.32}\n江苏-吴江{120.63,31.16}\n江西-南昌{115.89,28.68}\n江西-新建{115.8,28.69}\n江西-景德镇{117.22,29.3}\n江西-萍乡{113.85,27.6}\n江西-九江{115.97,29.71}\n江西-彭泽{116.56,29.9}\n江西-湖口{116.23,29.75}\n江西-都昌{116.19,29.29}\n江西-星子{116.03,29.47}\n江西-永修{115.82,29.04}\n江西-德安{115.75,29.33}\n江西-瑞昌{115.65,29.68}\n江西-武宁{115.09,29.26}\n江西-修永{114.55,29.04}\n江西-上饶{117.97,28.47}\n江西-婺源{117.83,29.25}\n江西-德兴{117.58,28.96}\n江西-玉山{118.25,28.68}\n江西-广丰{118.2,28.45}\n江西-铅山{117.71,28.32}\n江西-横峰{117.62,28.42}\n江西-鹰潭{117.02,28.23}\n江西-贵溪{117.2,28.3}\n江西-余江{116.82,28.22}\n江西-万年{117.08,28.7}\n江西-乐平{117.12,28.97}\n江西-波阳{116.68,29}\n江西-于干{116.69,28.7}\n江西-弋阳{117.43,28.42}\n江西-宜春{114.38,27.81}\n江西-万载{114.44,28.11}\n江西-铜鼓{114.37,28.53}\n江西-宜丰{114.78,28.4}\n江西-上高{114.91,28.25}\n江西-安义{115.55,28.86}\n江西-奉新{115.38,28.71}\n江西-高安{115.38,28.42}\n江西-丰城{115.7,28.19}\n江西-清江{115.54,28.07}\n江西-新余{114.92,27.81}\n江西-分宜{114.68,27.82}\n江西-靖安{115.37,28.88}\n江西-抚州{116.34,28}\n江西-临川{116.29,27.95}\n江西-金溪{116.77,27.92}\n江西-资溪{117.06,27.7}\n江西-黎川{116.91,27.3}\n江西-南丰{116.52,27.22}\n江西-南城{116.62,27.56}\n江西-宜黄{116.2,27.55}\n江西-崇仁{116.05,27.75}\n江西-乐安{115.82,27.44}\n江西-东乡{116.61,28.23}\n江西-进贤{116.26,28.37}\n江西-吉安{114.97,27.12}\n江西-新干{115.4,27.77}\n江西-峡江{115.15,27.56}\n江西-吉水{115.14,27.22}\n江西-永丰{115.42,27.33}\n江西-泰和{114.88,26.81}\n江西-万安{114.77,26.47}\n江西-遂川{114.5,26.33}\n江西-宁冈{113.97,26.71}\n江西-永新{114.23,26.96}\n江西-莲花{113.94,27.14}\n江西-安福{114.62,27.39}\n江西-井冈山{114.17,26.57}\n江西-赣州{114.92,25.85}\n江西-广昌{116.32,26.84}\n江西-石城{116.32,26.34}\n江西-宁都{116,26.46}\n江西-兴国{115.33,26.32}\n江西-于都{115.39,25.96}\n江西-瑞金{116.02,25.89}\n江西-会昌{115.79,25.58}\n江西-安远{115.41,25.15}\n江西-寻乌{115.64,24.96}\n江西-定南{115.02,24.7}\n江西-龙南{114.79,24.91}\n江西-全南{114.53,24.76}\n江西-信丰{114.94,25.39}\n江西-赣县{114.02,25.85}\n江西-南康{114.75,25.66}\n江西-上犹{114.55,25.8}\n江西-崇义{114.31,25.69}\n江西-大余{114.36,25.39}\n河北-石家庄{114.48,38.03}\n河北-唐山{118.02,39.63}\n河北-行唐{114.54,38.42}\n河北-灵寿{114.38,38.31}\n河北-束鹿{115.18,37.94}\n河北-晋县{115.03,38.03}\n河北-藁城{114.84,38.03}\n河北-高邑{114.58,37.62}\n河北-赵县{114.78,37.76}\n河北-井陉{114.13,38.03}\n河北-获鹿{114.03,38.08}\n河北-新乐{114.67,38.33}\n河北-正定{114.56,38.13}\n河北-深泽{115.2,38.2}\n河北-无极{114.96,38.16}\n河北-赞皇{114.35,37.65}\n河北-元氏{114.5,37.74}\n河北-栾城{114.64,38.87}\n河北-平山{114.24,38.2}\n河北-邯郸{114.47,36.6}\n河北-永年{114.5,36.77}\n河北-曲周{114.92,36.78}\n河北-馆陶{115.4,36.47}\n河北-魏县{114.94,36.37}\n河北-成安{114.68,36.43}\n河北-大名{115.14,36.28}\n河北-涉县{113.67,36.57}\n河北-鸡泽{113.85,36.95}\n河北-丘县{115.18,36.84}\n河北-广平{114.94,36.49}\n河北-肥乡{114.8,36.56}\n河北-临漳{114.62,36.35}\n河北-磁县{114.37,36.37}\n河北-武安{114.2,36.7}\n河北-邢台{114.48,37.05}\n河北-柏乡{114.68,37.49}\n河北-宁普{114.9,37.62}\n河北-隆尧{114.75,37.35}\n河北-临西{115.5,36.87}\n河北-南官{115.37,37.37}\n河北-巨鹿{115.03,37.22}\n河北-任县{114.68,37.11}\n河北-沙河{114.52,36.94}\n河北-临城{114.5,37.43}\n河北-内丘{114.5,37.28}\n河北-新河{115.22,37.53}\n河北-清河{115.67,37.07}\n河北-威县{115.08,36.97}\n河北-广宗{115.14,37.06}\n河北-平乡{115.02,37.06}\n河北-南和{114.71,37}\n河北-保定{115.48,38.85}\n河北-涞水{115.71,39.39}\n河北-涿县{115.98,39.48}\n河北-定兴{115.78,39.28}\n河北-容城{115.86,39.06}\n河北-安新{115.92,38.92}\n河北-蠡县{115.58,38.49}\n河北-博野{115.46,38.46}\n河北-定县{114.02,38.52}\n河北-阜平{114.18,38.85}\n河北-唐县{114.97,38.75}\n河北-涞源{114.67,39.37}\n河北-易县{115.49,39.35}\n河北-新城{115.84,39.34}\n河北-雄县{116.1,38.98}\n河北-徐水{115.65,39.02}\n河北-高阳{115.78,38.68}\n河北-安国{115.3,38.41}\n河北-清苑{115.47,38.76}\n河北-望都{115.14,38.71}\n河北-曲阳{114.68,38.62}\n河北-完县{115.12,38.84}\n河北-满城{115.45,38.95}\n河北-张家口{114.87,40.82}\n河北-康保{114.6,41.87}\n河北-赤城{115.82,40.92}\n河北-怀来{115.54,40.4}\n河北-蔚县{114.53,39.83}\n河北-宣化{115.03,40.63}\n河北-张北{114.7,41.15}\n河北-沽源{115.68,41.68}\n河北-崇礼{115.25,40.98}\n河北-涿鹿{115.2,40.37}\n河北-阳原{114.15,40.12}\n河北-怀安{114.38,40.67}\n河北-尚义{113.95,41.05}\n河北-万全{114.73,40.84}\n河北-承德{117.93,40.97}\n河北-围场{117.72,41.95}\n河北-平泉{118.68,41.02}\n河北-宽城{118.47,40.62}\n河北-兴隆{117.48,40.42}\n河北-滦平{117.53,40.95}\n河北-隆化{117.7,41.32}\n河北-青龙{118.93,40.43}\n河北-丰宁{116.63,41.2}\n河北-秦皇岛{119.57,39.95}\n河北-迁西{118.3,40.15}\n河北-迁安{118.69,40.02}\n河北-昌黎{119.15,39.72}\n河北-卢龙{118.85,39.89}\n河北-滦南{118.67,39.49}\n河北-玉田{117.9,39.9}\n河北-唐海{118.54,39.31}\n河北-遵化{117.97,40.2}\n河北-抚宁{119.22,39.88}\n河北-乐亭{118.9,39.43}\n河北-滦县{118.73,39.74}\n河北-丰南{118.1,39.58}\n河北-丰润{118.13,39.82}\n河北-廊坊{116.7,39.53}\n河北-安次{116.69,39.52}\n河北-三河{117.06,39.97}\n河北-香河{117,39.76}\n河北-霸县{116.38,39.12}\n河北-固安{116.29,39.44}\n河北-大城{116.63,38.7}\n河北-文安{116.45,38.87}\n河北-永清{116.48,39.32}\n河北-大厂{116.98,39.98}\n河北-沧州{116.83,38.33}\n河北-黄骅{117.33,38.4}\n河北-盐山{117.22,38.07}\n河北-吴桥{116.37,37.65}\n河北-东光{116.52,37.89}\n河北-肃宁{115.82,38.43}\n河北-河间{116.07,38.45}\n河北-泊头{116.56,38.08}\n河北-交河{116.27,38.02}\n河北-青县{116.8,38.58}\n河北-海兴{117.85,38.17}\n河北-南皮{116.7,38.05}\n河北-任丘{116.08,38.72}\n河北-献县{116.12,38.2}\n河北-孟村{117.1,38.06}\n河北-衡水{115.72,37.72}\n河北-饶阳{115.74,38.24}\n河北-阜城{116.14,37.87}\n河北-景县{116.26,37.69}\n河北-枣强{115.72,37.52}\n河北-深县{115.56,38.02}\n河北-安平{115.5,38.22}\n河北-武强{115.96,38.03}\n河北-武邑{115.9,37.81}\n河北-故城{115.96,37.36}\n河北-冀县{115.56,37.59}\n河南-郑州{113.65,34.76}\n河南-荥阳{113.35,34.79}\n河南-开封{114.35,34.79}\n河南-平顶山{113.29,33.75}\n河南-洛阳{112.44,34.7}\n河南-焦作{113.21,35.24}\n河南-鹤壁{114.17,35.9}\n河南-杞县{114.77,34.56}\n河南-尉氏{114.17,34.41}\n河南-新郑{113.71,34.4}\n河南-登封{113.02,34.46}\n河南-通许{114.46,34.48}\n河南-中牟{114,34.73}\n河南-密县{113.35,34.51}\n河南-巩县{112.96,34.76}\n河南-兰考{114.81,34.69}\n河南-新乡{113.85,35.31}\n河南-汲县{114.05,35.44}\n河南-封丘{114.04,35.03}\n河南-获嘉{113.63,35.27}\n河南-温贺{113.06,34.94}\n河南-济源{112.57,35.08}\n河南-博爱{113.05,35.16}\n河南-辉县{113.77,35.46}\n河南-延津{114.19,35.14}\n河南-原阳{113.96,35.05}\n河南-武陟{113.38,35.1}\n河南-孟县{112.77,34.92}\n河南-沁阳{112.92,35.08}\n河南-修武{113.42,35.24}\n河南-安阳{114.35,36.1}\n河南-南乐{115.21,36.08}\n河南-范县{115.46,35.9}\n河南-台前{115.83,36}\n河南-滑县{114.52,35.57}\n河南-浚县{114.54,35.67}\n河南-淇县{114.17,35.6}\n河南-内黄{114.88,35.95}\n河南-清丰{115.1,35.89}\n河南-濮阳{114.98,35.71}\n河南-长垣{114.67,35.19}\n河南-汤阴{114.35,35.92}\n河南-林县{113.81,36.06}\n河南-商丘{115.65,34.44}\n河南-夏邑{116.13,34.22}\n河南-柘城{115.29,34.08}\n河南-睢县{115.04,34.46}\n河南-虞城{115.87,34.4}\n河南-永城{116.37,33.94}\n河南-宁陵{115.31,34.44}\n河南-民权{115.13,34.65}\n河南-周口{114.63,33.63}\n河南-商水{114.59,33.54}\n河南-扶沟{114.38,34.05}\n河南-鹿邑{115.48,33.86}\n河南-淮阳{114.88,33.74}\n河南-沈丘{115.06,33.41}\n河南-西华{114.5,33.79}\n河南-太康{114.85,34.06}\n河南-郸城{115.17,33.63}\n河南-项城{114.9,33.44}\n河南-许昌{113.81,34.02}\n河南-鄢县{114.17,34.11}\n河南-郾城{113.98,33.6}\n河南-襄城{113.46,33.86}\n河南-鲁山{112.88,33.74}\n河南-郏县{113.19,33.98}\n河南-漯河{114.02,33.56}\n河南-长葛{113.77,34.22}\n河南-临颖{113.94,33.81}\n河南-舞阳{113.58,33.44}\n河南-叶县{113.35,33.62}\n河南-宝丰{113.04,33.86}\n河南-禹县{113.47,34.16}\n河南-驻马店{114.02,32.98}\n河南-确山{114.02,32.83}\n河南-西平{114,33.38}\n河南-汝南{114.35,33}\n河南-新蔡{114.97,32.75}\n河南-泌阳{113.31,32.72}\n河南-遂平{113.98,33.15}\n河南-上蔡{114.26,33.25}\n河南-平舆{114.62,32.97}\n河南-正阳{114.38,32.62}\n河南-信阳{114.08,32.13}\n河南-息县{114.72,32.35}\n河南-固始{115.68,32.17}\n河南-潢川{115.04,32.13}\n河南-新县{114.83,31.62}\n河南-罗山{114.53,32.21}\n河南-淮滨{115.41,32.44}\n河南-商城{115.42,31.81}\n河南-光山{114.91,32.02}\n河南-南阳{112.53,33.01}\n河南-方城{112.98,33.25}\n河南-唐河{112.83,32.7}\n河南-新野{112.36,32.51}\n河南-邓县{112.08,32.68}\n河南-淅川{111.47,33.14}\n河南-南召{112.4,33.49}\n河南-社旗{112.92,33.05}\n河南-桐柏{113.4,32.37}\n河南-镇平{112.23,33.03}\n河南-内乡{111.83,33.05}\n河南-西峡{111.5,33.31}\n河南-三门峡{111.19,34.76}\n河南-孟津{112.42,34.84}\n河南-临汝{112.83,34.17}\n河南-汝阳{112.46,34.16}\n河南-嵩县{112.07,34.14}\n河南-栾川{111.6,33.81}\n河南-灵宝{110.85,34.52}\n河南-渑池{111.75,34.76}\n河南-义马{111.92,34.73}\n河南-偃师{112.77,34.73}\n河南-伊川{112.42,34.43}\n河南-宜阳{112.15,34.51}\n河南-洛宁{111.65,34.39}\n河南-卢氏{111.03,34.06}\n河南-陕县{111.19,34.76}\n河南-新安{112.14,34.75}\n浙江-杭州{120.19,30.26}\n浙江-余杭{120.3,30.43}\n浙江-富阳{119.95,30.07}\n浙江-建德{119.27,29.49}\n浙江-临安{119.72,30.23}\n浙江-萧山{120.25,30.16}\n浙江-桐庐{119.64,29.8}\n浙江-淳安{119.05,29.61}\n浙江-宁波{121.56,29.86}\n浙江-镇海{121.72,29.96}\n浙江-温州{120.65,28.01}\n浙江-瓯海{120.65,28.01}\n浙江-永喜{120.68,28.16}\n浙江-洞头{121.12,27.84}\n浙江-平阳{120.55,27.68}\n浙江-泰顺{119.7,27.57}\n浙江-乐清{120.94,28.14}\n浙江-瑞安{120.62,27.8}\n浙江-文成{120.08,27.08}\n浙江-苍南{120.36,27.53}\n浙江-湖州{120.1,30.86}\n浙江-平湖{121.02,30.7}\n浙江-桐乡{120.54,30.64}\n浙江-安吉{119.68,30.68}\n浙江-嘉善{120.92,30.84}\n浙江-嘉兴{120.76,30.77}\n浙江-海盐{120.92,30.53}\n浙江-海宁{120.69,30.53}\n浙江-德清{120.08,30.54}\n浙江-长兴{119.91,30.01}\n浙江-定海{122.11,30.03}\n浙江-岱山{122.2,30.26}\n浙江-嵊四{122.45,30.72}\n浙江-普陀{122.3,29.97}\n浙江-鄞县{121.56,29.86}\n浙江-象山{121.8,29.48}\n浙江-奉化{121.41,29.66}\n浙江-慈溪{121.23,30.18}\n浙江-宁海{121.42,29.3}\n浙江-余姚{121.16,30.04}\n浙江-绍兴{120.58,30.01}\n浙江-新昌{120.89,29.49}\n浙江-诸暨{120.23,29.71}\n浙江-上虞{120.87,30.03}\n浙江-嵊县{120.81,29.6}\n浙江-椒江{121.44,28.67}\n浙江-临海{121.13,28.8}\n浙江-三门{121.38,29.11}\n浙江-温岭{121.36,28.36}\n浙江-仙居{120.73,28.85}\n浙江-天台{121.03,29.15}\n浙江-黄岩{121.27,28.64}\n浙江-玉环{121.23,28.14}\n浙江-丽水{119.92,28.45}\n浙江-青田{120.28,28.45}\n浙江-庆无{119.06,27.61}\n浙江-遂昌{119.25,28.59}\n浙江-缙云{120.6,28.66}\n浙江-云和{119.56,28.12}\n浙江-龙泉{119.13,28.08}\n浙江-松阳{119.48,28.46}\n浙江-金华{119.64,29.12}\n浙江-浦江{119.88,29.46}\n浙江-东阳{120.23,29.27}\n浙江-武义{119.81,28.9}\n浙江-江山{118.61,28.74}\n浙江-开化{118.39,29.15}\n浙江-衢州{118.88,28.97}\n浙江-兰溪{119.48,29.19}\n浙江-义乌{120.06,29.32}\n浙江-永康{120.02,28.92}\n浙江-常山{118.5,28.9}\n海南-海口{110.35,20.02}\n海南-琼山{110.33,19.98}\n海南-文昌{110.72,19.61}\n海南-定安{110.31,19.68}\n海南-琼海{110.46,19.25}\n海南-万宁{110.39,18.8}\n海南-屯昌{110.1,19.36}\n海南-澄迈{110,19.75}\n海南-儋县{109.57,19.52}\n海南-临高{109.69,19.91}\n海南-保亭{109.7,18.64}\n海南-白沙{109.44,19.23}\n海南-琼中{109.83,19.05}\n海南-陵水{110.02,18.48}\n海南-崖县{109.5,18.25}\n海南-乐东{109.17,18.73}\n海南-东方{108.64,19.09}\n海南-昌江{109.03,19.25}\n港澳台-香港{114.1,22.2}\n港澳台-澳门{113.33,22.13}\n港澳台-台北{121.5,25.05}\n港澳台-高雄{120.37,22.64}\n港澳台-基隆{121.73,25.14}\n港澳台-台中{120.67,24.15}\n港澳台-台南{120.19,22.98}\n港澳台-宜兰{121.75,24.75}\n港澳台-桃园{121.3,25}\n港澳台-新竹{120.96,24.81}\n湖北-武汉{114.31,30.52}\n湖北-武昌{114.33,30.35}\n湖北-汉阳{114.02,30.57}\n湖北-黄石{115.09,30.2}\n湖北-十堰{110.79,32.65}\n湖北-沙市{112.24,30.32}\n湖北-宜昌{111.3,30.7}\n湖北-襄樊{112.14,30.02}\n湖北-孝感{113.91,31.92}\n湖北-黄陂{114.36,30.88}\n湖北-汉川{113.59,30.63}\n湖北-云梦{113.73,31.02}\n湖北-应山{113.81,31.62}\n湖北-大悟{114.09,31.56}\n湖北-应城{113.6,30.94}\n湖北-安陆{113.69,31.25}\n湖北-鄂城{114.87,30.38}\n湖北-黄冈{114.87,30.44}\n湖北-新洲{114.8,31.84}\n湖北-红安{114.61,31.29}\n湖北-麻城{115,31.17}\n湖北-罗川{115.37,30.79}\n湖北-浠水{115.22,30.46}\n湖北-蕲春{115.3,30.24}\n湖北-黄梅{115.93,30.09}\n湖北-广济{115.56,29.85}\n湖北-英山{115.57,30.75}\n湖北-咸宁{114.28,29.87}\n湖北-阳新{115.22,29.83}\n湖北-通山{114.52,29.6}\n湖北-通城{113.8,29.23}\n湖北-嘉鱼{113.91,29.97}\n湖北-崇阳{114.04,29.54}\n湖北-蒲圻{113.85,29.71}\n湖北-荆门{112.19,31.02}\n湖北-江陵{112.18,30.35}\n湖北-钟祥{112.58,31.17}\n湖北-京山{113.11,31.03}\n湖北-监利{112.9,29.83}\n湖北-石首{112.41,29.73}\n湖南-长沙{113,28.21}\n湖南-望城{112.8,28.37}\n湖南-株洲{113.16,27.83}\n湖南-湘潭{112.91,27.87}\n湖南-衡阳{112.61,26.89}\n湖南-邵阳{111.5,27.22}\n湖南-岳阳{113.09,29.37}\n湖南-临湘{113.42,29.48}\n湖南-平江{113.56,29.71}\n湖南-泪罗{113.05,28.8}\n湖南-湘阴{112.87,28.68}\n湖南-华容{112.55,29.52}\n湖南-浏阳{113.63,28.16}\n湖南-醴陵{113.5,27.67}\n湖南-攸县{113.32,27.01}\n湖南-茶陵{113.54,26.79}\n湖南-酃县{113.77,26.49}\n湖南-湘乡{112.5,27.75}\n湖南-郴州{113,25.79}\n湖南-郴县{113,25.79}\n湖南-安仁{113.27,26.71}\n湖南-永兴{113.11,26.13}\n湖南-资兴{113.39,25.95}\n湖南-桂东{113.91,25.08}\n湖南-汝城{113.68,25.54}\n湖南-宜章{113.96,25.41}\n湖南-临武{112.55,25.27}\n湖南-嘉禾{112.35,25.56}\n湖南-桂阳{112.72,25.73}\n湖南-来阳{112.84,26.41}\n湖南-衡南{112.61,26.89}\n湖南-衡山{112.86,27.25}\n湖南-衡东{112.95,27.1}\n湖南-常宁{112.39,26.38}\n湖南-祁阳{111.85,26.59}\n湖南-祁东{112.14,26.8}\n湖南-衡阳{112.61,26.89}\n湖南-永州{111.63,26.22}\n湖南-零陵{111.63,26.22}\n湖南-新田{112.21,25.91}\n湖南-宁远{111.95,25.6}\n湖南-蓝山{112.16,25.37}\n湖南-双牌{111.64,25.96}\n湖南-江永{111.33,25.41}\n湖南-道县{111.57,25.52}\n湖南-东安{111.28,26.41}\n湖南-江华{111.79,24.97}\n湖南-新宁{110.84,26.44}\n湖南-武冈{110.61,26.73}\n湖南-隆回{111.04,27.13}\n湖南-绥宁{110.14,25.59}\n湖南-洞口{110.57,27.06}\n湖南-城步{110.3,26.37}\n湖南-娄底{111.96,27.71}\n湖南-涟源{111.66,27.68}\n湖南-新邵{111.46,27.33}\n湖南-双峰{112.18,27.44}\n湖南-冷水江{111.41,27.68}\n湖南-邵东{111.73,27.25}\n湖南-新化{111.29,27.73}\n湖南-怀化{109.95,27.52}\n湖南-黔阳{110.14,27.33}\n湖南-辰溪{110.18,28.02}\n湖南-沅陵{110.39,28.46}\n湖南-溆浦{110.57,27.92}\n湖南-会同{109.71,26.86}\n湖南-靖县{109.68,26.57}\n湖南-洪江{109.96,27.1}\n湖南-芷江{109.78,27.44}\n湖南-麻阳{109.79,27.87}\n湖南-通道{109.77,26.16}\n湖南-新晃{109.16,27.37}\n湖南-吉首{109.71,28.3}\n湖南-永顺{109.84,29}\n湖南-桑植{110.16,29.38}\n湖南-大庸{110.48,29.13}\n湖南-古丈{109.91,28.62}\n湖南-泸溪{110.73,28.29}\n湖南-凤凰{109.43,27.92}\n湖南-花垣{109.46,28.59}\n湖南-保靖{109.64,28.7}\n湖南-龙山{109.42,29.64}\n湖南-常德{111.69,29.05}\n湖南-临澧{111.64,29.44}\n湖南-澧县{111.75,29.65}\n湖南-安乡{112.16,29.41}\n湖南-津市{111.87,29.64}\n湖南-汉寿{111.97,28.9}\n湖南-桃源{111.47,28.9}\n湖南-慈利{111.09,29.41}\n湖南-石门{111.35,29.59}\n湖南-益阳{112.33,28.6}\n湖南-南县{112.39,29.37}\n湖南-沅江{112.36,28.83}\n湖南-宁乡{112.55,28.27}\n湖南-安化{111.2,28.38}\n湖南-桃江{112.11,28.51}\n甘肃-兰州{103.73,36.03}\n甘肃-永登{103.25,36.73}\n甘肃-榆中{104.09,35.87}\n甘肃-永昌{101.94,38.23}\n甘肃-皋兰{103.97,36.32}\n甘肃-定西{104.57,35.57}\n甘肃-会宁{105.08,35.72}\n甘肃-陇西{104.61,34.98}\n甘肃-临洮{103.88,35.39}\n甘肃-靖远{104.71,36.54}\n甘肃-通渭{105.27,35.24}\n甘肃-渭源{104.19,35.17}\n甘肃-平凉{106.68,35.51}\n甘肃-灵台{107.61,35.1}\n甘肃-华亭{106.65,35.21}\n甘肃-静宁{105.73,35.51}\n甘肃-泾川{107.38,35.31}\n甘肃-崇信{107.05,35.27}\n甘肃-庄浪{106.06,35.2}\n甘肃-庆阳{107.88,36.03}\n甘肃-华池{108,36.44}\n甘肃-庄宁{108.43,35.5}\n甘肃-镇源{107.22,35.7}\n甘肃-环县{107.33,36.57}\n甘肃-合水{108.02,35.81}\n甘肃-宁县{107.94,35.17}\n甘肃-天水{105.69,34.6}\n甘肃-徽县{106.11,33.78}\n甘肃-礼县{105.15,34.22}\n甘肃-武山{104.88,34.69}\n甘肃-秦安{105.69,34.89}\n甘肃-清水{106.12,34.73}\n甘肃-两当{106.28,33.9}\n甘肃-西和{105.28,34.02}\n甘肃-甘谷{105.35,34.7}\n甘肃-漳县{104.48,34.87}\n甘肃-张家川{106.23,35}\n甘肃-武都{104.94,33.43}\n甘肃-宕昌{104.38,34.06}\n甘肃-康县{105.58,33.33}\n甘肃-成县{105.7,33.75}\n甘肃-文县{104.7,32.95}\n甘肃-临潭{103.35,34.69}\n甘肃-舟曲{104.38,33.81}\n甘肃-玛曲{102.04,33.97}\n甘肃-下河{102.46,35.21}\n甘肃-卓尼{103.54,34.61}\n甘肃-迭部{103.23,34.08}\n甘肃-碌曲{102.5,34.6}\n甘肃-临夏{103.22,35.62}\n甘肃-永靖{103.34,35.97}\n甘肃-和政{103.31,35.43}\n甘肃-康乐{103.68,35.39}\n甘肃-广河{103.54,35.46}\n甘肃-东乡{103.39,35.68}\n甘肃-岷县{104.04,34.41}\n甘肃-积石山{102.85,35.74}\n甘肃-武威{102.61,37.94}\n甘肃-民勤{103.08,38.62}\n甘肃-古浪{102.86,37.43}\n甘肃-景泰{104.05,37.14}\n甘肃-天祝{102.84,37.24}\n甘肃-张掖{100.46,38.93}\n甘肃-民乐{100.85,38.43}\n甘肃-临泽{100.17,39.14}\n甘肃-山丹{101.19,38.79}\n甘肃-高台{99.84,39.14}\n甘肃-肃南{99.57,38.86}\n甘肃-玉门{97.58,39.81}\n甘肃-酒泉{98.5,39.71}\n甘肃-敦煌{94.71,40.13}\n甘肃-金塔{98.92,39.97}\n甘肃-安西{95.77,40.51}\n甘肃-阿克塞{94.25,38.46}\n甘肃-肃北{94.89,39.49}\n福建-福州{119.3,26.08}\n福建-闽侯{119.14,26.16}\n福建-厦门{118.1,24.46}\n福建-同安{118.15,24.74}\n福建-南平{118.16,26.65}\n福建-南平{118.16,26.65}\n福建-建瓯{118.32,27.05}\n福建-浦城{118.55,27.92}\n福建-邵武{117.48,27.34}\n福建-顺昌{117.8,26.8}\n福建-崇安{118.02,27.76}\n福建-光泽{117.34,27.54}\n福建-松溪{118.77,27.53}\n福建-政和{118.85,27.38}\n福建-宁德{119.52,26.65}\n福建-福安{119.65,27.09}\n福建-连江{119.53,26.2}\n福建-福鼎{120.2,27.34}\n福建-霞浦{120,26.89}\n福建-吉田{118.74,26.59}\n福建-罗源{119.55,26.49}\n福建-寿宁{119.5,27.47}\n福建-周宁{119.36,27.12}\n福建-屏南{118.98,26.92}\n福建-柘荣{119.89,27.25}\n福建-莆田{119,25.44}\n福建-仙游{118.7,25.37}\n福建-福清{119.39,25.73}\n福建-长乐{119.52,25.96}\n福建-永泰{118.95,25.88}\n福建-平潭{119.78,25.51}\n福建-闽清{118.86,26.21}\n福建-泉州{118.58,24.93}\n福建-晋江{118.57,24.82}\n福建-南安{118.39,24.96}\n福建-惠安{118.78,25.04}\n福建-安溪{118.18,25.07}\n福建-永春{118.3,25.34}\n福建-德化{118.24,25.5}\n福建-金门{118.34,24.43}\n福建-漳州{117.35,24.52}\n福建-龙海{117.79,24.44}\n福建-漳浦{117.61,24.12}\n福建-诏安{117.16,23.73}\n福建-平和{117.3,24.38}\n福建-云霄{117.34,23.99}\n福建-南靖{117.35,24.51}\n福建-长泰{117.75,24.62}\n福建-东山{117.4,23.72}\n福建-华安{117.53,25}\n福建-龙岩{117.01,25.12}\n福建-上杭{116.41,25.43}\n福建-永定{116.81,24.76}\n福建-长汀{116.37,25.85}\n福建-武平{116.1,25.11}\n福建-连城{116.75,25.72}\n福建-漳平{117.4,25.3}\n福建-三明{117.61,26.23}\n福建-龙溪{118.17,26.18}\n福建-宁化{116.64,26.26}\n福建-大田{117.83,25.69}\n福建-永安{117.37,25.97}\n福建-沙县{117.77,26.41}\n福建-将乐{117.45,26.73}\n福建-清流{116.81,26.12}\n福建-建宁{116.82,26.85}\n福建-泰宁{117.15,26.92}\n福建-明溪{117.18,26.36}\n西藏自治区-拉萨{91.11,29.97}\n西藏自治区-林周{91.24,30.2}\n西藏自治区-当雄{91.05,30.51}\n西藏自治区-墨竹工卡{91.77,29.77}\n西藏自治区-尼木{90.14,29.44}\n西藏自治区-米林{94.13,29.18}\n西藏自治区-墨脱{95.26,29.22}\n西藏自治区-达孜{91.39,29.63}\n西藏自治区-曲水{90.7,29.39}\n西藏自治区-堆龙德庆{90.96,29.67}\n西藏自治区-林芝{94.25,29.59}\n西藏自治区-工布江达{93.25,29.92}\n西藏自治区-那曲{92.1,31.47}\n西藏自治区-巴青{94.1,31.96}\n西藏自治区-比如{93.68,31.53}\n西藏自治区-班戈{90.05,31.35}\n西藏自治区-嘉黎{93.46,30.63}\n西藏自治区-聂荣{92.3,31.08}\n西藏自治区-索县{93.71,31.92}\n西藏自治区-安多{91.68,32.29}\n西藏自治区-申扎{88.7,30.94}\n西藏自治区-吕都{97.14,31.18}\n西藏自治区-贡觉{98.29,30.86}\n西藏自治区-左贡{97.9,29.68}\n西藏自治区-察隅{97.49,28.62}\n西藏自治区-洛隆{95.76,30.81}\n西藏自治区-丁青{95.63,31.42}\n西藏自治区-波密{95.75,29.92}\n西藏自治区-江达{89.19,31.53}\n西藏自治区-察雅{97.56,30.69}\n西藏自治区-芒康{98.68,29.64}\n西藏自治区-八宿{96.95,30.04}\n西藏自治区-边坝{94.69,30.94}\n西藏自治区-类乌齐{96.57,31.2}\n西藏自治区-乃东{91.76,29.18}\n西藏自治区-加查{92.6,29.09}\n西藏自治区-曲松{92.11,29.08}\n西藏自治区-错那{91.91,27.98}\n西藏自治区-穷结{91.65,29.04}\n西藏自治区-贡嘎{90.96,29.25}\n西藏自治区-浪卡子{90.33,29.96}\n西藏自治区-桑日{92,29.26}\n西藏自治区-朗县{93.11,29.06}\n西藏自治区-隆子{92.42,28.46}\n西藏自治区-措美{91.4,28.49}\n西藏自治区-洛扎{90.83,28.42}\n西藏自治区-扎囊{91.26,29.22}\n西藏自治区-日喀则{88.82,29.28}\n西藏自治区-定结{87.77,28.38}\n西藏自治区-拉孜{87.62,29.1}\n西藏自治区-聂拉木{85.94,28.19}\n西藏自治区-谢通门{88.25,29.43}\n西藏自治区-仲巴{84.15,29.66}\n西藏自治区-康马{89.67,28.57}\n西藏自治区-亚东{88.93,27.55}\n西藏自治区-岗巴{88.5,28.29}\n西藏自治区-南木林{89.02,29.71}\n西藏自治区-萨迦{88,28.87}\n西藏自治区-定日{87.11,28.57}\n西藏自治区-吉隆{85.29,28.94}\n西藏自治区-昂仁{87.22,29.3}\n西藏自治区-江孜{89.63,28.94}\n西藏自治区-仁布{89.77,29.21}\n西藏自治区-白朗{89.16,29.11}\n西藏自治区-萨嘎{85.3,29.38}\n西藏自治区-噶尔{80,32.08}\n西藏自治区-革吉{81.13,32.45}\n西藏自治区-扎达{79.76,31.47}\n西藏自治区-措勤{85.16,31.06}\n西藏自治区-日上{79.61,33.44}\n西藏自治区-改则{84.1,32.33}\n西藏自治区-普兰{81.18,30.37}\n贵州-贵阳{106.71,26.57}\n贵州-六盘水{104.82,26.58}\n贵州-水城{104.82,26.58}\n贵州-盘县{104.64,25.81}\n贵州-六枝{105.47,26.21}\n贵州-遵义{106.9,27.7}\n贵州-绥阳{107.19,27.95}\n贵州-道真{107.6,28.89}\n贵州-凤冈{107.72,27.97}\n贵州-余庆{107.88,27.22}\n贵州-赤水{105.69,28.57}\n贵州-桐梓{106.8,28.16}\n贵州-正安{107.43,28.56}\n贵州-务川{107.87,28.54}\n贵州-湄潭{107.5,27.76}\n贵州-仁怀{106.41,27.81}\n贵州-习水{106.2,28.33}\n贵州-铜仁{109.21,27.73}\n贵州-玉屏{108.91,27.24}\n贵州-思南{108.23,27.94}\n贵州-德江{108.13,28.27}\n贵州-万山{109.2,27.52}\n贵州-江口{108.82,27.68}\n贵州-师阡{108.24,27.52}\n贵州-印江{108.41,28.02}\n贵州-沿河{108.48,28.57}\n贵州-松桃{109.18,28.17}\n贵州-毕节{105.29,27.32}\n贵州-黔西{106.04,27.03}\n贵州-织金{105.76,26.66}\n贵州-赫章{104.71,27.13}\n贵州-大方{105.61,27.16}\n贵州-金沙{106.22,27.46}\n贵州-钠雍{105.38,26.77}\n贵州-威宁{104.28,26.87}\n贵州-安顺{105.92,26.25}\n贵州-息烽{106.73,27.1}\n贵州-清镇{106.46,26.56}\n贵州-普定{105.75,26.32}\n贵州-开阳{106.95,27.06}\n贵州-修文{106.59,26.84}\n贵州-平坝{106.26,26.42}\n贵州-镇宁{105.75,26.08}\n贵州-紫云{106.06,25.75}\n贵州-关岭{105.62,25.94}\n贵州-兴义{104.91,25.1}\n贵州-普安{104.96,25.79}\n贵州-贞丰{105.63,25.39}\n贵州-望谟{106.09,25.17}\n贵州-册亭{105.79,25}\n贵州-安龙{105.49,25.11}\n贵州-兴仁{105.18,25.44}\n贵州-晴龙{105.21,25.83}\n贵州-凯里{107.97,26.59}\n贵州-施秉{108.11,27.03}\n贵州-镇远{108.41,27.06}\n贵州-天柱{109.2,26.89}\n贵州-剑河{108.58,26.64}\n贵州-黎平{109.14,26.24}\n贵州-从江{108.9,25.76}\n贵州-麻江{107.58,26.49}\n贵州-黄平{107.89,26.89}\n贵州-三穗{108.68,26.98}\n贵州-岑巩{108.72,27.21}\n贵州-锦屏{109.18,26.7}\n贵州-台江{108.32,26.68}\n贵州-榕江{108.5,25.94}\n贵州-雷山{108.07,26.38}\n贵州-丹寨{107.79,26.21}\n贵州-都匀{107.53,26.72}\n贵州-贵定{107.22,26.58}\n贵州-瓮安{107.48,27.08}\n贵州-平塘{107.55,25.83}\n贵州-长顺{106.45,26.03}\n贵州-惠水{106.66,26.14}\n贵州-荔波{107.88,25.42}\n贵州-福泉{107.51,26.7}\n贵州-独山{107.54,25.84}\n贵州-罗甸{106.74,25.43}\n贵州-龙里{106.98,26.46}\n贵州-三都{107.86,26}\n辽宁-沈阳{123.38,41.8}\n辽宁-新民{122.83,42}\n辽宁-辽中{122.7,41.52}\n辽宁-大连{121.62,38.92}\n辽宁-金县{121.7,39.13}\n辽宁-复县{121.97,39.63}\n辽宁-新金{121.95,39.55}\n辽宁-庄河{22.97,39.7}\n辽宁-长海{122.58,39.28}\n辽宁-鞍山{122.85,41.12}\n辽宁-海城{122.75,40.85}\n辽宁-台安{122.4,41.4}\n辽宁-抚顺{123.97,41.97}\n辽宁-新宾{125.02,41.72}\n辽宁-清原{124.9,42.13}\n辽宁-本溪{123.73,41.3}\n辽宁-垣仁{125.33,41.28}\n辽宁-锦州{121.15,41.13}\n辽宁-锦县{121.35,41.17}\n辽宁-义县{121.22,41.55}\n辽宁-黑山{122.12,41.7}\n辽宁-北镇{121.8,41.6}\n辽宁-锦西{120.83,40.77}\n辽宁-兴城{120.68,40.63}\n辽宁-绥中{120.32,40.35}\n辽宁-丹东{124.37,40.13}\n辽宁-东沟{124.13,39.97}\n辽宁-岫岩{123.25,40.3}\n辽宁-凤城{124.05,40.47}\n辽宁-宽甸{124.77,40.75}\n辽宁-阜新{121.65,42}\n辽宁-彰武{122.52,42.42}\n辽宁-营口{122.18,40.65}\n辽宁-盖县{122.37,40.42}\n辽宁-盘山{122.03,41.02}\n辽宁-大洼{122.06,41}\n辽宁-辽阳{123.17,41.28}\n辽宁-灯塔{123.34,41.43}\n辽宁-铁岭{123.85,42.32}\n辽宁-开原{124.03,42.53}\n辽宁-昌图{124.13,42.8}\n辽宁-铁法{123.5,42.48}\n辽宁-康平{123.33,42.75}\n辽宁-法库{123.37,42.52}\n辽宁-西丰{124.7,42.77}\n辽宁-朝阳{120.42,41.58}\n辽宁-建昌{119.78,40.82}\n辽宁-北票{120.75,41.82}\n辽宁-凌源{119.37,41.27}\n辽宁-建平{119.63,41.38}\n重庆-重庆{106.54,29.59}\n重庆-綦江{106.56,29.41}\n重庆-长寿{106.64,29.01}\n重庆-南桐{107.04,29.86}\n重庆-合川{106.28,29.26}\n重庆-潼南{106.22,30.03}\n重庆-铜梁{105.8,30.16}\n重庆-壁山{106.03,29.86}\n重庆-荣昌{106.21,29.62}\n重庆-大足{105.59,29.4}\n重庆-永川{105.71,29.75}\n重庆-万盛{105.91,29.38}\n陕西-西安{108.95,34.27}\n陕西-长安{108.97,34.18}\n陕西-铜川{109.11,35.09}\n陕西-耀县{108.98,34.91}\n陕西-宝鸡{107.15,34.38}\n陕西-凤翔{107.39,34.53}\n陕西-千阳{107.13,34.65}\n陕西-陇县{106.86,34.91}\n陕西-麟游{107.8,34.69}\n陕西-岐山{107.63,34.46}\n陕西-浮风{107.87,34.38}\n陕西-武功{108.22,34.28}\n陕西-眉县{107.76,34.29}\n陕西-太白{107.3,34.09}\n陕西-凤县{106.51,33.93}\n陕西-榆林{109.77,38.3}\n陕西-神木{110.51,38.83}\n陕西-府谷{111.07,39.05}\n陕西-佳县{110.48,38.04}\n陕西-米脂{110.23,37.78}\n陕西-吴堡{110.73,37.49}\n陕西-绥德{110.24,37.49}\n陕西-清涧{110.15,37.11}\n陕西-子洲{110.05,37.45}\n陕西-横山{109.32,37.97}\n陕西-靖边{108.79,37.61}\n陕西-定边{107.59,37.6}\n陕西-延安{109.47,36.6}\n陕西-安寨{109.34,36.88}\n陕西-子长{109.65,37.16}\n陕西-延川{110.18,36.87}\n陕西-延长{110.02,36.59}\n陕西-宜川{110.15,36.04}\n陕西-黄龙{109.86,35.6}\n陕西-洛川{109.42,35.76}\n陕西-宜君{109.11,35.43}\n陕西-黄陵{109.27,35.6}\n陕西-富县{109.37,36}\n陕西-甘泉{109.37,36.29}\n陕西-志丹{108.78,36.84}\n陕西-吴旗{108.22,36.93}\n陕西-咸阳{108.72,34.36}\n陕西-礼泉{108.43,34.5}\n陕西-永寿{108.14,34.71}\n陕西-彬县{108.09,35.04}\n陕西-长武{107.8,35.22}\n陕西-旬邑{108.33,35.13}\n陕西-淳化{108.57,34.81}\n陕西-泾阳{108.84,34.53}\n陕西-三原{108.94,34.62}\n陕西-高陵{109.1,34.55}\n陕西-户县{108.61,34.12}\n陕西-周至{108.22,34.18}\n陕西-兴平{108.49,34.32}\n陕西-乾县{108.25,34.54}\n陕西-渭南{109.5,34.52}\n陕西-蒲城{109.59,34.97}\n陕西-白水{109.6,35.18}\n陕西-成城{109.93,35.2}\n陕西-韩城{110.45,35.47}\n陕西-合阳{110.15,35.24}\n陕西-人荔{109.96,34.82}\n陕西-潼关{110.25,34.56}\n陕西-华阴{110.09,34.58}\n陕西-华县{109.77,34.53}\n陕西-蓝田{109.32,34.17}\n陕西-临潼{109.22,34.38}\n陕西-富平{109.17,34.76}\n陕西-商县{109.96,33.88}\n陕西-洛南{110.15,34.11}\n陕西-丹凤{110.35,33.71}\n陕西-商南{110.88,33.54}\n陕西-山阳{109.91,33.55}\n陕西-镇安{109.16,33.45}\n陕西-柞水{109.14,33.69}\n陕西-安康{109.02,32.7}\n陕西-旬阳{109.35,32.83}\n陕西-白河{110.06,32.83}\n陕西-平利{109.37,32.41}\n陕西-镇坪{109.51,31.91}\n陕西-岚皋{108.89,32.3}\n陕西-紫阳{108.55,32.56}\n陕西-汉阴{108.53,32.9}\n陕西-石泉{108.26,33.05}\n陕西-宁陕{108.33,33.34}\n陕西-汉中{108.04,33.07}\n陕西-留坝{106.95,33.65}\n陕西-城固{107.32,33.16}\n陕西-洋县{107.56,33.23}\n陕西-佛坪{108,33.55}\n陕西-西乡{107.77,33}\n陕西-镇巴{107.91,32.56}\n陕西-南郑{106.93,33}\n陕西-宁强{106.25,32.82}\n陕西-勉县{106.68,33.16}\n陕西-略阳{106.16,33.34}\n青海-西宁{101.74,36.56}\n青海-大通{101.67,36.92}\n青海-平安{102.09,36.47}\n青海-湟中{101.57,36.49}\n青海-乐都{102.38,36.49}\n青海-民和{102.8,36.3}\n青海-湟源{101.28,36.72}\n青海-互助{101.95,36.84}\n青海-化隆{102.3,36.11}\n青海-循化{102.46,35.84}\n青海-门源{101.62,37.37}\n青海-海晏{100.99,36.89}\n青海-刚察{100.17,37.32}\n青海-祁连{100.22,38.2}\n青海-同仁{102,35.54}\n青海-尖扎{102,35.92}\n青海-泽库{101.5,35.03}\n青海-河南{101.62,34.75}\n青海-共和{100.61,36.27}\n青海-贵德{101.47,36.02}\n青海-贵南{100.75,35.57}\n青海-同德{100.63,35.24}\n青海-兴海{99.99,35.6}\n青海-玛沁{100.26,34.49}\n青海-甘德{99.89,33.95}\n青海-久治{101.47,33.46}\n青海-班玛{100.73,32.92}\n青海-达日{99.68,33.74}\n青海-玛多{98.26,34.92}\n青海-玉树{96.97,33.03}\n青海-称多{97.12,33.35}\n青海-囊谦{96.47,32.23}\n青海-杂多{95.3,32.92}\n青海-治多{95.6,33.86}\n青海-曲麻菜{95.5,34.52}\n青海-格尔木{94.9,36.41}\n青海-乌兰{98.46,36.9}\n青海-都兰{98.13,36.3}\n青海-天峻{99.03,37.28}\n黑龙江-哈尔滨{126.63,45.75}\n黑龙江-齐齐哈尔{123.97,47.33}\n黑龙江-鹤岗{130.3,47.33}\n黑龙江-双鸭山{131.17,46.65}\n黑龙江-鸡四{130.97,45.3}\n黑龙江-大庆{125.03,46.58}\n黑龙江-伊春{128.92,47.73}\n黑龙江-嘉荫{130,48.93}\n黑龙江-铁力{128.08,47.98}\n黑龙江-绥化{127,46.63}\n黑龙江-绥棱{127.12,47.22}\n黑龙江-海伦{126.97,47.47}\n黑龙江-庆安{127.5,46.87}\n黑龙江-兰西{126.3,46.28}\n黑龙江-肇东{125.98,46.07}\n黑龙江-肇州{125.25,45.72}\n黑龙江-肇源{125.07,45.53}\n黑龙江-安达{125.33,46.42}\n黑龙江-明水{125.88,47.18}\n黑龙江-青岗{126.13,46.68}\n黑龙江-望奎{126.5,46.83}\n黑龙江-黑河{127.53,50.22}\n黑龙江-爱辉{127.53,50.22}\n黑龙江-德都{126.17,48.5}\n黑龙江-通北{126.8,49.76}\n黑龙江-北安{126.5,48.22}\n黑龙江-孙吴{127.5,49.22}\n黑龙江-逊克{128.42,49.57}\n黑龙江-嫩江{125.2,49.17}\n黑龙江-佳木斯{130.35,46.83}\n黑龙江-桦川{130.68,47.02}\n黑龙江-萝北{130.83,47.58}\n黑龙江-绥滨{131.83,47.3}\n黑龙江-富锦{132.02,47.23}\n黑龙江-同江{132.5,47.67}\n黑龙江-抚远{134.15,48.33}\n黑龙江-饶河{134,46.78}\n黑龙江-七台河{130.83,45.82}\n黑龙江-宝清{132.17,46.33}\n黑龙江-集贤{131.13,46.7}\n黑龙江-勃利{130.53,45.75}\n黑龙江-桦南{130.53,46.25}\n黑龙江-依兰{129.55,46.33}\n黑龙江-汤源{129.92,46.73}\n黑龙江-牡丹江{129.58,44.6}\n黑龙江-林口{130.23,45.3}\n黑龙江-鸡东{131.04,45.27}\n黑龙江-密山{131.85,45.53}\n黑龙江-虎林{133.97,45.75}\n黑龙江-绥芬河{131.17,44.38}\n黑龙江-东宁{131.12,44.07}\n黑龙江-穆棱{130.5,44.9}\n黑龙江-宁安{129.47,44.35}\n黑龙江-海林{129.35,44.57}\n黑龙江-阿城{126.95,45.52}\n黑龙江-呼兰{126.58,46}\n黑龙江-巴彦{127.38,46.08}\n黑龙江-宾县{127.48,45.75}\n黑龙江-木兰{128.03,45.95}\n黑龙江-通河{128.7,45.98}\n黑龙江-方正{128.8,45.83}\n黑龙江-延寿{128.35,45.47}\n黑龙江-尚志{127.95,45.22}\n黑龙江-五常{127.17,44.93}\n黑龙江-双城{126.32,45.53}\n黑龙江-富裕{124.4,47.8}\n黑龙江-讷河{124.85,48.48}\n黑龙江-克山{125.87,48.03}\n黑龙江-克东{126.22,48.03}\n黑龙江-拜泉{126.07,47.62}\n黑龙江-依安{125.3,47.92}\n黑龙江-林甸{124.87,47.18}\n黑龙江-泰来{123.45,46.4}\n黑龙江-龙江{123.18,47.35}\n黑龙江-甘南{123.48,47.9}\n黑龙江-杜尔伯特{124.44,46.86}\n黑龙江-加格达奇{124.07,50.42}\n黑龙江-呼玛{126.6,51.72}\n黑龙江-塔河{124.7,52.32}\n黑龙江-漠河{122.37,53.48}\n```","slug":"35","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekiim002dro5uiakgzmjh"},{"title":"ubuntu安装Virtualbox","date":"2015-10-06T01:40:45.000Z","_content":"因为需要搭建一个集群，所以需要安装多台虚拟机进行。Vmware太大而且是收费的，所以最后决定用virtualbox.\n\n在过程中遇到了如下问题:\n>Kernel driver not installed (rc=-1908)  \n>\n>The VirtualBox Linux kernel driver (vboxdrv) is either not loaded or there is a permission problem with /dev/vboxdrv. Please reinstall the kernel module by executing  \n>\n>'/etc/init.d/vboxdrv setup'  \n>\n>as root. If it is available in your distribution, you should install the DKMS package first. This package keeps track of Linux kernel changes and recompiles the vboxdrv kernel module if necessary.\n\n下面就说一下安装的流程。\n\n<!--more-->\n\n其实最简单的方式是去官网下载`deb`包，然后直接`dpkg`安装即可。没有任何问题。\n\n但是如果使用了包管理的方式去安装，它安装的是`OSE`版的，会提示缺少内核模块，这就需要进行一些操作如下：\n```cpp\nsudo apt-get install build-essential module-assistant \nsudo m-a prepare\nsudo /etc/init.d/vboxdrv setup\n```\n即可。","source":"_posts/34.md","raw":"title: ubuntu安装Virtualbox\ndate: 2015-10-06 09:40:45\ncategories: 日常维护\ntags: [ubuntu,virtualbox,error]\n---\n因为需要搭建一个集群，所以需要安装多台虚拟机进行。Vmware太大而且是收费的，所以最后决定用virtualbox.\n\n在过程中遇到了如下问题:\n>Kernel driver not installed (rc=-1908)  \n>\n>The VirtualBox Linux kernel driver (vboxdrv) is either not loaded or there is a permission problem with /dev/vboxdrv. Please reinstall the kernel module by executing  \n>\n>'/etc/init.d/vboxdrv setup'  \n>\n>as root. If it is available in your distribution, you should install the DKMS package first. This package keeps track of Linux kernel changes and recompiles the vboxdrv kernel module if necessary.\n\n下面就说一下安装的流程。\n\n<!--more-->\n\n其实最简单的方式是去官网下载`deb`包，然后直接`dpkg`安装即可。没有任何问题。\n\n但是如果使用了包管理的方式去安装，它安装的是`OSE`版的，会提示缺少内核模块，这就需要进行一些操作如下：\n```cpp\nsudo apt-get install build-essential module-assistant \nsudo m-a prepare\nsudo /etc/init.d/vboxdrv setup\n```\n即可。","slug":"34","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekiip002iro5uqxpdr1aa"},{"title":"spfa算法","date":"2015-10-04T08:44:04.000Z","_content":"\n`spfa`算是是使用队列去优化`bellman`的一种算法吧。\n\n>求单源最短路的SPFA算法的全称是：Shortest Path Faster Algorithm，是西南交通大学段凡丁于1994年发表的。从名字我们就可以看出，这种算法在效率上一定有过人之处。很多时候，给定的图存在负权边，这时类似Dijkstra等算法便没有了用武之地，而Bellman-Ford算法的复杂度又过高，SPFA算法便派上用场了。简洁起见，我们约定加权有向图G不存在负权回路，即最短路径一定存在。如果某个点进入队列的次数超过N次则存在负环（SPFA无法处理带负环的图）。当然，我们可以在执行该算法前做一次拓扑排序，以判断是否存在负权回路，但这不是我们讨论的重点。我们用数组d记录每个结点的最短路径估计值，而且用邻接表来存储图G。我们采取的方法是动态逼近法：设立一个先进先出的队列用来保存待优化的结点，优化时每次取出队首结点u，并且用u点当前的最短路径估计值对离开u点所指向的结点v进行松弛操作，如果v点的最短路径估计值有所调整，且v点不在当前的队列中，就将v点放入队尾。这样不断从队列中取出结点来进行松弛操作，直至队列空为止。定理: 只要最短路径存在，上述SPFA算法必定能求出最小值。\n\n<!--more-->\n\n## 算法简介\n- 建立一个带权值的邻接矩阵，然后定义`dis[N]`表示源点到其他点的距离，然后将源点入队。\n- 当队列不空时：取出队列中第一个元素，遍历它的出度`edge`，如果以该有向边`edge`为中间边到达某个节点的距离小于原本的距离(`dis[x] + edge < dis[y]`)，则将这个点`y`入队，同时进行松弛操作。\n- 当一个点入队超过`n`次时，表明他经过了`n`次松弛操作。说明存在负环。\n\n## 代码示例\n```cpp\nstruct Edge{\n\tint wi;\t\t//权值\n\tint to;\t\t//边终点\n};\nint V_NUM;\t\t\t\t//节点数\nint E_NUM;\t\t\t\t//边数\nvector <Edge> v[M];\t\t//邻接表式\nint dis[M];\t\t\t\t//到i点的距离\nint times[M];\t\t\t//i点入队的次数\nint is_push[M];\t\t\t//i点是否入队\n\nbool spfa(int st){\n\tint i;\n\tqueue <int> qu;\n\tfor (int i = 0; i < V_NUM; ++i){\n\t\tif(i==st)dis[i] = 0;\n\t\telse dis[i] = VMAX;\n\t\ttimes[i] = 0;\n\t\tis_push[i] = 0;\n\t}\n\tqu.push(st);\n\ttimes[st] = 1;\n\tis_push[st] = 1;\n\twhile(!qu.empty()){\n\t\tint temp_v = qu.front();\n\t\tint n_vi = (int)v[temp_v].size();\t\t//该点的出度\n\t\tfor(i=0;i<n_vi;i++){\n\t\t\tEdge *e = &v[temp_v][i];\t\t\t//取出一条边\n\t\t\tif(dis[e->to]>(dis[temp_v]+e->wi)){\t//满足松弛条件\n\t\t\t\tdis[e->to] = dis[temp_v]+e->wi;\n\t\t\t\tqu.push(e->to);\n\t\t\t\ttimes[e->to]++;\n\t\t\t\tis_push[e->to] = 1;\n\t\t\t\tif(times[e->to]>V_NUM){\t\t\t//入队次数爆表，存在负环\n\t\t\t\t\twhile(!qu.empty())qu.pop();\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tqu.pop();\n\t\tis_push[temp_v] = 0;\n\t}\n\treturn 1;\n}\n```\n\n## 再次补充\n虽然介绍越来越短了，但是相信大家，看到代码后还是可以自己看懂的哈。","source":"_posts/33.md","raw":"title: spfa算法\ndate: 2015-10-04 16:44:04\ncategories: 编程与算法\ntags: [最短路,ACM,图论,spfa]\n---\n\n`spfa`算是是使用队列去优化`bellman`的一种算法吧。\n\n>求单源最短路的SPFA算法的全称是：Shortest Path Faster Algorithm，是西南交通大学段凡丁于1994年发表的。从名字我们就可以看出，这种算法在效率上一定有过人之处。很多时候，给定的图存在负权边，这时类似Dijkstra等算法便没有了用武之地，而Bellman-Ford算法的复杂度又过高，SPFA算法便派上用场了。简洁起见，我们约定加权有向图G不存在负权回路，即最短路径一定存在。如果某个点进入队列的次数超过N次则存在负环（SPFA无法处理带负环的图）。当然，我们可以在执行该算法前做一次拓扑排序，以判断是否存在负权回路，但这不是我们讨论的重点。我们用数组d记录每个结点的最短路径估计值，而且用邻接表来存储图G。我们采取的方法是动态逼近法：设立一个先进先出的队列用来保存待优化的结点，优化时每次取出队首结点u，并且用u点当前的最短路径估计值对离开u点所指向的结点v进行松弛操作，如果v点的最短路径估计值有所调整，且v点不在当前的队列中，就将v点放入队尾。这样不断从队列中取出结点来进行松弛操作，直至队列空为止。定理: 只要最短路径存在，上述SPFA算法必定能求出最小值。\n\n<!--more-->\n\n## 算法简介\n- 建立一个带权值的邻接矩阵，然后定义`dis[N]`表示源点到其他点的距离，然后将源点入队。\n- 当队列不空时：取出队列中第一个元素，遍历它的出度`edge`，如果以该有向边`edge`为中间边到达某个节点的距离小于原本的距离(`dis[x] + edge < dis[y]`)，则将这个点`y`入队，同时进行松弛操作。\n- 当一个点入队超过`n`次时，表明他经过了`n`次松弛操作。说明存在负环。\n\n## 代码示例\n```cpp\nstruct Edge{\n\tint wi;\t\t//权值\n\tint to;\t\t//边终点\n};\nint V_NUM;\t\t\t\t//节点数\nint E_NUM;\t\t\t\t//边数\nvector <Edge> v[M];\t\t//邻接表式\nint dis[M];\t\t\t\t//到i点的距离\nint times[M];\t\t\t//i点入队的次数\nint is_push[M];\t\t\t//i点是否入队\n\nbool spfa(int st){\n\tint i;\n\tqueue <int> qu;\n\tfor (int i = 0; i < V_NUM; ++i){\n\t\tif(i==st)dis[i] = 0;\n\t\telse dis[i] = VMAX;\n\t\ttimes[i] = 0;\n\t\tis_push[i] = 0;\n\t}\n\tqu.push(st);\n\ttimes[st] = 1;\n\tis_push[st] = 1;\n\twhile(!qu.empty()){\n\t\tint temp_v = qu.front();\n\t\tint n_vi = (int)v[temp_v].size();\t\t//该点的出度\n\t\tfor(i=0;i<n_vi;i++){\n\t\t\tEdge *e = &v[temp_v][i];\t\t\t//取出一条边\n\t\t\tif(dis[e->to]>(dis[temp_v]+e->wi)){\t//满足松弛条件\n\t\t\t\tdis[e->to] = dis[temp_v]+e->wi;\n\t\t\t\tqu.push(e->to);\n\t\t\t\ttimes[e->to]++;\n\t\t\t\tis_push[e->to] = 1;\n\t\t\t\tif(times[e->to]>V_NUM){\t\t\t//入队次数爆表，存在负环\n\t\t\t\t\twhile(!qu.empty())qu.pop();\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tqu.pop();\n\t\tis_push[temp_v] = 0;\n\t}\n\treturn 1;\n}\n```\n\n## 再次补充\n虽然介绍越来越短了，但是相信大家，看到代码后还是可以自己看懂的哈。","slug":"33","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekiit002pro5ucf020wo0"},{"title":"bellman-ford算法","date":"2015-10-04T06:27:06.000Z","_content":"\n以前说的都是不存在负环的最短路径算法，但是如果一旦边的权值出现负数，则循环将无限进行。所以我们需要一种算法来判断是否出现负环。\n\n下面就简单介绍一下Bellman-ford 算法。\n\n<!--more-->\n\n## 主要思想\n求某点到其他点的最短路径，如果经过一条边`n-1`次后，再次进过还可以减小路径的权值，则说明存在负环。\n\n原文是这样的。\n>Bellman-ford算法是求含负权图的单源最短路径算法，效率很低，但代码很容易写。即进行持续地松弛，每次松弛把每条边都更新一下，若n-1次松弛后还能更新，则说明图中有负环，无法得出结果，否则就成功完成。\n\n## 算法简介\n- 首先确定一个源点（起始点），然后定义`dis[N]`表示源点到其他点的距离。还有定义一个边集。\n- 使用两个循环来对边集中各个边进行一次松弛操作。\n- 循环结束后查看是否还可以进行松弛，如果仍然可以，则存在负环。\n\n## 算法实现\n```cpp\nstruct Edge{\n\tint v,u;\n\tint w;\n}edge[M+1];\nbool bellman_ford(int st){  \n    for(int i = 1; i <= N; ++i)\n        dis[i] = INF;\n\tdis[st] = 0;\n    for(int i = 1; i <= N - 1; ++i)  \n        for(int j = 1; j <= M; ++j)  \n            if(dis[edge[j].v] > dis[edge[j].u] + edge[j].w){  \n                dis[edge[j].v] = dis[edge[j].u] + edge[j].w;\n            }  \n    bool flag = 1;\n    for(int i = 1; i <= edgenum; ++i)  \n    \tif(dis[edge[i].v] > dis[edge[i].u] + edge[i].w)  {\n\t\t\tflag = 0;  \n\t\t\tbreak;\n\t\t}  \n\treturn flag;  \n}  \n```\n\n## 补充一下\n对于这个算法，说的有点简略，不过仔细琢磨一下代码，也就懂了。啊哈哈哈哈。","source":"_posts/32.md","raw":"title: bellman-ford算法\ndate: 2015-10-04 14:27:06\ncategories: 编程与算法\ntags: [最短路,ACM,图论,bellman-ford]\n---\n\n以前说的都是不存在负环的最短路径算法，但是如果一旦边的权值出现负数，则循环将无限进行。所以我们需要一种算法来判断是否出现负环。\n\n下面就简单介绍一下Bellman-ford 算法。\n\n<!--more-->\n\n## 主要思想\n求某点到其他点的最短路径，如果经过一条边`n-1`次后，再次进过还可以减小路径的权值，则说明存在负环。\n\n原文是这样的。\n>Bellman-ford算法是求含负权图的单源最短路径算法，效率很低，但代码很容易写。即进行持续地松弛，每次松弛把每条边都更新一下，若n-1次松弛后还能更新，则说明图中有负环，无法得出结果，否则就成功完成。\n\n## 算法简介\n- 首先确定一个源点（起始点），然后定义`dis[N]`表示源点到其他点的距离。还有定义一个边集。\n- 使用两个循环来对边集中各个边进行一次松弛操作。\n- 循环结束后查看是否还可以进行松弛，如果仍然可以，则存在负环。\n\n## 算法实现\n```cpp\nstruct Edge{\n\tint v,u;\n\tint w;\n}edge[M+1];\nbool bellman_ford(int st){  \n    for(int i = 1; i <= N; ++i)\n        dis[i] = INF;\n\tdis[st] = 0;\n    for(int i = 1; i <= N - 1; ++i)  \n        for(int j = 1; j <= M; ++j)  \n            if(dis[edge[j].v] > dis[edge[j].u] + edge[j].w){  \n                dis[edge[j].v] = dis[edge[j].u] + edge[j].w;\n            }  \n    bool flag = 1;\n    for(int i = 1; i <= edgenum; ++i)  \n    \tif(dis[edge[i].v] > dis[edge[i].u] + edge[i].w)  {\n\t\t\tflag = 0;  \n\t\t\tbreak;\n\t\t}  \n\treturn flag;  \n}  \n```\n\n## 补充一下\n对于这个算法，说的有点简略，不过仔细琢磨一下代码，也就懂了。啊哈哈哈哈。","slug":"32","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekiiz002zro5uij7qrtrv"},{"title":"Dijkstra算法","date":"2015-10-02T08:57:18.000Z","_content":"\n迪杰斯特拉算法是由荷兰计算机科学家狄克斯特拉于1959 年提出的，因此又叫狄克斯特拉算法。是从一个顶点到其余各顶点的最短路径算法，解决的是有向图中最短路径问题。迪杰斯特拉算法主要特点是以起始点为中心向外层层扩展，直到扩展到终点为止。\n\n说的好厉害的样子，其实就是求有向图中单源最短路径的问题。\n\n其实理解`floyd`或者贪心最小生成树后，应该很容易理解这个算法的。\n<!--more-->\n\n## 核心思路\n核心思想是引入两个向量(数组)去记录源到各点的最短距离，和该点是否被访问过。\n\n## 算法简介\n首先定义一个数组`dis[N]`表示源点到各点的距离。\n再定义一个数组`visit[N]`表示该点是否被访问。\n\n首先将源点`st`标记为访问`visit[st] := true`,然后将权值矩阵的一行`map[st]`赋值给`dis`.\n\n- 寻找`dis`中最小且未被访问过的点`k`,即`dis[k] == min{dis} && visit[k] == false`.\n- 以`k`点为中间点，根据松弛方程` dis[i]:= min{ map[st,k] + map[k,i], map[st,i] }`更新向量`dis`.\n- 将`k`点标记为访问`visit[k] := true`\n\n重复上述过程直到所有的点被标记完，或者有的点不可到达跳出循环。\n\n## 算法实现\n还是写C++吧：\n```cpp\nconst int N = 105;\nconst int INF = 0x1f1f1f1f;\n\nint map[N][N];\nint dis[N];\nbool visit[N];\n\nvoid dijkstra(int st,int n){\n\tmemset(dis,INF,sizeof(dis));\n\tmemset(visit,0,sizeof(visit));\n\tfor(int i=1;i<=n;i++){\n\t\tdis[i] = map[st][i];\n\t}\n\tdis[st] = 0;\n\tvisit[st] = 1;\n\tint minx = INF;\n\tint index = st;\n\tfor(int i=1;i<=n;i++){\n\t\tminx = INF;\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(!visit[j] && dis[j] < minx){\n\t\t\t\tminx = dis[j];\n\t\t\t\tindex = j;\n\t\t\t}\n\t\t}\n\t\tif(minx == INF)\n\t\t\tbreak;\n\t\tvisit[index] = 1;\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(dis[j] > map[index][j] + minx){\n\t\t\t\tdis[j] = map[index][j] + minx;\n\t\t\t}\n\t\t}\n\t}\n}\n```","source":"_posts/31.md","raw":"title: Dijkstra算法\ndate: 2015-10-02 16:57:18\ncategories: 编程与算法\ntags: [最短路,ACM,图论,dijkstra]\n---\n\n迪杰斯特拉算法是由荷兰计算机科学家狄克斯特拉于1959 年提出的，因此又叫狄克斯特拉算法。是从一个顶点到其余各顶点的最短路径算法，解决的是有向图中最短路径问题。迪杰斯特拉算法主要特点是以起始点为中心向外层层扩展，直到扩展到终点为止。\n\n说的好厉害的样子，其实就是求有向图中单源最短路径的问题。\n\n其实理解`floyd`或者贪心最小生成树后，应该很容易理解这个算法的。\n<!--more-->\n\n## 核心思路\n核心思想是引入两个向量(数组)去记录源到各点的最短距离，和该点是否被访问过。\n\n## 算法简介\n首先定义一个数组`dis[N]`表示源点到各点的距离。\n再定义一个数组`visit[N]`表示该点是否被访问。\n\n首先将源点`st`标记为访问`visit[st] := true`,然后将权值矩阵的一行`map[st]`赋值给`dis`.\n\n- 寻找`dis`中最小且未被访问过的点`k`,即`dis[k] == min{dis} && visit[k] == false`.\n- 以`k`点为中间点，根据松弛方程` dis[i]:= min{ map[st,k] + map[k,i], map[st,i] }`更新向量`dis`.\n- 将`k`点标记为访问`visit[k] := true`\n\n重复上述过程直到所有的点被标记完，或者有的点不可到达跳出循环。\n\n## 算法实现\n还是写C++吧：\n```cpp\nconst int N = 105;\nconst int INF = 0x1f1f1f1f;\n\nint map[N][N];\nint dis[N];\nbool visit[N];\n\nvoid dijkstra(int st,int n){\n\tmemset(dis,INF,sizeof(dis));\n\tmemset(visit,0,sizeof(visit));\n\tfor(int i=1;i<=n;i++){\n\t\tdis[i] = map[st][i];\n\t}\n\tdis[st] = 0;\n\tvisit[st] = 1;\n\tint minx = INF;\n\tint index = st;\n\tfor(int i=1;i<=n;i++){\n\t\tminx = INF;\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(!visit[j] && dis[j] < minx){\n\t\t\t\tminx = dis[j];\n\t\t\t\tindex = j;\n\t\t\t}\n\t\t}\n\t\tif(minx == INF)\n\t\t\tbreak;\n\t\tvisit[index] = 1;\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(dis[j] > map[index][j] + minx){\n\t\t\t\tdis[j] = map[index][j] + minx;\n\t\t\t}\n\t\t}\n\t}\n}\n```","slug":"31","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekij20036ro5uhq09o0mk"},{"title":"Floyd算法","date":"2015-10-02T07:00:54.000Z","_content":"\n`Floyd`算法又称为插点法，是一种用于寻找给定的加权图中多源点之间最短路径的算法。\n\n此算法由Robert W. Floyd（罗伯特·弗洛伊德）于1962年发表在“Communications of the ACM”上。同年Stephen Warshall（史蒂芬·沃舍尔）也独立发表了这个算法。Robert W．Floyd这个牛人是朵奇葩，他原本在芝加哥大学读的文学，但是因为当时美国经济不太景气，找工作比较困难，无奈之下到西屋电气公司当了一名计算机操作员，在IBM650机房值夜班，并由此开始了他的计算机生涯。\n\n<!--more-->\n\n## 核心思路\n\n`Floyd`是通过权值矩阵得到各个节点之间最短路径的方法。他的核心思路就是一个松弛方程：\n```\n map[i,j]:= min{ map[i,k] + map[k,j], map[i,j] }\n```\n`map[i,j]`表示`i`与`j`之间的路径权值。\n\n枚举所有的节点`k 1->n`，将该节点(`k`)当成任意两点(`i 1->n , j 1->n`)的中间节点，判断是否会降低路径的权值(`map[i,j],map[i,k]+map[k,j]`)。\n\n通过这种方法枚举一遍，遍可以得到权值最小的权值矩阵了。\n\n## 算法举例\n\n有向图：\n![graph][1]\n\n然后建立一个权值矩阵：\n```\n\tA\tB\tC\tD\nA\t0\t2\t6\t4\t\nB\tx\t0\t3\tx\nC\t7\tx\t0\t1\nD\t5\tx\t12\t0\n```\n首先枚举`A`为中间点，开始进行第一轮松弛，\n之后得到新的矩阵：\n```\n0\t2\t6\t4\nx\t0\t3\tx\n7\t9\t0\t1\n5\t7\t11\t0\n```\n此时更新了`C->B`,`D->B`,`D->C`的权值。\n\n然后以`B`为中间点，继续进行松弛：\n```\n0\t2\t5\t4\nx\t0\t3\tx\n7\t9\t0\t1\n5\t7\t10\t0\n```\n以`C`为中间点，继续松弛:\n```\n0\t2\t5\t4\n10\t0\t3\t4\n7 \t9\t0\t1\n5\t7\t10\t0\n```\n最后以`D`为中间的：\n```\n0\t2\t5\t4\n9\t0\t3\t4\n6\t8\t0\t1\n5\t7\t10\t0\n```\n最后得到的新的权值矩阵就是各个节点之间的最短路径。\n\n## 算法实现\n这里就写C&&C++的吧，只有三个循环，其实很简单的：\n```cpp\nvoid floyd(int n){\n\tfor(int t=1; t<=n; t++)  \n\t\tfor(int i=1; i<=n; i++)  \n\t\t\tfor(int j=1; j<=n; j++)  \n\t\t\t\tdis[i][j]=min(dis[i][j],dis[i][t]+dis[t][j]);  \n}\n```\n[1]: http://i13.tietuku.com/12b939b983e4b7e4.png","source":"_posts/30.md","raw":"title: Floyd算法\ndate: 2015-10-02 15:00:54\ncategories: 编程与算法\ntags: [最短路,ACM,图论,floyd]\n---\n\n`Floyd`算法又称为插点法，是一种用于寻找给定的加权图中多源点之间最短路径的算法。\n\n此算法由Robert W. Floyd（罗伯特·弗洛伊德）于1962年发表在“Communications of the ACM”上。同年Stephen Warshall（史蒂芬·沃舍尔）也独立发表了这个算法。Robert W．Floyd这个牛人是朵奇葩，他原本在芝加哥大学读的文学，但是因为当时美国经济不太景气，找工作比较困难，无奈之下到西屋电气公司当了一名计算机操作员，在IBM650机房值夜班，并由此开始了他的计算机生涯。\n\n<!--more-->\n\n## 核心思路\n\n`Floyd`是通过权值矩阵得到各个节点之间最短路径的方法。他的核心思路就是一个松弛方程：\n```\n map[i,j]:= min{ map[i,k] + map[k,j], map[i,j] }\n```\n`map[i,j]`表示`i`与`j`之间的路径权值。\n\n枚举所有的节点`k 1->n`，将该节点(`k`)当成任意两点(`i 1->n , j 1->n`)的中间节点，判断是否会降低路径的权值(`map[i,j],map[i,k]+map[k,j]`)。\n\n通过这种方法枚举一遍，遍可以得到权值最小的权值矩阵了。\n\n## 算法举例\n\n有向图：\n![graph][1]\n\n然后建立一个权值矩阵：\n```\n\tA\tB\tC\tD\nA\t0\t2\t6\t4\t\nB\tx\t0\t3\tx\nC\t7\tx\t0\t1\nD\t5\tx\t12\t0\n```\n首先枚举`A`为中间点，开始进行第一轮松弛，\n之后得到新的矩阵：\n```\n0\t2\t6\t4\nx\t0\t3\tx\n7\t9\t0\t1\n5\t7\t11\t0\n```\n此时更新了`C->B`,`D->B`,`D->C`的权值。\n\n然后以`B`为中间点，继续进行松弛：\n```\n0\t2\t5\t4\nx\t0\t3\tx\n7\t9\t0\t1\n5\t7\t10\t0\n```\n以`C`为中间点，继续松弛:\n```\n0\t2\t5\t4\n10\t0\t3\t4\n7 \t9\t0\t1\n5\t7\t10\t0\n```\n最后以`D`为中间的：\n```\n0\t2\t5\t4\n9\t0\t3\t4\n6\t8\t0\t1\n5\t7\t10\t0\n```\n最后得到的新的权值矩阵就是各个节点之间的最短路径。\n\n## 算法实现\n这里就写C&&C++的吧，只有三个循环，其实很简单的：\n```cpp\nvoid floyd(int n){\n\tfor(int t=1; t<=n; t++)  \n\t\tfor(int i=1; i<=n; i++)  \n\t\t\tfor(int j=1; j<=n; j++)  \n\t\t\t\tdis[i][j]=min(dis[i][j],dis[i][t]+dis[t][j]);  \n}\n```\n[1]: http://i13.tietuku.com/12b939b983e4b7e4.png","slug":"30","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekij6003dro5utssszpub"},{"title":"初学python（一）语法","date":"2015-08-24T13:14:00.000Z","_content":"本来是想学ruby的，后来感觉到python的社区更完善一些，等对于这些脚本语言有了基础，再去学习其他。\n这次学的是python的语法。\n\n\n<!--more-->\n\n\n1、标识符：这个不用多说，和其他的语言差不多，以字母(包括下划线)开头。\n2、保留字，一般也不会触碰到的吧：\n\n    'False', 'None', 'True', 'and', 'as', 'assert', 'break', 'class', 'continue', 'def', 'del',             'elif', 'else', 'except', 'finally', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield'\n\n3、注释，单行用`#`，这个不用多说，多行用`'''`或`\"\"\"`，有点意思，不过还是可以理解的。\n4、缩进，用缩进表示代码块，还好有代码格式强迫症，要不一不留神是不是就不在同一个块中了。缩进的空格数一样的话，表示语句处于同一个代码块中。\n5、数据类型，整数、长整数、浮点数、复数。\n6、字符串，单引号和多引号完全相同、三个引号可以指定一个多行字符串、'\\'是转义字符、R或r是自然字符串、字符串是不可变的！看到这个简直毁三观，赶紧写个代码调试一下。\n\n    print (\"Hello World!\")\n    #我是单行注释\n    '''\n    我是多行注释\n    我是多行注释\n    我是多行注释\n    我是多行注释\n    '''\n    string1 = '我是单行字符串'\n    string2 = ''' 我是多行字符串\n    我是多行字符串\n    \t\t\t多行'''\n    string3 = '我是要转义的字符串\\n'\n    string4 = r'我是不想转义的字符串\\n'\n    print (string1)\n    print (string2)\n    print (string3)\n    print (string4)\n    string1 = '听说字符串是不可变的'\n    print (string1)\n输出结果：\n\n    Hello World!\n    我是单行字符串\n     我是多行字符串\n    我是多行字符串\n    \t\t\t多行\n    我是要转义的字符串\n    \n    我是不想转义的字符串\\n\n    听说字符串是不可变的\n这个不可变并不是指的不可修改，应该是修改之后生成了新的字符串。\n","source":"_posts/3.md","raw":"title: 初学python（一）语法\ndate: 2015-08-24 21:14:00\ncategories: 编程与算法\ntags: [python,编程]\n---\n本来是想学ruby的，后来感觉到python的社区更完善一些，等对于这些脚本语言有了基础，再去学习其他。\n这次学的是python的语法。\n\n\n<!--more-->\n\n\n1、标识符：这个不用多说，和其他的语言差不多，以字母(包括下划线)开头。\n2、保留字，一般也不会触碰到的吧：\n\n    'False', 'None', 'True', 'and', 'as', 'assert', 'break', 'class', 'continue', 'def', 'del',             'elif', 'else', 'except', 'finally', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield'\n\n3、注释，单行用`#`，这个不用多说，多行用`'''`或`\"\"\"`，有点意思，不过还是可以理解的。\n4、缩进，用缩进表示代码块，还好有代码格式强迫症，要不一不留神是不是就不在同一个块中了。缩进的空格数一样的话，表示语句处于同一个代码块中。\n5、数据类型，整数、长整数、浮点数、复数。\n6、字符串，单引号和多引号完全相同、三个引号可以指定一个多行字符串、'\\'是转义字符、R或r是自然字符串、字符串是不可变的！看到这个简直毁三观，赶紧写个代码调试一下。\n\n    print (\"Hello World!\")\n    #我是单行注释\n    '''\n    我是多行注释\n    我是多行注释\n    我是多行注释\n    我是多行注释\n    '''\n    string1 = '我是单行字符串'\n    string2 = ''' 我是多行字符串\n    我是多行字符串\n    \t\t\t多行'''\n    string3 = '我是要转义的字符串\\n'\n    string4 = r'我是不想转义的字符串\\n'\n    print (string1)\n    print (string2)\n    print (string3)\n    print (string4)\n    string1 = '听说字符串是不可变的'\n    print (string1)\n输出结果：\n\n    Hello World!\n    我是单行字符串\n     我是多行字符串\n    我是多行字符串\n    \t\t\t多行\n    我是要转义的字符串\n    \n    我是不想转义的字符串\\n\n    听说字符串是不可变的\n这个不可变并不是指的不可修改，应该是修改之后生成了新的字符串。\n","slug":"3","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekija003kro5ujvfxjk3q"},{"title":"河海大学ACM专题第六周-最短路题解","date":"2015-10-02T02:22:23.000Z","_content":"本周题目主要是联系最短路径的几个算法。主要是`floyd`,`dijkstra`和`Bellman-Ford`,最后一题也可以用`spfa`.\n\n这些算法会重新利用其他文章去解释。\n\n简单说一下这些算法的用法。\n\n`floyd`是用来计算图中任意一点到其他点的最短路径。写起来也比较简单，时间复杂度为`O(n^3)`.\n\n`dijkstra`是计算单源最短路径的算法，也就是相当于固定了起点。所以时间复杂度降为`O(n^2)`.\n\n以上两个算法面临权值为负时便无法正常的运行下去，所以为了处理出现负环等情况。使用下面的算法。\n`Bellman-Ford`简单暴力的处理相关问题，没有做任何优化。写起来很简单，用起来也不错。时间复杂度大概为`O(ne)`.\n`spfa`一般是在上面的基础上加上了队列，有的好像加的是优先队列。反正就是效率大大提高就对了。时间复杂度为`O(ek)`.据说`k`很小。其实我并不知道有多小。\n\n<!--more-->\n\n下面来解释一下题目。\n\n## problem A poj1125\n本题是标准的弗洛伊德。题意是，在一个有向图中，找出从一个点发送消息到其他所有点耗时最小的点和时间。\n\n输入样例第一个`n`表示图中点的个数。\n然后下面有`n`行数，第`i`行第一个数`m`表示：第`i`个点的出度为`m`。然后`m`后面有`m`对数，每对数有两个值`(x,v)`，表示`i -> x`的耗时为`v`。\n\n输入完成后就可以建立一个有向图。然后对这个图使用`Floyd`,就可以得到每个点到其他点的最短路径。\n\n然后使用双重循环去找到耗时最小的点和时间即可。\n\n核心就是一个`Floyd`：\n```cpp\nconst int N = 105;\nint dis[N][N];\nvoid floyd(int n){\n\tfor(int t=1; t<=n; t++)  \n\t\tfor(int i=1; i<=n; i++)  \n\t\t\tfor(int j=1; j<=n; j++)  \n\t\t\t\tdis[i][j]=min(dis[i][j],dis[i][t]+dis[t][j]);  \n}\n```\n\n## problem B poj3615\n本题同样是floyd，不过需改修改松弛方程。\n\n`dis[i][j]=min(dis[i][j],max(dis[i][t],dis[t][j]));`\n\n大概题意如下：\n\n给你n个站，有m条边，每条边有一个耗费值。\n问你如果A站到B站可通，选一条路，求路径上的相邻两站的耗费值的最大值，让这个值最小，输出。\n否则输出-1.\n\n其实也就是先用`floyd`预处理，然后直接去查询。一般遇到多组查询都可以考虑先预处理然后离线查询。\n\n## problem C poj1847\n该题就变成了单源的最短路径了，所以可以使用`dijkstra`去求解。\n\n首先解释一下题意。就是火车从一点开到另外一点。在中途会经过火车站，每个站点有多个出口，\n其中有一个默认的方向，如果走默认方向则不需要消耗，如果走其他方向便需要进行一次切换。\n问最少切换几次可以到达终点。到不了输出`-1`.\n\n这道题可以进行一些理解，就是，默认方向权值为0，而其他方向权值为1.构造一个有向图。\n\n输入`n a b`,`n`表示车站数，`a`表示出发站点，`b`表示终点。\n下面有`n`行，每行第一个数为`m`,后面紧跟`m`个数，其中第一个是默认方向，其他为需要切换的方向。\n\n根据输入建立了有向图。然后对图使用`dijkstra`，最后得到最短路径。\n\n代码也不难，注意初始化就好。\n```cpp\nconst int N = 105;\nconst int INF = 0x1f1f1f1f;\n\nint map[N][N];\nint dis[N];\nbool visit[N];\n\nvoid dijkstra(int st,int n){\n\tmemset(dis,INF,sizeof(dis));\n\tmemset(visit,0,sizeof(visit));\n\tfor(int i=1;i<=n;i++){\n\t\tdis[i] = map[st][i];\n\t}\n\tdis[st] = 0;\n\tvisit[st] = 1;\n\tint minx = INF;\n\tint index = st;\n\tfor(int i=1;i<=n;i++){\n\t\tminx = INF;\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(!visit[j] && dis[j] < minx){\n\t\t\t\tminx = dis[j];\n\t\t\t\tindex = j;\n\t\t\t}\n\t\t}\n\t\tif(minx == INF)\n\t\t\tbreak;\n\t\tvisit[index] = 1;\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(dis[j] > map[index][j] + minx){\n\t\t\t\tdis[j] = map[index][j] + minx;\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n##　problem D poj1502\n这道题也是一个普通的`dijkstra`,具体题意同`problem A`,只不过变成单源的了。但是因为数据并不强所以用`floyd`同样可以过。\n\n输入的不是常规输入，而是直接按照邻接三角矩阵给出(`x`表示正无穷)。例如：\n```cpp\n0   50 30 100 10\n50  0  5  20  x\n30  5  0  50  x\n100 20 50 0   10\n10  x  x  10  0\n```\n输入中把`0`忽略。\n\n还有就是在杭电平台是可以使用`atoi()`函数的，所以不要定义和他名字相同的函数，否则会`RE`。\n\n## problem E poj1860\n本题就是会出现负环(正环)的题目，好像用`dijkstra`加上优化也可以过，不过更通用的还是用`Bellman-Ford`或`spfa`。\n\n本体大意为：有`n`种货币(点)和2*`m`个货币兑换点(边)，边`(a -> b)`的权值为`(V-Cab) × Rab`.我们需要找到是否存在一种兑换使我们的本金不断增加。\n\n其实就是找到一个不断增加的回路，也就是说找到权值最大路径。如果经过`n-1`次循环后，仍然满足松弛条件，则该图存在负环(正环)。也就是满足我们需要的条件，输出`YES`.\n\n大概就是这个样子的。具体算法详见其他文章。","source":"_posts/29.md","raw":"title: 河海大学ACM专题第六周-最短路题解\ndate: 2015-10-02 10:22:23\ncategories: 编程与算法\ntags: [最短路,ACM,图论]\n---\n本周题目主要是联系最短路径的几个算法。主要是`floyd`,`dijkstra`和`Bellman-Ford`,最后一题也可以用`spfa`.\n\n这些算法会重新利用其他文章去解释。\n\n简单说一下这些算法的用法。\n\n`floyd`是用来计算图中任意一点到其他点的最短路径。写起来也比较简单，时间复杂度为`O(n^3)`.\n\n`dijkstra`是计算单源最短路径的算法，也就是相当于固定了起点。所以时间复杂度降为`O(n^2)`.\n\n以上两个算法面临权值为负时便无法正常的运行下去，所以为了处理出现负环等情况。使用下面的算法。\n`Bellman-Ford`简单暴力的处理相关问题，没有做任何优化。写起来很简单，用起来也不错。时间复杂度大概为`O(ne)`.\n`spfa`一般是在上面的基础上加上了队列，有的好像加的是优先队列。反正就是效率大大提高就对了。时间复杂度为`O(ek)`.据说`k`很小。其实我并不知道有多小。\n\n<!--more-->\n\n下面来解释一下题目。\n\n## problem A poj1125\n本题是标准的弗洛伊德。题意是，在一个有向图中，找出从一个点发送消息到其他所有点耗时最小的点和时间。\n\n输入样例第一个`n`表示图中点的个数。\n然后下面有`n`行数，第`i`行第一个数`m`表示：第`i`个点的出度为`m`。然后`m`后面有`m`对数，每对数有两个值`(x,v)`，表示`i -> x`的耗时为`v`。\n\n输入完成后就可以建立一个有向图。然后对这个图使用`Floyd`,就可以得到每个点到其他点的最短路径。\n\n然后使用双重循环去找到耗时最小的点和时间即可。\n\n核心就是一个`Floyd`：\n```cpp\nconst int N = 105;\nint dis[N][N];\nvoid floyd(int n){\n\tfor(int t=1; t<=n; t++)  \n\t\tfor(int i=1; i<=n; i++)  \n\t\t\tfor(int j=1; j<=n; j++)  \n\t\t\t\tdis[i][j]=min(dis[i][j],dis[i][t]+dis[t][j]);  \n}\n```\n\n## problem B poj3615\n本题同样是floyd，不过需改修改松弛方程。\n\n`dis[i][j]=min(dis[i][j],max(dis[i][t],dis[t][j]));`\n\n大概题意如下：\n\n给你n个站，有m条边，每条边有一个耗费值。\n问你如果A站到B站可通，选一条路，求路径上的相邻两站的耗费值的最大值，让这个值最小，输出。\n否则输出-1.\n\n其实也就是先用`floyd`预处理，然后直接去查询。一般遇到多组查询都可以考虑先预处理然后离线查询。\n\n## problem C poj1847\n该题就变成了单源的最短路径了，所以可以使用`dijkstra`去求解。\n\n首先解释一下题意。就是火车从一点开到另外一点。在中途会经过火车站，每个站点有多个出口，\n其中有一个默认的方向，如果走默认方向则不需要消耗，如果走其他方向便需要进行一次切换。\n问最少切换几次可以到达终点。到不了输出`-1`.\n\n这道题可以进行一些理解，就是，默认方向权值为0，而其他方向权值为1.构造一个有向图。\n\n输入`n a b`,`n`表示车站数，`a`表示出发站点，`b`表示终点。\n下面有`n`行，每行第一个数为`m`,后面紧跟`m`个数，其中第一个是默认方向，其他为需要切换的方向。\n\n根据输入建立了有向图。然后对图使用`dijkstra`，最后得到最短路径。\n\n代码也不难，注意初始化就好。\n```cpp\nconst int N = 105;\nconst int INF = 0x1f1f1f1f;\n\nint map[N][N];\nint dis[N];\nbool visit[N];\n\nvoid dijkstra(int st,int n){\n\tmemset(dis,INF,sizeof(dis));\n\tmemset(visit,0,sizeof(visit));\n\tfor(int i=1;i<=n;i++){\n\t\tdis[i] = map[st][i];\n\t}\n\tdis[st] = 0;\n\tvisit[st] = 1;\n\tint minx = INF;\n\tint index = st;\n\tfor(int i=1;i<=n;i++){\n\t\tminx = INF;\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(!visit[j] && dis[j] < minx){\n\t\t\t\tminx = dis[j];\n\t\t\t\tindex = j;\n\t\t\t}\n\t\t}\n\t\tif(minx == INF)\n\t\t\tbreak;\n\t\tvisit[index] = 1;\n\t\tfor(int j=1;j<=n;j++){\n\t\t\tif(dis[j] > map[index][j] + minx){\n\t\t\t\tdis[j] = map[index][j] + minx;\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n##　problem D poj1502\n这道题也是一个普通的`dijkstra`,具体题意同`problem A`,只不过变成单源的了。但是因为数据并不强所以用`floyd`同样可以过。\n\n输入的不是常规输入，而是直接按照邻接三角矩阵给出(`x`表示正无穷)。例如：\n```cpp\n0   50 30 100 10\n50  0  5  20  x\n30  5  0  50  x\n100 20 50 0   10\n10  x  x  10  0\n```\n输入中把`0`忽略。\n\n还有就是在杭电平台是可以使用`atoi()`函数的，所以不要定义和他名字相同的函数，否则会`RE`。\n\n## problem E poj1860\n本题就是会出现负环(正环)的题目，好像用`dijkstra`加上优化也可以过，不过更通用的还是用`Bellman-Ford`或`spfa`。\n\n本体大意为：有`n`种货币(点)和2*`m`个货币兑换点(边)，边`(a -> b)`的权值为`(V-Cab) × Rab`.我们需要找到是否存在一种兑换使我们的本金不断增加。\n\n其实就是找到一个不断增加的回路，也就是说找到权值最大路径。如果经过`n-1`次循环后，仍然满足松弛条件，则该图存在负环(正环)。也就是满足我们需要的条件，输出`YES`.\n\n大概就是这个样子的。具体算法详见其他文章。","slug":"29","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekijf003qro5uro3am6ji"},{"title":"nginx+uwsgi+django部署","date":"2015-09-15T23:35:29.000Z","_content":"关于如何在生产服务器上部署nginx+uwsgi+django，最近遇到了不少坑啊，不过总算解决了，不用通过开发服务器进行访问了。\n下面就把最近遇到的坑说一说，同时捋一遍流程。\n\n<!--more-->\n\n声明，所有操作实在ubuntu服务器上进行的。\n\n## django\n### 安装django\n```\nsudo pip install django\nsudo easy_install django\n```\n以上两种方法都可以，建议不要用`apt-get`那个版本太低了，会出现不可预计的错误。\n\n### 创建django项目\n在目录`/root/dev/`下面执行命令\n```\ndjango-admin startproject myproject\n```\n那个`myproject`换成自己的项目名.\n然后进入`／root/dev/myproject`下，创建一个应用\n```\npython manage.py startapp myapp\n```\n然后就是编写`djiango`的代码了。这里就不多说了。网上很多教程的。\n\n### 使用开发服务器运行\n\n关于如何调试django项目，只要在`／root/dev/myproject`下执行\n```\npython manage.py runserver 0.0.0.0:8000\n```\n\n## uwsgi\n### 安装uwsgi\n```\nsudo apt-get install python-dev\nsudo pip install uwsgi \n```\n建议也不要使用`apt-get`那个版本也是过低，出现了不可预知的错误。\n\n### 运行uwsgi\n然后在`app`目录下创建一个文件`wsgi.py`，即`／root/dev/myproject/myapp/wsgi.py`\n在文件中写入：\n```\nimport os\n\nfrom django.core.wsgi import get_wsgi_application\nos.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"myproject.settings\")\napplication = get_wsgi_application()\n```\n注意要修改你的项目名。\n完成后，便可以通过`uwsgi`去跑`django`\n```\nuwsgi --http :8000 --chdir /root/dev/myproject  --module myapp.wsgi\n```\n当我们访问网站的时候发现我们的静态资源全部找不到了，这里我们就要用到`nginx`了。\n当然我们之后要使用`unix socket`去代替它的端口，因为它要和`nginx`进行通信。\n\n## nginx\n### 安装nginx\n```\nsudo apt-get install nginx\n```\n安装完成后可以访问`127.0.0.1`来查看是否启动。\n\n### 配置文件\n然后在项目的根目录`/root/dev/myproject/`下建立一个`nginx`的配置文件`myproject.conf`,在配置文件中写入:\n```\n# myproject.conf\n# @InnerAc\n\n# the upstream component nginx needs to connect to\nupstream myproject {\n    server unix:///root/dev/myproject/myapp.sock; # for a file socket\n    # server 127.0.0.1:8001; # for a web port socket (we'll use this first)\n}\n\n# configuration of the server\nserver {\n    # the port your site will be served on\n    listen      8000;\n    # the domain name it will serve for\n    server_name 127.0.0.1; # substitute your machine's IP address or FQDN\n    charset     utf-8;\n\n    # max upload size\n    client_max_body_size 75M;   # adjust to taste\n\n    # Django media\n    location /media  {\n        alias /root/dev/myproject/media;  # your Django project's media files - amend as required\n    }\n\n    location /static {\n        alias /root/dev/myproject/static; # your Django project's static files - amend as required\n    }\n\n    # Finally, send all non-media requests to the Django server.\n    location / {\n        uwsgi_pass  myproject;\n        include uwsgi_params; # the uwsgi_params file you installed\n    }\n\n}\n```\n需要修改哪里，大家应该也能看的出来，然后将这个配置文件复制或者软链接到`/etc/nginx/sites-enabled`下。我是复制的，因为我软链接过去好像有时有用，有时没用。\n```\nsudo ln -s /root/dev/myproject/myproject.conf /etc/nginx/sites-enabled\n或者\nsudo cp /root/dev/myproject/myproject.conf /etc/nginx/sites-enabled\n```\n然后重启`nginx`\n```\nsudo /etc/init.d/nginx restart\n```\n## Start\n\n配置好`nginx`后，通过上面那个`socket`去启动`uwsgi`\n```\nuwsgi --socket myapp.sock  --module myapp.wsgi --chmod-socket=666\n```\n一定要给`666`权限，否则会报错的。报错信息在`/var/log/nginx/error.log`查看。\n至此我们的生产服务器就部署完成了。\n当然，也可以写一个`xml`文件来方便启动。\n\n### xml启动uwsgi\n创建一个`django.xml`在项目根目录下：\n```\n<uwsgi>\n    <socket>/root/dev/myproject/myapp.sock</socket>\n    <chdir>/root/dev/myproject</chdir>\n    <module>myapp.wsgi</module>\n    <chmod>666</chmod>\n</uwsgi>\n```\n然后通过:\n```\nuwsgi -x django.xml\n```\n启动。\n\n### PS\n有人说，一定要用sock么？，我的回答是，可以不用，如果不用的话，仍然可以访问网站，但是你可以看一下你的静态资源的地址是不是就变了。","source":"_posts/28.md","raw":"title: nginx+uwsgi+django部署\ndate: 2015-09-16 07:35:29\ncategories: 日常维护\ntags: [django,uwsgi,nginx]\n---\n关于如何在生产服务器上部署nginx+uwsgi+django，最近遇到了不少坑啊，不过总算解决了，不用通过开发服务器进行访问了。\n下面就把最近遇到的坑说一说，同时捋一遍流程。\n\n<!--more-->\n\n声明，所有操作实在ubuntu服务器上进行的。\n\n## django\n### 安装django\n```\nsudo pip install django\nsudo easy_install django\n```\n以上两种方法都可以，建议不要用`apt-get`那个版本太低了，会出现不可预计的错误。\n\n### 创建django项目\n在目录`/root/dev/`下面执行命令\n```\ndjango-admin startproject myproject\n```\n那个`myproject`换成自己的项目名.\n然后进入`／root/dev/myproject`下，创建一个应用\n```\npython manage.py startapp myapp\n```\n然后就是编写`djiango`的代码了。这里就不多说了。网上很多教程的。\n\n### 使用开发服务器运行\n\n关于如何调试django项目，只要在`／root/dev/myproject`下执行\n```\npython manage.py runserver 0.0.0.0:8000\n```\n\n## uwsgi\n### 安装uwsgi\n```\nsudo apt-get install python-dev\nsudo pip install uwsgi \n```\n建议也不要使用`apt-get`那个版本也是过低，出现了不可预知的错误。\n\n### 运行uwsgi\n然后在`app`目录下创建一个文件`wsgi.py`，即`／root/dev/myproject/myapp/wsgi.py`\n在文件中写入：\n```\nimport os\n\nfrom django.core.wsgi import get_wsgi_application\nos.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"myproject.settings\")\napplication = get_wsgi_application()\n```\n注意要修改你的项目名。\n完成后，便可以通过`uwsgi`去跑`django`\n```\nuwsgi --http :8000 --chdir /root/dev/myproject  --module myapp.wsgi\n```\n当我们访问网站的时候发现我们的静态资源全部找不到了，这里我们就要用到`nginx`了。\n当然我们之后要使用`unix socket`去代替它的端口，因为它要和`nginx`进行通信。\n\n## nginx\n### 安装nginx\n```\nsudo apt-get install nginx\n```\n安装完成后可以访问`127.0.0.1`来查看是否启动。\n\n### 配置文件\n然后在项目的根目录`/root/dev/myproject/`下建立一个`nginx`的配置文件`myproject.conf`,在配置文件中写入:\n```\n# myproject.conf\n# @InnerAc\n\n# the upstream component nginx needs to connect to\nupstream myproject {\n    server unix:///root/dev/myproject/myapp.sock; # for a file socket\n    # server 127.0.0.1:8001; # for a web port socket (we'll use this first)\n}\n\n# configuration of the server\nserver {\n    # the port your site will be served on\n    listen      8000;\n    # the domain name it will serve for\n    server_name 127.0.0.1; # substitute your machine's IP address or FQDN\n    charset     utf-8;\n\n    # max upload size\n    client_max_body_size 75M;   # adjust to taste\n\n    # Django media\n    location /media  {\n        alias /root/dev/myproject/media;  # your Django project's media files - amend as required\n    }\n\n    location /static {\n        alias /root/dev/myproject/static; # your Django project's static files - amend as required\n    }\n\n    # Finally, send all non-media requests to the Django server.\n    location / {\n        uwsgi_pass  myproject;\n        include uwsgi_params; # the uwsgi_params file you installed\n    }\n\n}\n```\n需要修改哪里，大家应该也能看的出来，然后将这个配置文件复制或者软链接到`/etc/nginx/sites-enabled`下。我是复制的，因为我软链接过去好像有时有用，有时没用。\n```\nsudo ln -s /root/dev/myproject/myproject.conf /etc/nginx/sites-enabled\n或者\nsudo cp /root/dev/myproject/myproject.conf /etc/nginx/sites-enabled\n```\n然后重启`nginx`\n```\nsudo /etc/init.d/nginx restart\n```\n## Start\n\n配置好`nginx`后，通过上面那个`socket`去启动`uwsgi`\n```\nuwsgi --socket myapp.sock  --module myapp.wsgi --chmod-socket=666\n```\n一定要给`666`权限，否则会报错的。报错信息在`/var/log/nginx/error.log`查看。\n至此我们的生产服务器就部署完成了。\n当然，也可以写一个`xml`文件来方便启动。\n\n### xml启动uwsgi\n创建一个`django.xml`在项目根目录下：\n```\n<uwsgi>\n    <socket>/root/dev/myproject/myapp.sock</socket>\n    <chdir>/root/dev/myproject</chdir>\n    <module>myapp.wsgi</module>\n    <chmod>666</chmod>\n</uwsgi>\n```\n然后通过:\n```\nuwsgi -x django.xml\n```\n启动。\n\n### PS\n有人说，一定要用sock么？，我的回答是，可以不用，如果不用的话，仍然可以访问网站，但是你可以看一下你的静态资源的地址是不是就变了。","slug":"28","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekiji003vro5ujd3clxch"},{"title":"个人简历","date":"2015-09-15T04:31:50.000Z","_content":"\n### <center>安纪存简历<center>\n\n<!--more-->\n\n### 个人信息\n\n- 安纪存/男/1994\n- 河海大学-计算机科学与技术\n- 个人主页: http://www.eternalac.com\n- 博客主页: http://innerac.github.io\n- Github: http://github.com/innerac\n- 手机：13222765139\n- Email：anjicun@live.com\n\n---\n### 个人自述\n将在2016年毕业于河海大学计算机科学与技术专业，逻辑性强，有一定的算法与数据结构基础,现为河海大学ACM第一梯队,编码能力较强，阅读过多篇英文文献，，喜欢动手实现一些技术，参加过多个团队项目，有很强的团队意识和责任心，为人坦诚、乐观、吃苦耐劳、待人和善，人际关系良好，具有一定创新意识。\n\n---\n### 竞赛经历\n\n#### 中国大学生服务外包创新创业大赛 （ 2015年6月 ~ 2015年8月 ）\n\n##### 获得奖项 \n- 全国三等奖\n\n##### 比赛题目 \n- 虚拟学习社区\n\n##### 个人负责\n- 后台数据库逻辑编写\n- 在线运行java模块编写\n- 图片及视频资源的IO\n\n#### 全国高校云计算应用大赛 （ 2014年11月 ~ 2015年4月 ）\n\n##### 比赛题目\n- 电商图片云\n\n##### 获得奖项 \n- 全国二等奖\n- 投递专利《基于浏览器的高清图片切割和展示》\n- 投递专利《基于Mapfile海量小图片存储》\n##### 个人负责 \n- 图片的编辑处理（基于`GraphicsMagick`）\n- 基于R-Tree的高清图片裁剪与展示\n- 后台重复性代码编写\n\n\n#### 全国大学生计算机设计大赛 （ 2015年4月 ~ 2015年8月 ）\n\n##### 获得奖项 \n- 全国一等奖\n\n##### 个人负责 \n- 图片的编辑处理（基于`GraphicsMagick`）\n- 基于R-Tree的高清图片裁剪与展示\n- 后台重复性代码编写\n\n#### 全国高校云计算应用大赛 （ 2014年11月 ~ 2015年4月 ）\n\n##### 比赛题目\n- 电商图片云\n\n##### 获得奖项 \n- 全国二等奖\n- 投递专利《基于浏览器的高清图片切割和展示》\n- 投递专利《基于Mapfile海量小图片存储》\n##### 个人负责 \n- 图片的编辑处理（基于`GraphicsMagick`）\n- 基于R-Tree的高清图片裁剪与展示\n- 后台重复性代码编写\n\n#### ACM-ICPC亚洲区域赛 （ 2014年10月 ）\n\n##### 获得奖项 \n- 西安站铜牌\n\n#### 中国软件杯 （ 2014年5月 ~ 2014年8月 ）\n\n##### 比赛题目\n- 含百万/千万图元的可缩放矢量图形(SVG)的优化显示和处理\n\n##### 获得奖项 \n- 全国三等奖\n##### 个人负责 \n- 基于R-Tree的图元缩放\n\n---\n\n### 个人技能\n\n#### 开发平台\n\n- `ubuntu(Linux)`\n- `windows`\n\n#### 编程语言\n\n- `C&C++` (主要用来进行写算法或者进行信息学竞赛)\n- `Java` (主要用来进行项目编写)\n\n#### 涉猎技能\n\n- `python`\n- `neo4j`\n- `Android`\n- `ruby`\n\n---\n\n### 成长经历\n\n从大学开始接触计算机编程，第一学期学校教授了C语言。大一寒假自学java，并且使用swing写了一个超级玛丽小游戏。大一暑假自学安卓，尝试写了课程表应用。大二开始接触算法与数据结构，并且从寒假开始在poj和hdoj上进行A题，同时开始接触Linux系统。大二下学期入选学校ACM训练队，在大二暑假开始代表学校出去进行比赛。同时在大二暑假使用QT5和VS编写了图形化抓取学校教务系统成绩信息并且计算绩点的小程序。还跟随社区人员简单学习了Ruby脚本，写出了暴力破解教务系统密码的并发脚本。大三时，开始跟随学长学习关于自适应技术的知识，在期间阅读了多篇英文文献，养成了查阅文献的习惯，而不是依靠搜索引擎。\n\n---\n### 自我评价\n\n对于不了解的知识充满了渴望，希望能通过自己的努力获得这些知识和技术，同时能够通过编码实现。能够熟练的科学上网并且使用搜素引擎来准确获取有用的资料。自认为拥有较强的自学能力，和极限编程精神。\n","source":"_posts/27.md","raw":"title: 个人简历\ndate: 2015-09-15 12:31:50\ncategories: [点点滴滴]\ntags: [innerac,aboutme]\n---\n\n### <center>安纪存简历<center>\n\n<!--more-->\n\n### 个人信息\n\n- 安纪存/男/1994\n- 河海大学-计算机科学与技术\n- 个人主页: http://www.eternalac.com\n- 博客主页: http://innerac.github.io\n- Github: http://github.com/innerac\n- 手机：13222765139\n- Email：anjicun@live.com\n\n---\n### 个人自述\n将在2016年毕业于河海大学计算机科学与技术专业，逻辑性强，有一定的算法与数据结构基础,现为河海大学ACM第一梯队,编码能力较强，阅读过多篇英文文献，，喜欢动手实现一些技术，参加过多个团队项目，有很强的团队意识和责任心，为人坦诚、乐观、吃苦耐劳、待人和善，人际关系良好，具有一定创新意识。\n\n---\n### 竞赛经历\n\n#### 中国大学生服务外包创新创业大赛 （ 2015年6月 ~ 2015年8月 ）\n\n##### 获得奖项 \n- 全国三等奖\n\n##### 比赛题目 \n- 虚拟学习社区\n\n##### 个人负责\n- 后台数据库逻辑编写\n- 在线运行java模块编写\n- 图片及视频资源的IO\n\n#### 全国高校云计算应用大赛 （ 2014年11月 ~ 2015年4月 ）\n\n##### 比赛题目\n- 电商图片云\n\n##### 获得奖项 \n- 全国二等奖\n- 投递专利《基于浏览器的高清图片切割和展示》\n- 投递专利《基于Mapfile海量小图片存储》\n##### 个人负责 \n- 图片的编辑处理（基于`GraphicsMagick`）\n- 基于R-Tree的高清图片裁剪与展示\n- 后台重复性代码编写\n\n\n#### 全国大学生计算机设计大赛 （ 2015年4月 ~ 2015年8月 ）\n\n##### 获得奖项 \n- 全国一等奖\n\n##### 个人负责 \n- 图片的编辑处理（基于`GraphicsMagick`）\n- 基于R-Tree的高清图片裁剪与展示\n- 后台重复性代码编写\n\n#### 全国高校云计算应用大赛 （ 2014年11月 ~ 2015年4月 ）\n\n##### 比赛题目\n- 电商图片云\n\n##### 获得奖项 \n- 全国二等奖\n- 投递专利《基于浏览器的高清图片切割和展示》\n- 投递专利《基于Mapfile海量小图片存储》\n##### 个人负责 \n- 图片的编辑处理（基于`GraphicsMagick`）\n- 基于R-Tree的高清图片裁剪与展示\n- 后台重复性代码编写\n\n#### ACM-ICPC亚洲区域赛 （ 2014年10月 ）\n\n##### 获得奖项 \n- 西安站铜牌\n\n#### 中国软件杯 （ 2014年5月 ~ 2014年8月 ）\n\n##### 比赛题目\n- 含百万/千万图元的可缩放矢量图形(SVG)的优化显示和处理\n\n##### 获得奖项 \n- 全国三等奖\n##### 个人负责 \n- 基于R-Tree的图元缩放\n\n---\n\n### 个人技能\n\n#### 开发平台\n\n- `ubuntu(Linux)`\n- `windows`\n\n#### 编程语言\n\n- `C&C++` (主要用来进行写算法或者进行信息学竞赛)\n- `Java` (主要用来进行项目编写)\n\n#### 涉猎技能\n\n- `python`\n- `neo4j`\n- `Android`\n- `ruby`\n\n---\n\n### 成长经历\n\n从大学开始接触计算机编程，第一学期学校教授了C语言。大一寒假自学java，并且使用swing写了一个超级玛丽小游戏。大一暑假自学安卓，尝试写了课程表应用。大二开始接触算法与数据结构，并且从寒假开始在poj和hdoj上进行A题，同时开始接触Linux系统。大二下学期入选学校ACM训练队，在大二暑假开始代表学校出去进行比赛。同时在大二暑假使用QT5和VS编写了图形化抓取学校教务系统成绩信息并且计算绩点的小程序。还跟随社区人员简单学习了Ruby脚本，写出了暴力破解教务系统密码的并发脚本。大三时，开始跟随学长学习关于自适应技术的知识，在期间阅读了多篇英文文献，养成了查阅文献的习惯，而不是依靠搜索引擎。\n\n---\n### 自我评价\n\n对于不了解的知识充满了渴望，希望能通过自己的努力获得这些知识和技术，同时能够通过编码实现。能够熟练的科学上网并且使用搜素引擎来准确获取有用的资料。自认为拥有较强的自学能力，和极限编程精神。\n","slug":"27","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekijl0043ro5uvwjj1782"},{"title":"ubuntu+hexo搭建github博客","date":"2015-08-25T23:44:08.000Z","_content":"本来博客是使用阿里云的虚拟主机通过`typecho`搭建的，不过后来担心域名和主机到期的续费问题（还是穷学生），所以决定专向`github`。\n\n经过多方面的比较，最终决定使用hexo来生成静态页面。现在主要介绍一下在ubuntu先如何进行配置和部署。\n\n<!--more-->\n## 安装nodejs\n首先安装`nodejs`。有两个方法可以进行安装。\n### apt-get安装\n一个是通过ubuntu自带的包管理进行安装。不过它自带的版本可能过低，所以需要添加源：\n```shell\nsudo add-apt-repository ppa:chris-lea/node.js\nsudo apt-get update\nsudo apt-get install nodejs\n```\n同时安装所需要的依赖即可。\n\n### nvm安装\n据说这个是官方推荐的安装方法。首先你要有shell下的下载工具`curl`或者`wget`。\n然后安装`nvm`,下面两天命令二选一即可。\n```shell\ncurl https://raw.github.com/creationix/nvm/master/install.sh | sh  \nwget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh\n```\n\n等待`nvm`安装之后，然后安装`nodejs`，可以通过`nvm ls`查看版本。\n```shell\nnvm install 0.10\n```\n\n## 安装hexo\n安装完`nodejs`后就要安装`hexo`了。首先全局安装：\n```shell\nnpm install -g hexo\n```\n安装完后就可以进行部署写作了。\n首先创建一个hexo博客\n```shell\nhexo init blog_name\n```\n如果这里报错`node command not found`，那就创建一个`nodejs`到`node`的软链接：\n```shell\nsudo ln -s /usr/bin/nodejs /usr/bin/node\n```\n貌似现在`hexo-server`与`hexo`分离了，所以还要再装`hexo-server`\n```shell\nsudo npm install hexo-server --save\n```\n\n创建好博客后，就可以生成博客：\n```shell\nhexo g\n```\n然后启动服务(`debug`可以不用加)：\n```shell\nhexo s [--debug]\n```\n然后就可以在`4000`端口看到我们的页面了。\n关于如何创建一个新页面（`post`是页面类型，你自己创建的，可以不填）：\n```shell\nhexo new [post] page_name\n```\n然后你就可以在`source/_posts`目录下看到你的md文件，只要编写好这个md文件再次运行`hexo g`便可生成静态页面。\n\n## 上传到github\n在github首先创建一个仓库，`username.github.io`，请严格使用这样的命名。然后复制仓库地址，打开博客的根目录下的`_config.yml`文件，在`deploy`那里进行填写\n```yml\ndeploy:\n  type: git\n  repo: git@github.com:username/username.github.io.git\n  branch: master\n```\n然后运行：\n```shell\nhexo d\n```\n输入github账号和密码(只有第一次需要)。然后就完成了部署。","source":"_posts/26.md","raw":"title: ubuntu+hexo搭建github博客\ndate: 2015-08-26 07:44:08\ncategories: 日常维护\ntags: [hexo,github,blog]\n---\n本来博客是使用阿里云的虚拟主机通过`typecho`搭建的，不过后来担心域名和主机到期的续费问题（还是穷学生），所以决定专向`github`。\n\n经过多方面的比较，最终决定使用hexo来生成静态页面。现在主要介绍一下在ubuntu先如何进行配置和部署。\n\n<!--more-->\n## 安装nodejs\n首先安装`nodejs`。有两个方法可以进行安装。\n### apt-get安装\n一个是通过ubuntu自带的包管理进行安装。不过它自带的版本可能过低，所以需要添加源：\n```shell\nsudo add-apt-repository ppa:chris-lea/node.js\nsudo apt-get update\nsudo apt-get install nodejs\n```\n同时安装所需要的依赖即可。\n\n### nvm安装\n据说这个是官方推荐的安装方法。首先你要有shell下的下载工具`curl`或者`wget`。\n然后安装`nvm`,下面两天命令二选一即可。\n```shell\ncurl https://raw.github.com/creationix/nvm/master/install.sh | sh  \nwget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh\n```\n\n等待`nvm`安装之后，然后安装`nodejs`，可以通过`nvm ls`查看版本。\n```shell\nnvm install 0.10\n```\n\n## 安装hexo\n安装完`nodejs`后就要安装`hexo`了。首先全局安装：\n```shell\nnpm install -g hexo\n```\n安装完后就可以进行部署写作了。\n首先创建一个hexo博客\n```shell\nhexo init blog_name\n```\n如果这里报错`node command not found`，那就创建一个`nodejs`到`node`的软链接：\n```shell\nsudo ln -s /usr/bin/nodejs /usr/bin/node\n```\n貌似现在`hexo-server`与`hexo`分离了，所以还要再装`hexo-server`\n```shell\nsudo npm install hexo-server --save\n```\n\n创建好博客后，就可以生成博客：\n```shell\nhexo g\n```\n然后启动服务(`debug`可以不用加)：\n```shell\nhexo s [--debug]\n```\n然后就可以在`4000`端口看到我们的页面了。\n关于如何创建一个新页面（`post`是页面类型，你自己创建的，可以不填）：\n```shell\nhexo new [post] page_name\n```\n然后你就可以在`source/_posts`目录下看到你的md文件，只要编写好这个md文件再次运行`hexo g`便可生成静态页面。\n\n## 上传到github\n在github首先创建一个仓库，`username.github.io`，请严格使用这样的命名。然后复制仓库地址，打开博客的根目录下的`_config.yml`文件，在`deploy`那里进行填写\n```yml\ndeploy:\n  type: git\n  repo: git@github.com:username/username.github.io.git\n  branch: master\n```\n然后运行：\n```shell\nhexo d\n```\n输入github账号和密码(只有第一次需要)。然后就完成了部署。","slug":"26","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekijo0049ro5ubjzi7yl9"},{"title":"一个用python写的科学上网小脚本（下）","date":"2015-08-25T00:43:53.000Z","_content":"现在来填坑，把整个脚本的流程写出来。在上一部分已经得到了ss的账号密码，服务器地址，端口号和加密方式，接下来就是把这些信息转换成json然后运行即可\n\n\n<!--more-->\n\n## 生成json文件 ##\n这个转换json对于python来说是很方便的，因为，python的字典这个结构就和json是类似的。可以直接通过`json.dumps(dic)`进行转换。\n首先我们要确定json文件中有哪些内容。\n```json\n{\n    \"server\":\"US1.SSSERVER.PW\",\n    \"server_port\":8989,\n    \"local_port\":1080,\n    \"password\":\"01916771\",\n    \"timeout\":600,\n    \"method\":\"aes-256-cfb\"\n}\n```\n这是它所有的信息。我们需要自己固定的是本地端口号和超时。其他的都通过python的字典创建进去。\n还是直接上代码清楚：\n```python\ndic = {}\ndic['server'] = eval(repr(ip)[1:])\ndic['server_port'] = string.atoi(eval(repr(port)[1:]))\ndic['local_port'] = 1080\ndic['password'] = eval(repr(pwd)[1:])\ndic['timeout'] = 600\ndic['method'] = eval(repr(met)[1:])\nshadow = json.dumps(dic)\n```\n然后将得到的json保存：\n```python\nf = open('xxx.json','w')\nf.write(shadow)\nf.close()\n```\n这样我们就得到了json文件。\n## 开启ss连接 ##\n得到json文件后，我们就可以手动在终端进行ss连接了，但是人懒嘛，生成后直接连接多好。\n所以就在python中执行终端命令咯。如下：\n```python\nos.system('sslocal -c xxx.json > log')\n```\n基本上到这里就结束了。算是边学边练吧。","source":"_posts/25.md","raw":"title: 一个用python写的科学上网小脚本（下）\ncategories: 编程与算法\ndate: 2015-08-25 08:43:53\ntags: [python,ss]\n---\n现在来填坑，把整个脚本的流程写出来。在上一部分已经得到了ss的账号密码，服务器地址，端口号和加密方式，接下来就是把这些信息转换成json然后运行即可\n\n\n<!--more-->\n\n## 生成json文件 ##\n这个转换json对于python来说是很方便的，因为，python的字典这个结构就和json是类似的。可以直接通过`json.dumps(dic)`进行转换。\n首先我们要确定json文件中有哪些内容。\n```json\n{\n    \"server\":\"US1.SSSERVER.PW\",\n    \"server_port\":8989,\n    \"local_port\":1080,\n    \"password\":\"01916771\",\n    \"timeout\":600,\n    \"method\":\"aes-256-cfb\"\n}\n```\n这是它所有的信息。我们需要自己固定的是本地端口号和超时。其他的都通过python的字典创建进去。\n还是直接上代码清楚：\n```python\ndic = {}\ndic['server'] = eval(repr(ip)[1:])\ndic['server_port'] = string.atoi(eval(repr(port)[1:]))\ndic['local_port'] = 1080\ndic['password'] = eval(repr(pwd)[1:])\ndic['timeout'] = 600\ndic['method'] = eval(repr(met)[1:])\nshadow = json.dumps(dic)\n```\n然后将得到的json保存：\n```python\nf = open('xxx.json','w')\nf.write(shadow)\nf.close()\n```\n这样我们就得到了json文件。\n## 开启ss连接 ##\n得到json文件后，我们就可以手动在终端进行ss连接了，但是人懒嘛，生成后直接连接多好。\n所以就在python中执行终端命令咯。如下：\n```python\nos.system('sslocal -c xxx.json > log')\n```\n基本上到这里就结束了。算是边学边练吧。","slug":"25","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekijr004gro5u817as7uh"},{"title":"一个用python写的科学上网小脚本（上）","date":"2015-08-25T00:42:47.000Z","_content":"之前写过一篇科学上网的文章。关于什么是科学上网，大家都懂的。详情请见：[点我传送][1]\n但是科学上网要有ss账号啊，咱还是个穷学生，舍不得买vpn。好吧较便宜的ss账号也舍不得买。还要很多网站都提供免费的ss账号。这可是良心啊。当然啦，网站神马的就不推荐了，想用的话百度之。\n\n\n<!--more-->\n\n我们就来说说，如何不用打开网站就可完成一键获取ss账号并且完成ss连接。\n大神勿喷，这都是我自己想的，所以肯定有大神们看不上的地方，欢迎指出不足，谢谢。(毕竟刚刚接触python)\n简单来说一下实现的步骤：\n\n 1. 抓取网页\n 2. 解析网页\n 3. 得到服务器ip、端口、密码、加密方式等。\n 4. 生成json文件\n 5. 执行科学上网命令(见之前的文章 [点我传送][2])\n## 抓取网页 ##\n首先，我们应该抓取网页。这里我使用的是python的urllib2库。据说这个库很强大。\n通过这个库，使用get的方式请求了html。大部分都写了个这个函数\n```python\ndef getHtml(url):\n    page = urllib2.urlopen(url)\n    html = page.read()\n    return html\n```\n然而，当我去请求目标url的时候，并没有得到访问结果。我猜，估计是没有加浏览器头的原因吧。这真是猜的，因为好多网站防爬虫什么的会进行个判断。那我只能改进一下这个函数了，把user-agent加进去。如下：\n```python\ndef getHtml(url):\n    req = urllib2.Request(url)\n    req.add_header('User-Agent','Mozilla/5.0 (Windows NT 6.2; rv:16.0) Gecko/20100101 Firefox/16.0')\n    page = urllib2.urlopen(req)\n    html = page.read()\n    return html\n```\n再次运行脚本，成功得到html。\n这是要用到的部分：\n![aaddress.png][3]\n## 解析网页 ##\n本来想直接用正则去匹配就结束了，可是谁知道为毛成功不了。所以就用了一个看起来很吊的一个库`BeautifulSoup`，使用这个库时要先安装。\nubuntu用户直接执行`sudo apt-get install Python-bs4`即可。其他发行版的话，自行百度吧。\n导入的话就是这个咯`from bs4 import BeautifulSoup`\n然后将得到的html转换为beautifulsoup格式。同时找到相应的div\n```python\nsoup = BeautifulSoup(html)\ndiv = soup.find('div',{'class':\"col-lg-4 text-center\"})\nhfs = div.findAll('h4')\n```\n`find`就是找到第一个，`findAll`就是找到所有的然后返回一个list\n这样我们就得到包含所有想要信息的list啦。\n`hfs[i].string`就可以得到想要的字符串了。\n不过它的字符串还包括前面的说明，所以要通过正则过滤掉。\n正则如下：\n`regexAll = r'\\:(.*)'`就是把`:`后面的字符留下啦。\n比如：\n`port = re.search(regexAll,hfs[1].string).group(1)`\n就可以得到它的端口u'8989'\n因为是一个unicode所以会在前面加`u`，这个转换是我百度的，如下：\n`string.atoi(eval(repr(port)[1:]))`\n前面是用来转换为数字的，括号内是把`u`去掉的。\n现在我们已经得到所有该得到的信息了。\n后面两个先留着吧，困死了，睡午觉去。\n\n  [1]: http://www.eternalac.com/index.php/archives/7/\n  [2]: http://www.eternalac.com/index.php/archives/7/\n  [3]: http://www.eternalac.com/usr/uploads/2015/08/879485559.png","source":"_posts/24.md","raw":"title: 一个用python写的科学上网小脚本（上）\ncategories: 编程与算法\ntags: [python,ss]\ndate: 2015-08-25 08:42:47\n---\n之前写过一篇科学上网的文章。关于什么是科学上网，大家都懂的。详情请见：[点我传送][1]\n但是科学上网要有ss账号啊，咱还是个穷学生，舍不得买vpn。好吧较便宜的ss账号也舍不得买。还要很多网站都提供免费的ss账号。这可是良心啊。当然啦，网站神马的就不推荐了，想用的话百度之。\n\n\n<!--more-->\n\n我们就来说说，如何不用打开网站就可完成一键获取ss账号并且完成ss连接。\n大神勿喷，这都是我自己想的，所以肯定有大神们看不上的地方，欢迎指出不足，谢谢。(毕竟刚刚接触python)\n简单来说一下实现的步骤：\n\n 1. 抓取网页\n 2. 解析网页\n 3. 得到服务器ip、端口、密码、加密方式等。\n 4. 生成json文件\n 5. 执行科学上网命令(见之前的文章 [点我传送][2])\n## 抓取网页 ##\n首先，我们应该抓取网页。这里我使用的是python的urllib2库。据说这个库很强大。\n通过这个库，使用get的方式请求了html。大部分都写了个这个函数\n```python\ndef getHtml(url):\n    page = urllib2.urlopen(url)\n    html = page.read()\n    return html\n```\n然而，当我去请求目标url的时候，并没有得到访问结果。我猜，估计是没有加浏览器头的原因吧。这真是猜的，因为好多网站防爬虫什么的会进行个判断。那我只能改进一下这个函数了，把user-agent加进去。如下：\n```python\ndef getHtml(url):\n    req = urllib2.Request(url)\n    req.add_header('User-Agent','Mozilla/5.0 (Windows NT 6.2; rv:16.0) Gecko/20100101 Firefox/16.0')\n    page = urllib2.urlopen(req)\n    html = page.read()\n    return html\n```\n再次运行脚本，成功得到html。\n这是要用到的部分：\n![aaddress.png][3]\n## 解析网页 ##\n本来想直接用正则去匹配就结束了，可是谁知道为毛成功不了。所以就用了一个看起来很吊的一个库`BeautifulSoup`，使用这个库时要先安装。\nubuntu用户直接执行`sudo apt-get install Python-bs4`即可。其他发行版的话，自行百度吧。\n导入的话就是这个咯`from bs4 import BeautifulSoup`\n然后将得到的html转换为beautifulsoup格式。同时找到相应的div\n```python\nsoup = BeautifulSoup(html)\ndiv = soup.find('div',{'class':\"col-lg-4 text-center\"})\nhfs = div.findAll('h4')\n```\n`find`就是找到第一个，`findAll`就是找到所有的然后返回一个list\n这样我们就得到包含所有想要信息的list啦。\n`hfs[i].string`就可以得到想要的字符串了。\n不过它的字符串还包括前面的说明，所以要通过正则过滤掉。\n正则如下：\n`regexAll = r'\\:(.*)'`就是把`:`后面的字符留下啦。\n比如：\n`port = re.search(regexAll,hfs[1].string).group(1)`\n就可以得到它的端口u'8989'\n因为是一个unicode所以会在前面加`u`，这个转换是我百度的，如下：\n`string.atoi(eval(repr(port)[1:]))`\n前面是用来转换为数字的，括号内是把`u`去掉的。\n现在我们已经得到所有该得到的信息了。\n后面两个先留着吧，困死了，睡午觉去。\n\n  [1]: http://www.eternalac.com/index.php/archives/7/\n  [2]: http://www.eternalac.com/index.php/archives/7/\n  [3]: http://www.eternalac.com/usr/uploads/2015/08/879485559.png","slug":"24","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekiju004kro5uov3q40ex"},{"title":"初学python（十一）文件的读写","date":"2015-08-25T00:42:29.000Z","_content":"python的入门学习马上就进入尾声了，现在来学习文件的读写。\n\n\n<!--more-->\n\n## open() ##\n`f = open('dir\\fileName','r')`\n该函数是用来打开一个文件，其中 mode 可以是 'r' 如果文件只读, 'w' 只用于写 (如果存在同名文件则将被删除), 和 'a' 用于追加文件内容; 所写的任何数据都会被自动增加到末尾. 'r+' 同时用于读写。 mode 参数是可选的; 'r' 将是默认值。\n## 读 ##\nf.read() 表示从文件中读取n个字符。如果参数为负或者为空，则全部读取。\nf.readline() 表示从文件中读取一行，如果读取到为空的，则返回一个空字符串。\nf.readlines() 表示以list的形式返回该文件中包含的所有行。如果设置可选参数 sizehint, 则读取指定长度的字节, 并且将这些字节按行分割。\n以下是来源于网络的示例：\n```python\n>>> f.read()\n'This is the entire file.\\n'\n>>> f.read()\n''\n>>> f.readline()\n'This is the first line of the file.\\n'\n>>> f.readline()\n'Second line of the file\\n'\n>>> f.readline()\n''\n>>> f.readlines()\n['This is the first line of the file.\\n', 'Second line of the file\\n']\n```\n## 写 ##\n写的话就，简单了。\n```python\n>>> f.write('This is a test\\n')\n15\n```\n## 关 ##\n调用完成后记得关闭文件。\n```python\nf.close()\n```","source":"_posts/23.md","raw":"title: 初学python（十一）文件的读写\ncategories: 编程与算法\ntags:\n  - python\ndate: 2015-08-25 08:42:29\n---\npython的入门学习马上就进入尾声了，现在来学习文件的读写。\n\n\n<!--more-->\n\n## open() ##\n`f = open('dir\\fileName','r')`\n该函数是用来打开一个文件，其中 mode 可以是 'r' 如果文件只读, 'w' 只用于写 (如果存在同名文件则将被删除), 和 'a' 用于追加文件内容; 所写的任何数据都会被自动增加到末尾. 'r+' 同时用于读写。 mode 参数是可选的; 'r' 将是默认值。\n## 读 ##\nf.read() 表示从文件中读取n个字符。如果参数为负或者为空，则全部读取。\nf.readline() 表示从文件中读取一行，如果读取到为空的，则返回一个空字符串。\nf.readlines() 表示以list的形式返回该文件中包含的所有行。如果设置可选参数 sizehint, 则读取指定长度的字节, 并且将这些字节按行分割。\n以下是来源于网络的示例：\n```python\n>>> f.read()\n'This is the entire file.\\n'\n>>> f.read()\n''\n>>> f.readline()\n'This is the first line of the file.\\n'\n>>> f.readline()\n'Second line of the file\\n'\n>>> f.readline()\n''\n>>> f.readlines()\n['This is the first line of the file.\\n', 'Second line of the file\\n']\n```\n## 写 ##\n写的话就，简单了。\n```python\n>>> f.write('This is a test\\n')\n15\n```\n## 关 ##\n调用完成后记得关闭文件。\n```python\nf.close()\n```","slug":"23","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekijx004oro5u1fvjsdlp"},{"title":"初学python（十）格式化输出","date":"2015-08-25T00:42:07.000Z","_content":"之前用python的时候只会用`print()`来输出。现在来学习一些其他的输出方式。\n本次主要学习这几个功能：\n\n - str() 函数返回一个用户易读的表达形式。\n - repr() 产生一个解释器易读的表达形式。\n - ljust()、rjust()、center() 左对齐、右对齐、居中。\n - zfill() 左边填充'0'\n - str.format() 格式化字段\n\n\n<!--more-->\n\n## str() ##\nstr() 是用来返回一个字符串的正常形式，就是显示在命令行或展示窗的字符串。其实就是用来将其他类型转换为字符串用的。例如：\n```python\n>>> s = 'Hello \\n World!'\n>>> s\n'Hello \\n World!'\n>>> str(s)\n'Hello \\n World!'\n>>> print(str(s))\nHello \n World!\n```\n## repr() ##\nrepr()函数是用来将字符串或其他类型转换为解释器可以识别的形式，例如将转义符再次进行转义。例如：\n```python\n>>> s = 'Hello \\n World!'\n>>> repr(s)\n\"'Hello \\\\n World!'\"\n>>> print(repr(s))\n'Hello \\n World!'\n```\n## ljust()、rjust()、center() ##\n```python\n>>> for i in range(1,4):\n...     print('|',repr(i).ljust(3),'|',repr(i*i).center(3),'|',repr(i**i).rjust(3),'|')\n... \n| 1   |  1  |   1 |\n| 2   |  4  |   4 |\n| 3   |  9  |  27 |\n```\n## zfill() ##\n这个函数是在左边填充'0'。\n```python\n>>> 'xx'.zfill(5)\n'000xx'\n```\n## format() ##\n就是用format()里的参数替换字符串中的通配符`{}`.例如：\n```python\n>>> 'this is {} test of {}!'.format('a','str.format()')\n'this is a test of str.format()!'\n```\n还可以在`{}`中写入关键字，这样就可以通过关机字赋值。例如：\n\n    >>> 'this is {a} test of {b}!'.format(b='str.format()',a='a')\n    'this is a test of str.format()!'\n还可以在`{}`加入`:参数`，用来格式化输入。例如：\n\n    >>> '{:.3f} * {:.3f} = {:3d}'.format(10,10,100)\n    '10.000 * 10.000 = 100'","source":"_posts/22.md","raw":"title: 初学python（十）格式化输出\ncategories: 编程与算法\ntags:\n  - python\ndate: 2015-08-25 08:42:07\n---\n之前用python的时候只会用`print()`来输出。现在来学习一些其他的输出方式。\n本次主要学习这几个功能：\n\n - str() 函数返回一个用户易读的表达形式。\n - repr() 产生一个解释器易读的表达形式。\n - ljust()、rjust()、center() 左对齐、右对齐、居中。\n - zfill() 左边填充'0'\n - str.format() 格式化字段\n\n\n<!--more-->\n\n## str() ##\nstr() 是用来返回一个字符串的正常形式，就是显示在命令行或展示窗的字符串。其实就是用来将其他类型转换为字符串用的。例如：\n```python\n>>> s = 'Hello \\n World!'\n>>> s\n'Hello \\n World!'\n>>> str(s)\n'Hello \\n World!'\n>>> print(str(s))\nHello \n World!\n```\n## repr() ##\nrepr()函数是用来将字符串或其他类型转换为解释器可以识别的形式，例如将转义符再次进行转义。例如：\n```python\n>>> s = 'Hello \\n World!'\n>>> repr(s)\n\"'Hello \\\\n World!'\"\n>>> print(repr(s))\n'Hello \\n World!'\n```\n## ljust()、rjust()、center() ##\n```python\n>>> for i in range(1,4):\n...     print('|',repr(i).ljust(3),'|',repr(i*i).center(3),'|',repr(i**i).rjust(3),'|')\n... \n| 1   |  1  |   1 |\n| 2   |  4  |   4 |\n| 3   |  9  |  27 |\n```\n## zfill() ##\n这个函数是在左边填充'0'。\n```python\n>>> 'xx'.zfill(5)\n'000xx'\n```\n## format() ##\n就是用format()里的参数替换字符串中的通配符`{}`.例如：\n```python\n>>> 'this is {} test of {}!'.format('a','str.format()')\n'this is a test of str.format()!'\n```\n还可以在`{}`中写入关键字，这样就可以通过关机字赋值。例如：\n\n    >>> 'this is {a} test of {b}!'.format(b='str.format()',a='a')\n    'this is a test of str.format()!'\n还可以在`{}`加入`:参数`，用来格式化输入。例如：\n\n    >>> '{:.3f} * {:.3f} = {:3d}'.format(10,10,100)\n    '10.000 * 10.000 = 100'","slug":"22","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekik0004rro5ukbjvcp62"},{"title":"初学python（九）模块","date":"2015-08-25T00:41:48.000Z","_content":"python的模块就是在其他的python程序中调用写好的python文件。额，好乱的样子，就是使用已经封装好的python类和函数。我自己是这么理解的。\n这里先说怎样导入其他模块、怎样区别是自己调用还是其他程序调用、和创建一个包。\n关于导入父级包后同时导入其他子包，本人查阅了数多资料还是没找到解决方法。等以后知道了再来补充。\n\n\n<!--more-->\n\n## \\_\\_name__  的使用方法##\n每个*.py都有一个\\_\\_name__变量，如果调用该*.py的程序是它自己，那么\\_\\_name__的值为'\\_\\_main__'。这样就可以写一个函数如下:\n\n    #hello.py\n    #author innerac\n    def helloworld():\n    \tif __name__ == '__main__':\n    \t\tprint('Hello World!')\n    \telse:\n    \t\tprint('Hello the other World!!!')\n\n如果是本程序调用则会输出'`Hello World!`'，如果是其他程序调用的话就会输出'`Hello the other World!!!`'\n## 导入模块 ##\n这里仅仅学习简单的导入模块。首先我们有如下结构的包(包是已经建好的)\n\n    com/\n    \t__init__.py\n    \tinnerac/\n    \t\t__init__.py\n    \t\thello.py\n我们在程序中通过import导入\n```python\nimport com.innerac.hello\n#调用函数的方法\ncom.innerac.hello.helloworld()\n```\n也可以通过`from xxx import xxx`\n```python\nfrom com.innerac import hello\n#调用\nhello.helloworld()\n```\n也可以直接导入函数\n```python\nfrom com.innerac.hello import helloworld\n#调用\nhelloworld()\n```\n以上3个*.py都是和com是同目录的。他们的输出均为'`Hello the other World!!!`'\n## 创建一个包 ##\n如何创建一个包，首先应该在被当做包的目录下新建一个空的'`__init__.py`'文件。该文件声明了这是一个包结构。如上图我们的结构。\n起始只要有了空的文件我们就可以完成了我们所需要的功能。可是咱有强迫症，想导入父目录就同时把子目录也导入了。这个查阅了许多资料均没有找到想要的结果，后来只能自己写了个`import`这个方法仅供参考，欢迎指正。\n我想要的功能就是在与`com`同级的python文件下只写一句\"`import com`\"就可以直接使用\"`hello.py`\"下的函数。为此，我在\"`com/__init__.py`\"下加入语句:\n\n    #com/\n    #author innerac\n    import com.innerac\n    __all__ = []\n在\"`com/innerac/__init__.py`\"下加入语句：\n\n    #com/\n    #author innerac\n    import com.innerac.hello\n    __all__ = [\"hello\"]\n然后就可以直接调用了：\n\n    #start.py\n    #author innerac\n    import com\n    #直接调用\n    com.innerac.hello.helloworld()\n输出结果\"`Hello the other World!!!`\"\n\n还有一种导入方式就是'`*`'，如上图的包结构，只要我在\"`__init__.py`\"中创建一个\"`__all__`\"的list，然后将需要导入的模块都放进去。如\"`com/innerac/__init__.py`\"里的代码。只要在程序中书写：\n\n    #start.py\n    #author innerac\n    from com.innerac import *\n    #全部导入\n    hello.helloworld()\n就可以得到想要的结果了。\n如果\"`__all__`\"不写或者为空的话，将不会导入任何模块。","source":"_posts/21.md","raw":"title: 初学python（九）模块\ncategories: 编程与算法\ntags:\n  - python\ndate: 2015-08-25 08:41:48\n---\npython的模块就是在其他的python程序中调用写好的python文件。额，好乱的样子，就是使用已经封装好的python类和函数。我自己是这么理解的。\n这里先说怎样导入其他模块、怎样区别是自己调用还是其他程序调用、和创建一个包。\n关于导入父级包后同时导入其他子包，本人查阅了数多资料还是没找到解决方法。等以后知道了再来补充。\n\n\n<!--more-->\n\n## \\_\\_name__  的使用方法##\n每个*.py都有一个\\_\\_name__变量，如果调用该*.py的程序是它自己，那么\\_\\_name__的值为'\\_\\_main__'。这样就可以写一个函数如下:\n\n    #hello.py\n    #author innerac\n    def helloworld():\n    \tif __name__ == '__main__':\n    \t\tprint('Hello World!')\n    \telse:\n    \t\tprint('Hello the other World!!!')\n\n如果是本程序调用则会输出'`Hello World!`'，如果是其他程序调用的话就会输出'`Hello the other World!!!`'\n## 导入模块 ##\n这里仅仅学习简单的导入模块。首先我们有如下结构的包(包是已经建好的)\n\n    com/\n    \t__init__.py\n    \tinnerac/\n    \t\t__init__.py\n    \t\thello.py\n我们在程序中通过import导入\n```python\nimport com.innerac.hello\n#调用函数的方法\ncom.innerac.hello.helloworld()\n```\n也可以通过`from xxx import xxx`\n```python\nfrom com.innerac import hello\n#调用\nhello.helloworld()\n```\n也可以直接导入函数\n```python\nfrom com.innerac.hello import helloworld\n#调用\nhelloworld()\n```\n以上3个*.py都是和com是同目录的。他们的输出均为'`Hello the other World!!!`'\n## 创建一个包 ##\n如何创建一个包，首先应该在被当做包的目录下新建一个空的'`__init__.py`'文件。该文件声明了这是一个包结构。如上图我们的结构。\n起始只要有了空的文件我们就可以完成了我们所需要的功能。可是咱有强迫症，想导入父目录就同时把子目录也导入了。这个查阅了许多资料均没有找到想要的结果，后来只能自己写了个`import`这个方法仅供参考，欢迎指正。\n我想要的功能就是在与`com`同级的python文件下只写一句\"`import com`\"就可以直接使用\"`hello.py`\"下的函数。为此，我在\"`com/__init__.py`\"下加入语句:\n\n    #com/\n    #author innerac\n    import com.innerac\n    __all__ = []\n在\"`com/innerac/__init__.py`\"下加入语句：\n\n    #com/\n    #author innerac\n    import com.innerac.hello\n    __all__ = [\"hello\"]\n然后就可以直接调用了：\n\n    #start.py\n    #author innerac\n    import com\n    #直接调用\n    com.innerac.hello.helloworld()\n输出结果\"`Hello the other World!!!`\"\n\n还有一种导入方式就是'`*`'，如上图的包结构，只要我在\"`__init__.py`\"中创建一个\"`__all__`\"的list，然后将需要导入的模块都放进去。如\"`com/innerac/__init__.py`\"里的代码。只要在程序中书写：\n\n    #start.py\n    #author innerac\n    from com.innerac import *\n    #全部导入\n    hello.helloworld()\n就可以得到想要的结果了。\n如果\"`__all__`\"不写或者为空的话，将不会导入任何模块。","slug":"21","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekik2004uro5u4pz8phg1"},{"title":"初学python（八）函数","date":"2015-08-25T00:41:26.000Z","_content":"python的函数第一眼把我震惊了。没有函数结尾标识，只能通过严格的缩进来保证函数的健壮。还有它的参数是可变的，还可以带参数名传递。\n\n\n<!--more-->\n\n## 普通函数：\n\n    #函数开始\n    def fun():\n        print('Hello World!')\n    #函数结束\n    #函数开始\n    def fun(str):\n        print(str)\n    #函数结束\n    #函数开始\n    def fun(str):\n        str += 'a'\n        return str\n    #函数结束\n## 关键字参数 ##\n\n    def fun(a,b='b',c='c',d='d'):\n        return a+b+c+d\n    fun('a')\n    fun('a',b='b1')\n## 可变参数 ##\n\n    def fun(*args):\n        sum = 0\n        for x in args:\n            sum += x\n        return sum\n要强调的是，写函数时不要忘了加`:`","source":"_posts/20.md","raw":"title: 初学python（八）函数\ncategories: 编程与算法\ntags:\n  - python\ndate: 2015-08-25 08:41:26\n---\npython的函数第一眼把我震惊了。没有函数结尾标识，只能通过严格的缩进来保证函数的健壮。还有它的参数是可变的，还可以带参数名传递。\n\n\n<!--more-->\n\n## 普通函数：\n\n    #函数开始\n    def fun():\n        print('Hello World!')\n    #函数结束\n    #函数开始\n    def fun(str):\n        print(str)\n    #函数结束\n    #函数开始\n    def fun(str):\n        str += 'a'\n        return str\n    #函数结束\n## 关键字参数 ##\n\n    def fun(a,b='b',c='c',d='d'):\n        return a+b+c+d\n    fun('a')\n    fun('a',b='b1')\n## 可变参数 ##\n\n    def fun(*args):\n        sum = 0\n        for x in args:\n            sum += x\n        return sum\n要强调的是，写函数时不要忘了加`:`","slug":"20","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekik5004xro5ulpapnqh7"},{"title":"鞍山赛区D题","date":"2015-08-24T10:34:59.000Z","_content":"好吧，我承认这道题是水题，由于我的原因导致大家没有在赛场上A出这道题，现在把代码发上来，将n^2的复杂度降到线性的\n\n\n<!--more-->\n\n\n```cpp\n#include <iostream>  \n#include <cstdio>  \n#include <cstring>  \n#include <algorithm>  \n  \nusing namespace std;  \n  \nint d[50001];  \n  \nint main(){  \n    int T,n,k;  \n    double sum;  \n    double sum_xi_2,sum_xi,ave,tmp;  \n    double minx;  \n    cin>>T;  \n    while(T--){  \n        cin>>n>>k;  \n        memset(d,0,sizeof(d));  \n        sum = 0;  \n        sum_xi_2 = 0;  \n        sum_xi = 0;  \n        minx = 0;  \n        for (int i = 0; i < n; ++i){  \n            cin>>d[i];  \n        }  \n        sort(d,d+n);  \n        for(int i=0;i<n-k;i++){  \n            sum += d[i];  \n            sum_xi_2 += d[i]*d[i];            \n        }  \n        sum_xi = sum;  \n        ave = sum/(n-k);  \n        minx = sum_xi_2 + (n-k)*ave*ave - 2*ave*sum_xi;  \n        for(int i=1;i<=k;i++){  \n            sum -= d[i-1];  \n            sum += d[n-k+i-1];  \n            sum_xi_2 -= d[i-1]*d[i-1];  \n            sum_xi_2 += d[n-k+i-1]*d[n-k+i-1];  \n            sum_xi = sum;  \n            ave = sum/(n-k);  \n            tmp = sum_xi_2 + (n-k)*ave*ave - 2*ave*sum_xi;  \n            if(tmp < minx)  \n                minx = tmp;  \n        }  \n        printf(\"%.9f\\n\",minx);  \n    }  \n}  \n```\n","source":"_posts/2.md","raw":"title: 鞍山赛区D题\ndate: 2015-08-24 18:34:59\ncategories: 编程与算法\ntags: [ACM,区域赛]\n---\n好吧，我承认这道题是水题，由于我的原因导致大家没有在赛场上A出这道题，现在把代码发上来，将n^2的复杂度降到线性的\n\n\n<!--more-->\n\n\n```cpp\n#include <iostream>  \n#include <cstdio>  \n#include <cstring>  \n#include <algorithm>  \n  \nusing namespace std;  \n  \nint d[50001];  \n  \nint main(){  \n    int T,n,k;  \n    double sum;  \n    double sum_xi_2,sum_xi,ave,tmp;  \n    double minx;  \n    cin>>T;  \n    while(T--){  \n        cin>>n>>k;  \n        memset(d,0,sizeof(d));  \n        sum = 0;  \n        sum_xi_2 = 0;  \n        sum_xi = 0;  \n        minx = 0;  \n        for (int i = 0; i < n; ++i){  \n            cin>>d[i];  \n        }  \n        sort(d,d+n);  \n        for(int i=0;i<n-k;i++){  \n            sum += d[i];  \n            sum_xi_2 += d[i]*d[i];            \n        }  \n        sum_xi = sum;  \n        ave = sum/(n-k);  \n        minx = sum_xi_2 + (n-k)*ave*ave - 2*ave*sum_xi;  \n        for(int i=1;i<=k;i++){  \n            sum -= d[i-1];  \n            sum += d[n-k+i-1];  \n            sum_xi_2 -= d[i-1]*d[i-1];  \n            sum_xi_2 += d[n-k+i-1]*d[n-k+i-1];  \n            sum_xi = sum;  \n            ave = sum/(n-k);  \n            tmp = sum_xi_2 + (n-k)*ave*ave - 2*ave*sum_xi;  \n            if(tmp < minx)  \n                minx = tmp;  \n        }  \n        printf(\"%.9f\\n\",minx);  \n    }  \n}  \n```\n","slug":"2","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekik70050ro5u0srv9evs"},{"title":"初学python（七）循环与条件","date":"2015-08-25T00:41:08.000Z","_content":"在python中，条件后边必须要加上`:`从C那边转过来感觉挺别扭的，不过这样跟能区别赋值与条件吧。\n\n\n<!--more-->\n\n## 条件 ##\n\n    if 条件1:\n        <statements>\n    elif 条件2:\n        <statements>\n    elif 条件3:\n        <statements>\n    else:\n        <statements>\n恩，条件大概就是这样的。\n## for循环 ##\nfor循环在各个语言中应该都有的。额，汇编也是可以通过jump 和 goto 实现的。\n在python中，遍历起来会更方便。很像java的那个for遍历。它的for循环中有一个`else`，开始不太理解，后来想明白就是类似于收尾的一个工作，如果循环中没有通过`break`跳出循环的话，在循环结束后就执行`else`中的代码。如果执行了`break`则不会执行`else`中的内容。\n\n    for <variable> in <sequence>:\n    \t<statements>    #变量在队列中\n    else:\n    \t<statements>    #循环结束且没有通过break跳出循环\n如果`for`循环中有`if`，就一定要注意代码的格式问题了，要不就不知道`else`是`if`的还是`for`的。例如\n\n    for x in [1]:\n        if x == 1:\n            print(\"Hello\")\n    else:\n        print(\"World!\")\n它是执行结果就是：\n\n    Hello\n    World!\n## range() ##\n对于数字的遍历，可以使用range函数，废话不多说，看样例：\n\n    >>> for i in range(3):\\    #遍历[0,n)\n    ...     print(i)\n    ... \n    0\n    1\n    2\n    >>> for i in range(3,5):\\    #遍历[x,y)\n    ...     print(i)\n    ... \n    3\n    4\n    >>> for i in range(0,10,3):\\    #以z为步长遍历[x,y)\n    ...     print(i)\n    ... \n    0\n    3\n    6\n    9\n    >>> for i in range(0,-10,-3):\\    #同上\n    ...     print(i)\n    ... \n    0\n    -3\n    -6\n    -9\n还可以通过range()和len()函数结合来遍历有索引的序列。如：\n\n    >>> list = ['a','b','c','d']\n    >>> for i in range(len(list)):\\\n    ...     print(i,list[i])\n    ... \n    0 a\n    1 b\n    2 c\n    3 d\n还可以通过range()得到一个list\n\n    >>> list(range(5))\n    [0, 1, 2, 3, 4]\n## while ##\n额，忘了这个基本的循环结构了。\n\n    while 判断条件：\n        <statements>\n其实在python中只要注意好缩进就可以了。\n还有个奇葩的函数，类似于system.pause，就是`pass`\n写两行代码：\n\n    while True:\n        pass  # 等待键盘中断 (Ctrl+C)\n就可以无限的敲回车了。2333333","source":"_posts/19.md","raw":"title: 初学python（七）循环与条件\ncategories: 编程与算法\ntags:\n  - python\ndate: 2015-08-25 08:41:08\n---\n在python中，条件后边必须要加上`:`从C那边转过来感觉挺别扭的，不过这样跟能区别赋值与条件吧。\n\n\n<!--more-->\n\n## 条件 ##\n\n    if 条件1:\n        <statements>\n    elif 条件2:\n        <statements>\n    elif 条件3:\n        <statements>\n    else:\n        <statements>\n恩，条件大概就是这样的。\n## for循环 ##\nfor循环在各个语言中应该都有的。额，汇编也是可以通过jump 和 goto 实现的。\n在python中，遍历起来会更方便。很像java的那个for遍历。它的for循环中有一个`else`，开始不太理解，后来想明白就是类似于收尾的一个工作，如果循环中没有通过`break`跳出循环的话，在循环结束后就执行`else`中的代码。如果执行了`break`则不会执行`else`中的内容。\n\n    for <variable> in <sequence>:\n    \t<statements>    #变量在队列中\n    else:\n    \t<statements>    #循环结束且没有通过break跳出循环\n如果`for`循环中有`if`，就一定要注意代码的格式问题了，要不就不知道`else`是`if`的还是`for`的。例如\n\n    for x in [1]:\n        if x == 1:\n            print(\"Hello\")\n    else:\n        print(\"World!\")\n它是执行结果就是：\n\n    Hello\n    World!\n## range() ##\n对于数字的遍历，可以使用range函数，废话不多说，看样例：\n\n    >>> for i in range(3):\\    #遍历[0,n)\n    ...     print(i)\n    ... \n    0\n    1\n    2\n    >>> for i in range(3,5):\\    #遍历[x,y)\n    ...     print(i)\n    ... \n    3\n    4\n    >>> for i in range(0,10,3):\\    #以z为步长遍历[x,y)\n    ...     print(i)\n    ... \n    0\n    3\n    6\n    9\n    >>> for i in range(0,-10,-3):\\    #同上\n    ...     print(i)\n    ... \n    0\n    -3\n    -6\n    -9\n还可以通过range()和len()函数结合来遍历有索引的序列。如：\n\n    >>> list = ['a','b','c','d']\n    >>> for i in range(len(list)):\\\n    ...     print(i,list[i])\n    ... \n    0 a\n    1 b\n    2 c\n    3 d\n还可以通过range()得到一个list\n\n    >>> list(range(5))\n    [0, 1, 2, 3, 4]\n## while ##\n额，忘了这个基本的循环结构了。\n\n    while 判断条件：\n        <statements>\n其实在python中只要注意好缩进就可以了。\n还有个奇葩的函数，类似于system.pause，就是`pass`\n写两行代码：\n\n    while True:\n        pass  # 等待键盘中断 (Ctrl+C)\n就可以无限的敲回车了。2333333","slug":"19","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekikd0055ro5uapaq7jpa"},{"title":"初学python（六）List常用操作","date":"2015-08-25T00:40:35.000Z","_content":"python的list的用法其实有很多，这里就练习几个常用的吧。\n这里是S的几个函数\n\n<table> <tr> <td>Operation</td> <td>Result</td> <td>Notes</td></tr><tr> <td>s[i] = x</td> <td>item i of s is replaced by x</td> <td> </td></tr><tr> <td>s[i:j] = t</td>  <td>slice of s from i to j is replaced by the contents of the iterable t</td> <td> </td></tr><tr> <td>del s[i:j]</td> <td>same as s[i:j] = []</td> <td> </td></tr><tr> <td>s[i:j:k] = t</td> <td>the elements of s[i:j:k] are replaced by those of t</td>  <td>-1</td></tr><tr> <td>del s[i:j:k]</td> <td>removes the elements of s[i:j:k] from the list</td> <td> </td></tr><tr> <td>s.append(x)</td>  <td>appends x to the end of the sequence (same as s[len(s):len(s)] = [x])</td> <td> </td></tr><tr> <td>s.clear()</td> <td>removes all items from s (same as del s[:])</td> <td>-5</td></tr><tr> <td>s.copy()</td> <td>creates a shallow copy of s (same as s[:])</td> <td>-5</td></tr><tr> <td>s.extend(t)</td> <td>extends s with the contents of t (same as s[len(s):len(s)] = t)</td> <td> </td></tr><tr> <td>s.insert(i, x)</td> <td>inserts x into s at the index given by i (same as s[i:i] = [x])</td> <td> </td></tr><tr>  <td>s.pop([i])</td> <td>retrieves the item at i and also removes it from s</td> <td>-2</td></tr><tr>  <td>s.remove(x)</td> <td>remove the first item from s where s[i] == x</td>  <td>-3</td></tr><tr> <td>s.reverse()</td> <td>reverses the items of s in place</td>  <td>-4</td></tr></table>\n\n\n<!--more-->\n好像找到中文版了，补充一下哈：\n<table class=\"table-bordered table-striped table-condensed\"> <tr> <th>方法</th> <th>描述</th> </tr> <tr> <td>list.append(x) </td> <td>把一个元素添加到列表的结尾，相当于 a[len(a):] = [x]。 </td> </tr> <tr> <td>list.extend(L) </td> <td>通过添加指定列表的所有元素来扩充列表，相当于 a[len(a):] = L。 </td> </tr> <tr> <td>list.insert(i, x) </td> <td>在指定位置插入一个元素。第一个参数是准备插入到其前面的那个元素的索引，例如 a.insert(0, x) 会插入到整个列表之前，而 a.insert(len(a), x) 相当于 a.append(x) 。 </td> </tr> <tr> <td>list.remove(x) </td> <td>删除列表中值为 x 的第一个元素。如果没有这样的元素，就会返回一个错误。 </td> </tr> <tr> <td>list.pop([i]) </td> <td>从列表的指定位置删除元素，并将其返回。如果没有指定索引，a.pop()返回最后一个元素。元素随即从列表中被删除。（方法中 i 两边的方括号表示这个参数是可选的，而不是要求你输入一对方括号，你会经常在 Python 库参考手册中遇到这样的标记。） </td> </tr> <tr> <td>list.clear() </td> <td>移除列表中的所有项，等于del a[:]。 </td> </tr> <tr> <td>list.index(x) </td> <td>返回列表中第一个值为 x 的元素的索引。如果没有匹配的元素就会返回一个错误。 </td> </tr> <tr> <td>list.count(x) </td> <td>返回 x 在列表中出现的次数。 </td> </tr> <tr> <td>list.sort() </td> <td>对列表中的元素进行排序。 </td> </tr> <tr> <td>list.reverse() </td> <td>倒排列表中的元素。 </td> </tr> <tr> <td>list.copy() </td> <td>返回列表的浅复制，等于a[:]。 </td> </tr> </table>\n\n接下来是我的测试：\n## 定义 ##\n    >>> list = ['a','b','c','d']\n    >>> list\n    ['a', 'b', 'c', 'd']\n## 索引 ##\n    >>> list[0]\n    'a'\n    >>> list[-1]\n    'd'\n    >>> list[1:3]    #获取[1,3)区间的元素\n    ['b', 'c']\n## 追加和插入 ##\n    >>> list.append('e')    #尾部追加\n    >>> list\n    ['a', 'b', 'c', 'd', 'e']\n    >>> list.insert(1,'a2')    #下标插入\n    >>> list\n    ['a', 'a2', 'b', 'c', 'd', 'e']\n    >>> list.extend(['f','g','h'])    #尾部追加list\n    >>> list\n    ['a', 'a2', 'b', 'c', 'd', 'e', 'f', 'g', 'h']\n## 检索 ##\n    >>> list.index('a2')\n    1\n    >>> 'b2' in list\n    False\n## 运算符 ##\n    >>> list += ['i','j']\n    >>> list\n    ['a', 'a2', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']\n    >>> list = ['a','b']*3\n    >>> list\n    ['a', 'b', 'a', 'b', 'a', 'b']\n## join用法 ##\n    >>> params ={'one':'first','two':'twice','three':'third'}\n    >>> ['%s=%s' % (k,v) for k,v in params.items()]\n    ['three=third', 'one=first', 'two=twice']\n    >>> list = '&&'.join(['%s=%s' % (k,v) for k,v in params.items()])\n    >>> list\n    'three=third&&one=first&&two=twice'\n## 分割 ##\n    >>> list.split('&&')\n    ['three=third', 'one=first', 'two=twice']\n    >>> list.split('&&',1)    #第二个参数为分割次数\n    ['three=third', 'one=first&&two=twice']\n## 映射和过滤 ##\n    >>> list = [1,2,3,4]\n    >>> list = [elem*2 for elem in list]\n    >>> list\n    [2, 4, 6, 8]\n    >>> list = [elem for elem in list if elem >2]\n    >>> list\n    [4, 6, 8]\n    >>> list = [1,2,3,4,5,6,1,1,2,3,4]\n    >>> list\n    [1, 2, 3, 4, 5, 6, 1, 1, 2, 3, 4]\n    >>> list = [elem for elem in list if list.count(elem) > 1]\n    >>> list\n    [1, 2, 3, 4, 1, 1, 2, 3, 4]\n\n## 删除操作 ##\n\n    >>> list.remove(1)    #删除首次出现的值\n    >>> list\n    [2, 3, 4, 1, 1, 2, 3, 4]\n    >>> list.pop()    #删除尾部元素，并且返回\n    4\n    >>> list\n    [2, 3, 4, 1, 1, 2, 3]\n\n","source":"_posts/18.md","raw":"title: 初学python（六）List常用操作\ncategories: 编程与算法\ntags:\n  - python\ndate: 2015-08-25 08:40:35\n---\npython的list的用法其实有很多，这里就练习几个常用的吧。\n这里是S的几个函数\n\n<table> <tr> <td>Operation</td> <td>Result</td> <td>Notes</td></tr><tr> <td>s[i] = x</td> <td>item i of s is replaced by x</td> <td> </td></tr><tr> <td>s[i:j] = t</td>  <td>slice of s from i to j is replaced by the contents of the iterable t</td> <td> </td></tr><tr> <td>del s[i:j]</td> <td>same as s[i:j] = []</td> <td> </td></tr><tr> <td>s[i:j:k] = t</td> <td>the elements of s[i:j:k] are replaced by those of t</td>  <td>-1</td></tr><tr> <td>del s[i:j:k]</td> <td>removes the elements of s[i:j:k] from the list</td> <td> </td></tr><tr> <td>s.append(x)</td>  <td>appends x to the end of the sequence (same as s[len(s):len(s)] = [x])</td> <td> </td></tr><tr> <td>s.clear()</td> <td>removes all items from s (same as del s[:])</td> <td>-5</td></tr><tr> <td>s.copy()</td> <td>creates a shallow copy of s (same as s[:])</td> <td>-5</td></tr><tr> <td>s.extend(t)</td> <td>extends s with the contents of t (same as s[len(s):len(s)] = t)</td> <td> </td></tr><tr> <td>s.insert(i, x)</td> <td>inserts x into s at the index given by i (same as s[i:i] = [x])</td> <td> </td></tr><tr>  <td>s.pop([i])</td> <td>retrieves the item at i and also removes it from s</td> <td>-2</td></tr><tr>  <td>s.remove(x)</td> <td>remove the first item from s where s[i] == x</td>  <td>-3</td></tr><tr> <td>s.reverse()</td> <td>reverses the items of s in place</td>  <td>-4</td></tr></table>\n\n\n<!--more-->\n好像找到中文版了，补充一下哈：\n<table class=\"table-bordered table-striped table-condensed\"> <tr> <th>方法</th> <th>描述</th> </tr> <tr> <td>list.append(x) </td> <td>把一个元素添加到列表的结尾，相当于 a[len(a):] = [x]。 </td> </tr> <tr> <td>list.extend(L) </td> <td>通过添加指定列表的所有元素来扩充列表，相当于 a[len(a):] = L。 </td> </tr> <tr> <td>list.insert(i, x) </td> <td>在指定位置插入一个元素。第一个参数是准备插入到其前面的那个元素的索引，例如 a.insert(0, x) 会插入到整个列表之前，而 a.insert(len(a), x) 相当于 a.append(x) 。 </td> </tr> <tr> <td>list.remove(x) </td> <td>删除列表中值为 x 的第一个元素。如果没有这样的元素，就会返回一个错误。 </td> </tr> <tr> <td>list.pop([i]) </td> <td>从列表的指定位置删除元素，并将其返回。如果没有指定索引，a.pop()返回最后一个元素。元素随即从列表中被删除。（方法中 i 两边的方括号表示这个参数是可选的，而不是要求你输入一对方括号，你会经常在 Python 库参考手册中遇到这样的标记。） </td> </tr> <tr> <td>list.clear() </td> <td>移除列表中的所有项，等于del a[:]。 </td> </tr> <tr> <td>list.index(x) </td> <td>返回列表中第一个值为 x 的元素的索引。如果没有匹配的元素就会返回一个错误。 </td> </tr> <tr> <td>list.count(x) </td> <td>返回 x 在列表中出现的次数。 </td> </tr> <tr> <td>list.sort() </td> <td>对列表中的元素进行排序。 </td> </tr> <tr> <td>list.reverse() </td> <td>倒排列表中的元素。 </td> </tr> <tr> <td>list.copy() </td> <td>返回列表的浅复制，等于a[:]。 </td> </tr> </table>\n\n接下来是我的测试：\n## 定义 ##\n    >>> list = ['a','b','c','d']\n    >>> list\n    ['a', 'b', 'c', 'd']\n## 索引 ##\n    >>> list[0]\n    'a'\n    >>> list[-1]\n    'd'\n    >>> list[1:3]    #获取[1,3)区间的元素\n    ['b', 'c']\n## 追加和插入 ##\n    >>> list.append('e')    #尾部追加\n    >>> list\n    ['a', 'b', 'c', 'd', 'e']\n    >>> list.insert(1,'a2')    #下标插入\n    >>> list\n    ['a', 'a2', 'b', 'c', 'd', 'e']\n    >>> list.extend(['f','g','h'])    #尾部追加list\n    >>> list\n    ['a', 'a2', 'b', 'c', 'd', 'e', 'f', 'g', 'h']\n## 检索 ##\n    >>> list.index('a2')\n    1\n    >>> 'b2' in list\n    False\n## 运算符 ##\n    >>> list += ['i','j']\n    >>> list\n    ['a', 'a2', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j']\n    >>> list = ['a','b']*3\n    >>> list\n    ['a', 'b', 'a', 'b', 'a', 'b']\n## join用法 ##\n    >>> params ={'one':'first','two':'twice','three':'third'}\n    >>> ['%s=%s' % (k,v) for k,v in params.items()]\n    ['three=third', 'one=first', 'two=twice']\n    >>> list = '&&'.join(['%s=%s' % (k,v) for k,v in params.items()])\n    >>> list\n    'three=third&&one=first&&two=twice'\n## 分割 ##\n    >>> list.split('&&')\n    ['three=third', 'one=first', 'two=twice']\n    >>> list.split('&&',1)    #第二个参数为分割次数\n    ['three=third', 'one=first&&two=twice']\n## 映射和过滤 ##\n    >>> list = [1,2,3,4]\n    >>> list = [elem*2 for elem in list]\n    >>> list\n    [2, 4, 6, 8]\n    >>> list = [elem for elem in list if elem >2]\n    >>> list\n    [4, 6, 8]\n    >>> list = [1,2,3,4,5,6,1,1,2,3,4]\n    >>> list\n    [1, 2, 3, 4, 5, 6, 1, 1, 2, 3, 4]\n    >>> list = [elem for elem in list if list.count(elem) > 1]\n    >>> list\n    [1, 2, 3, 4, 1, 1, 2, 3, 4]\n\n## 删除操作 ##\n\n    >>> list.remove(1)    #删除首次出现的值\n    >>> list\n    [2, 3, 4, 1, 1, 2, 3, 4]\n    >>> list.pop()    #删除尾部元素，并且返回\n    4\n    >>> list\n    [2, 3, 4, 1, 1, 2, 3]\n\n","slug":"18","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekikh0058ro5us3gxvq0a"},{"title":"初学python（五）字符串操作","date":"2015-08-25T00:40:02.000Z","_content":"现在列举一些字符串判断的函数。\n\n```python\nprint(str.isalnum())     # 判断所有字符都是数字或者字母\nprint(str.isalpha())     # 判断所有字符都是字母\nprint(str.isdigit())     # 判断所有字符都是数字\nprint(str.islower())     # 判断所有字符都是小写\nprint(str.isupper())     # 判断所有字符都是大写\nprint(str.istitle())     # 判断所有单词都是首字母大写，像标题\nprint(str.isspace())     # 判断所有字符都是空白字符、\\t、\\n、\\r\nprint(str.upper())       # 把所有字符中的小写字母转换成大写字母\nprint(str.lower())       # 把所有字符中的大写字母转换成小写字母\nprint(str.capitalize())  # 把第一个字母转化为大写字母，其余小写\nprint(str.title())       # 把每个单词的第一个字母转化为大写，其余小写 \n```","source":"_posts/17.md","raw":"title: 初学python（五）字符串操作\ncategories: 编程与算法\ntags:\n  - python\ndate: 2015-08-25 08:40:02\n---\n现在列举一些字符串判断的函数。\n\n```python\nprint(str.isalnum())     # 判断所有字符都是数字或者字母\nprint(str.isalpha())     # 判断所有字符都是字母\nprint(str.isdigit())     # 判断所有字符都是数字\nprint(str.islower())     # 判断所有字符都是小写\nprint(str.isupper())     # 判断所有字符都是大写\nprint(str.istitle())     # 判断所有单词都是首字母大写，像标题\nprint(str.isspace())     # 判断所有字符都是空白字符、\\t、\\n、\\r\nprint(str.upper())       # 把所有字符中的小写字母转换成大写字母\nprint(str.lower())       # 把所有字符中的大写字母转换成小写字母\nprint(str.capitalize())  # 把第一个字母转化为大写字母，其余小写\nprint(str.title())       # 把每个单词的第一个字母转化为大写，其余小写 \n```","slug":"17","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekikk005bro5u0vqq695d"},{"title":"初学python（四）进制与字符转换和文件读写","date":"2015-08-25T00:37:36.000Z","_content":"现在学到了如何将十进制转换为其他进制，和字符与ASCII码之间的转换。\n还有文件的读写。\n\n<!--more-->\n\n    dec = 12\n    print(bin(dec))    #二进制\n    print(oct(dec))    #八进制\n    print(hex(dec))    #十六进制\n    c = 'a'\n    a = '10'\n    print(ord(c))    #字符 -> ASCII码\n    print(chr(a))    #ASCII码 -> 字符\n文件的读写：\n\n    # 写文件\n    with open(\"out\", \"wt\") as out_file:\n        out_file.write(\"该文本会写入到文件中\\n看到我了吧!\")\n    # Read a file\n    with open(\"in\", \"rt\") as in_file:\n        text = in_file.read()\n    print(text)","source":"_posts/16.md","raw":"title: 初学python（四）进制与字符转换和文件读写\ncategories: 编程与算法\ntags:\n  - python\ndate: 2015-08-25 08:37:36\n---\n现在学到了如何将十进制转换为其他进制，和字符与ASCII码之间的转换。\n还有文件的读写。\n\n<!--more-->\n\n    dec = 12\n    print(bin(dec))    #二进制\n    print(oct(dec))    #八进制\n    print(hex(dec))    #十六进制\n    c = 'a'\n    a = '10'\n    print(ord(c))    #字符 -> ASCII码\n    print(chr(a))    #ASCII码 -> 字符\n文件的读写：\n\n    # 写文件\n    with open(\"out\", \"wt\") as out_file:\n        out_file.write(\"该文本会写入到文件中\\n看到我了吧!\")\n    # Read a file\n    with open(\"in\", \"rt\") as in_file:\n        text = in_file.read()\n    print(text)","slug":"16","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekikn005ero5uwl3ugvsk"},{"title":"初学python（三）一些练习","date":"2015-08-25T00:36:49.000Z","_content":"学习了部分的语法，现在来练习一些。\n\n - A+B\n - 交换两个变量\n - 随机数\n - 条件语句\n\n\n<!--more-->\n\n## A+B ##\n这个我以为很简单，不过发现python将所有的输入都当做了字符串，所以需要输入的时候进行转换\n\n    a = int(input())\n    b = int(input())\n    print (a+b)\n## SWAP ##\n交换变量比C要简单，不用异或或者使用临时变量\n\n    x,y = y,x\n## Rand ##\n\n    import random\n    print(random.randint(0,9))\n## if else ##\n条件语句写着挺别扭的，条件和else后面要加`:`\n而且0为false，字符串的'0'却为true\n\n    if 0:    #false\n        print('0 is true!')\n    elif '0':    #true\n        print('\\'0\\' is true!')\n    else:\n        print(0 & \\'0\\' are false!)","source":"_posts/15.md","raw":"title: 初学python（三）一些练习\ncategories: 编程与算法\ndate: 2015-08-25 08:36:49\ntags: [python]\n---\n学习了部分的语法，现在来练习一些。\n\n - A+B\n - 交换两个变量\n - 随机数\n - 条件语句\n\n\n<!--more-->\n\n## A+B ##\n这个我以为很简单，不过发现python将所有的输入都当做了字符串，所以需要输入的时候进行转换\n\n    a = int(input())\n    b = int(input())\n    print (a+b)\n## SWAP ##\n交换变量比C要简单，不用异或或者使用临时变量\n\n    x,y = y,x\n## Rand ##\n\n    import random\n    print(random.randint(0,9))\n## if else ##\n条件语句写着挺别扭的，条件和else后面要加`:`\n而且0为false，字符串的'0'却为true\n\n    if 0:    #false\n        print('0 is true!')\n    elif '0':    #true\n        print('\\'0\\' is true!')\n    else:\n        print(0 & \\'0\\' are false!)","slug":"15","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekikq005hro5u9xa9co3o"},{"title":"初学python（二）数据类型","date":"2015-08-25T00:34:52.000Z","_content":"据说python里有6个标准的数据类型：\n\n - Numbers（数字）\n - String（字符串）\n - List（列表） \n - Tuple（元组） \n - Sets（集合）\n - Dictionaries（字典）\n\n\n<!--more-->\n\n## Numbers（数字） ##\npython3 支持int、float、bool、complex\n还可以通过一个叫`type()`的函数来输出类型，自己测试了一下\n\n    Python 3.4.0 (default, Apr 11 2014, 13:05:18) \n    [GCC 4.8.2] on linux\n    Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n    >>> a,b,c,d = 10,2.5,True,4+3j\n    >>> print(type(a),type(b),type(c),type(d))\n    <class 'int'> <class 'float'> <class 'bool'> <class 'complex'>\n    >>> \n还有运算：\n\n    >>> 1 + 1 #加\n    2\n    >>> 1 - 1 #减\n    0\n    >>> 1 × 1 #乘\n      File \"<stdin>\", line 1\n        1 × 1 #乘\n          ^\n    SyntaxError: invalid character in identifier\n    >>> 1 * 1 #乘\n    1\n    >>> 3 / 2 #浮点数除\n    1.5\n    >>> 3 // 2 #整除\n    1\n    >>> 3 % 2 #取模\n    1\n    >>> 2 ** 4 #幂\n    16\n    >>> pow(2,4) #幂\n    16\n## String（字符串） ##\n这个没什么好说的，上一节感觉熟练了一下。\n可以用`*`来重复字符串，用`+`来拼接字符串，用`string[index]`来取字符，或者用`string[-index]`来倒着取字符。和ruby一样一样的。\n还有字符串分割`string[index_x:index_y]`\n但是不能通`过string[index] = x`进行赋值，因为字符串是不可改变的。\n## List（列表） ##\n先说列表的赋值吧，一个列表中可以扔进任何一个类型的数据，不用在意类型。例如\n\n    >>> a = ['him', 25, 100, 'her']\n    >>> print(a)\n    ['him', 25, 100, 'her']\n它还支持拼接、修改、分割操作，\n\n    >>> a = [1, 2, 3, 4, 5]\n    >>> a + [6, 7, 8]\n    [1, 2, 3, 4, 5, 6, 7, 8]\n    >>> a = [1, 2, 3, 4, 5, 6]\n    >>> a[0] = 9\n    >>> a[2:5] = [13, 14, 15]\n    >>> a\n    [9, 2, 13, 14, 15, 6]\n    >>> a[2:5] = []   # 删除\n    >>> a\n    [9, 2, 6]\n## （元组） ##\n元组（tuple）与列表类似，不同之处在于元组的元素不能修改。元组写在小括号里，元素之间用逗号隔开。\n例如：\n\n    >>> a = (1991, 2014, 'physics', 'math')\n    >>> print(a, type(a), len(a))\n    (1991, 2014, 'physics', 'math') <class 'tuple'> 4\n元组与字符串类似，可以被索引且下标索引从0开始，也可以进行截取/切片（看上面，这里不再赘述）。\n其实，可以把字符串看作一种特殊的元组。\n\n    >>> tup = (1, 2, 3, 4, 5, 6)\n    >>> print(tup[0], tup[1:5])\n    1 (2, 3, 4, 5)\n    >>> tup[0] = 11  # 修改元组元素的操作是非法的\n\n虽然tuple的元素不可改变，但它可以包含可变的对象，比如list列表。\n构造包含0个或1个元素的tuple是个特殊的问题，所以有一些额外的语法规则：\n\n    tup1 = () # 空元组\n    tup2 = (20,) # 一个元素，需要在元素后添加逗号\n\n另外，元组也支持用+操作符：\n\n    >>> tup1, tup2 = (1, 2, 3), (4, 5, 6)\n    >>> print(tup1+tup2)\n    (1, 2, 3, 4, 5, 6)\n## Sets（集合） ##\n集合（set）是一个无序不重复元素的集。\n好熟悉的结构，哈哈哈。\n基本功能是进行成员关系测试和消除重复元素。\n可以使用大括号 或者 set()函数创建set集合，注意：创建一个空集合必须用 set() 而不是 { }，因为{ }是用来创建一个空字典。\n下面来个例子吧：\n\n    >>> set_text = {'item0','item1','item2','item3','item4','item5','item6'}\n    >>> print(set_text)\n    {'item1', 'item4', 'item3', 'item2', 'item6', 'item5', 'item0'}\n    >>> #果然是无序的\n    ... \n    >>> 'item3' in set_text #成员测试?\n    True\n    >>> 'item7' in set_text #成员测试?\n    False\n    >>> #据说还可以进行集合运算\n    ... \n    >>> a = set(sadfdsafsdfas)\n    Traceback (most recent call last):\n      File \"<stdin>\", line 1, in <module>\n    NameError: name 'sadfdsafsdfas' is not defined\n    >>> a = set('sadfdsafsdfas')\n    >>> b = set('sdlifjxz')\n    >>> a\n    {'d', 'a', 'f', 's'}\n    >>> b\n    {'z', 'd', 'l', 'f', 'x', 'j', 's', 'i'}\n    >>> b-a    #差\n    {'x', 'l', 'j', 'i', 'z'}\n    >>> a | b    #并\n    {'z', 'd', 'f', 'l', 'x', 'j', 'a', 's', 'i'}\n    >>> a & b    #交\n    {'d', 'f', 's'}\n    >>> a ^ b    #a和b中不同时存在的元素\n    {'z', 'l', 'x', 'j', 'a', 'i'}\n\n## Dictionaries（字典） ##\n这应该就是在C里用的`map`吧，一个映射类型。其中的key必须是不可变类型，`list`和`tuple`就不行了。\n基本操作：添删改查\n\n    >>> dic = {} #空字典\n    >>> dic\n    {}\n    >>> dics = {'tom':1,'jerry':10,'cat':11}\n    >>> dics\n    {'jerry': 10, 'cat': 11, 'tom': 1}\n    >>> dics['tom'] #查\n    1\n    >>> dics['toms'] #查空\n    Traceback (most recent call last):\n      File \"<stdin>\", line 1, in <module>\n    KeyError: 'toms'\n    >>> del dics['tom'] #删\n    >>> dics\n    {'jerry': 10, 'cat': 11}\n    >>> dics['mouse'] = 100 #添\n    >>> dics\n    {'mouse': 100, 'jerry': 10, 'cat': 11}\n    >>> dics['mouse'] = 101 #改\n    >>> dics\n    {'mouse': 101, 'jerry': 10, 'cat': 11}\n进阶操作：\n\n    >>> list (dics.keys()) #返回所有key组成的list\n    ['mouse', 'jerry', 'cat']\n    >>> list (dics.values()) #返回所有value组成的list\n    [101, 10, 11]\n    >>> sorted (dics.keys()) #按key排序\n    ['cat', 'jerry', 'mouse']\n    >>> 'cat' in dics #成员测试?\n    True\n    >>> 'cats' in dics #成员测试?\n    False\n奇葩的构造方式，从sequence中构建\n\n    >>> dict([('sape', 4139), ('guido', 4127), ('jack', 4098)])\n    {'jack': 4098, 'sape': 4139, 'guido': 4127}\n    >>> {x: x**2 for x in (2, 4, 6)}\n    {2: 4, 4: 16, 6: 36}\n    >>> dict(sape=4139, guido=4127, jack=4098)\n    {'jack': 4098, 'sape': 4139, 'guido': 4127}\n\n","source":"_posts/14.md","raw":"title: 初学python（二）数据类型\ncategories: 编程与算法\ndate: 2015-08-25 08:34:52\ntags: [python]\n---\n据说python里有6个标准的数据类型：\n\n - Numbers（数字）\n - String（字符串）\n - List（列表） \n - Tuple（元组） \n - Sets（集合）\n - Dictionaries（字典）\n\n\n<!--more-->\n\n## Numbers（数字） ##\npython3 支持int、float、bool、complex\n还可以通过一个叫`type()`的函数来输出类型，自己测试了一下\n\n    Python 3.4.0 (default, Apr 11 2014, 13:05:18) \n    [GCC 4.8.2] on linux\n    Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n    >>> a,b,c,d = 10,2.5,True,4+3j\n    >>> print(type(a),type(b),type(c),type(d))\n    <class 'int'> <class 'float'> <class 'bool'> <class 'complex'>\n    >>> \n还有运算：\n\n    >>> 1 + 1 #加\n    2\n    >>> 1 - 1 #减\n    0\n    >>> 1 × 1 #乘\n      File \"<stdin>\", line 1\n        1 × 1 #乘\n          ^\n    SyntaxError: invalid character in identifier\n    >>> 1 * 1 #乘\n    1\n    >>> 3 / 2 #浮点数除\n    1.5\n    >>> 3 // 2 #整除\n    1\n    >>> 3 % 2 #取模\n    1\n    >>> 2 ** 4 #幂\n    16\n    >>> pow(2,4) #幂\n    16\n## String（字符串） ##\n这个没什么好说的，上一节感觉熟练了一下。\n可以用`*`来重复字符串，用`+`来拼接字符串，用`string[index]`来取字符，或者用`string[-index]`来倒着取字符。和ruby一样一样的。\n还有字符串分割`string[index_x:index_y]`\n但是不能通`过string[index] = x`进行赋值，因为字符串是不可改变的。\n## List（列表） ##\n先说列表的赋值吧，一个列表中可以扔进任何一个类型的数据，不用在意类型。例如\n\n    >>> a = ['him', 25, 100, 'her']\n    >>> print(a)\n    ['him', 25, 100, 'her']\n它还支持拼接、修改、分割操作，\n\n    >>> a = [1, 2, 3, 4, 5]\n    >>> a + [6, 7, 8]\n    [1, 2, 3, 4, 5, 6, 7, 8]\n    >>> a = [1, 2, 3, 4, 5, 6]\n    >>> a[0] = 9\n    >>> a[2:5] = [13, 14, 15]\n    >>> a\n    [9, 2, 13, 14, 15, 6]\n    >>> a[2:5] = []   # 删除\n    >>> a\n    [9, 2, 6]\n## （元组） ##\n元组（tuple）与列表类似，不同之处在于元组的元素不能修改。元组写在小括号里，元素之间用逗号隔开。\n例如：\n\n    >>> a = (1991, 2014, 'physics', 'math')\n    >>> print(a, type(a), len(a))\n    (1991, 2014, 'physics', 'math') <class 'tuple'> 4\n元组与字符串类似，可以被索引且下标索引从0开始，也可以进行截取/切片（看上面，这里不再赘述）。\n其实，可以把字符串看作一种特殊的元组。\n\n    >>> tup = (1, 2, 3, 4, 5, 6)\n    >>> print(tup[0], tup[1:5])\n    1 (2, 3, 4, 5)\n    >>> tup[0] = 11  # 修改元组元素的操作是非法的\n\n虽然tuple的元素不可改变，但它可以包含可变的对象，比如list列表。\n构造包含0个或1个元素的tuple是个特殊的问题，所以有一些额外的语法规则：\n\n    tup1 = () # 空元组\n    tup2 = (20,) # 一个元素，需要在元素后添加逗号\n\n另外，元组也支持用+操作符：\n\n    >>> tup1, tup2 = (1, 2, 3), (4, 5, 6)\n    >>> print(tup1+tup2)\n    (1, 2, 3, 4, 5, 6)\n## Sets（集合） ##\n集合（set）是一个无序不重复元素的集。\n好熟悉的结构，哈哈哈。\n基本功能是进行成员关系测试和消除重复元素。\n可以使用大括号 或者 set()函数创建set集合，注意：创建一个空集合必须用 set() 而不是 { }，因为{ }是用来创建一个空字典。\n下面来个例子吧：\n\n    >>> set_text = {'item0','item1','item2','item3','item4','item5','item6'}\n    >>> print(set_text)\n    {'item1', 'item4', 'item3', 'item2', 'item6', 'item5', 'item0'}\n    >>> #果然是无序的\n    ... \n    >>> 'item3' in set_text #成员测试?\n    True\n    >>> 'item7' in set_text #成员测试?\n    False\n    >>> #据说还可以进行集合运算\n    ... \n    >>> a = set(sadfdsafsdfas)\n    Traceback (most recent call last):\n      File \"<stdin>\", line 1, in <module>\n    NameError: name 'sadfdsafsdfas' is not defined\n    >>> a = set('sadfdsafsdfas')\n    >>> b = set('sdlifjxz')\n    >>> a\n    {'d', 'a', 'f', 's'}\n    >>> b\n    {'z', 'd', 'l', 'f', 'x', 'j', 's', 'i'}\n    >>> b-a    #差\n    {'x', 'l', 'j', 'i', 'z'}\n    >>> a | b    #并\n    {'z', 'd', 'f', 'l', 'x', 'j', 'a', 's', 'i'}\n    >>> a & b    #交\n    {'d', 'f', 's'}\n    >>> a ^ b    #a和b中不同时存在的元素\n    {'z', 'l', 'x', 'j', 'a', 'i'}\n\n## Dictionaries（字典） ##\n这应该就是在C里用的`map`吧，一个映射类型。其中的key必须是不可变类型，`list`和`tuple`就不行了。\n基本操作：添删改查\n\n    >>> dic = {} #空字典\n    >>> dic\n    {}\n    >>> dics = {'tom':1,'jerry':10,'cat':11}\n    >>> dics\n    {'jerry': 10, 'cat': 11, 'tom': 1}\n    >>> dics['tom'] #查\n    1\n    >>> dics['toms'] #查空\n    Traceback (most recent call last):\n      File \"<stdin>\", line 1, in <module>\n    KeyError: 'toms'\n    >>> del dics['tom'] #删\n    >>> dics\n    {'jerry': 10, 'cat': 11}\n    >>> dics['mouse'] = 100 #添\n    >>> dics\n    {'mouse': 100, 'jerry': 10, 'cat': 11}\n    >>> dics['mouse'] = 101 #改\n    >>> dics\n    {'mouse': 101, 'jerry': 10, 'cat': 11}\n进阶操作：\n\n    >>> list (dics.keys()) #返回所有key组成的list\n    ['mouse', 'jerry', 'cat']\n    >>> list (dics.values()) #返回所有value组成的list\n    [101, 10, 11]\n    >>> sorted (dics.keys()) #按key排序\n    ['cat', 'jerry', 'mouse']\n    >>> 'cat' in dics #成员测试?\n    True\n    >>> 'cats' in dics #成员测试?\n    False\n奇葩的构造方式，从sequence中构建\n\n    >>> dict([('sape', 4139), ('guido', 4127), ('jack', 4098)])\n    {'jack': 4098, 'sape': 4139, 'guido': 4127}\n    >>> {x: x**2 for x in (2, 4, 6)}\n    {2: 4, 4: 16, 6: 36}\n    >>> dict(sape=4139, guido=4127, jack=4098)\n    {'jack': 4098, 'sape': 4139, 'guido': 4127}\n\n","slug":"14","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekikt005kro5utfbsrqty"},{"title":"Qt中实现将float类型转换为QString类型","date":"2015-08-25T00:34:04.000Z","_content":"原帖地址：http://blog.csdn.net/leo115/article/details/7757118\n\n在使用Qt Creator编程时，难免会用到将float类型转换为QString类型的时候下面是我所有的方法：\n1. 将QString类型转化为float类型，很简单\n\n    QString data;            \n    float num = data.toFloat();\n    即可很轻松的实现。\n2. 但是如何将float类型转化为QString类型呢？\n    查看API很难发现封装好的转化函数\n    可以尝试使用下面的代码转化：\n    float num = 1.222;\n    QString data = QString(\"float is %1\").arg(num);\n    输出结果是：float is 1.222\n    如果只要float转化成的数值，则使用如下：\n    QString data = QString(\"%1\").arg(num);\n\n至此完毕。。。。。。。。。。。。。。。。","source":"_posts/13.md","raw":"title: Qt中实现将float类型转换为QString类型\ncategories: 编程与算法\ndate: 2015-08-25 08:34:04\ntags: [QT,VS]\n---\n原帖地址：http://blog.csdn.net/leo115/article/details/7757118\n\n在使用Qt Creator编程时，难免会用到将float类型转换为QString类型的时候下面是我所有的方法：\n1. 将QString类型转化为float类型，很简单\n\n    QString data;            \n    float num = data.toFloat();\n    即可很轻松的实现。\n2. 但是如何将float类型转化为QString类型呢？\n    查看API很难发现封装好的转化函数\n    可以尝试使用下面的代码转化：\n    float num = 1.222;\n    QString data = QString(\"float is %1\").arg(num);\n    输出结果是：float is 1.222\n    如果只要float转化成的数值，则使用如下：\n    QString data = QString(\"%1\").arg(num);\n\n至此完毕。。。。。。。。。。。。。。。。","slug":"13","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekikw005nro5u8f3voyzh"},{"title":"osgi luna 版本依赖问题","date":"2015-08-25T00:33:16.000Z","_content":"最新版的eclipse luna 对于osgi的依赖异常麻烦，为了运行jetty需要添加一下依赖的bundle\n就在这做个总结吧，方便参考，\n\n\n<!--more-->\n\n\n    id  State       Bundle  \n    0   ACTIVE      org.eclipse.osgi_3.10.1.v20140909-1633  \n    1   ACTIVE      org.apache.commons.logging_1.1.1.v201101211721  \n    2   ACTIVE      org.apache.felix.gogo.runtime_0.10.0.v201209301036  \n    3   ACTIVE      org.eclipse.equinox.http.jetty_3.0.200.v20131021-1843  \n    4   ACTIVE      org.eclipse.equinox.console_1.1.0.v20140131-1639  \n    5   ACTIVE      org.apache.felix.gogo.shell_0.10.0.v201212101605  \n    6   ACTIVE      javax.servlet_3.0.0.v201112011016  \n    7   ACTIVE      org.apache.commons.logging_1.0.4.v201101211617  \n    8   ACTIVE      org.eclipse.equinox.http.servlet_1.1.500.v20140318-1755  \n    9   ACTIVE      org.eclipse.osgi.services_3.4.0.v20140312-2051  \n    10  ACTIVE      org.eclipse.jetty.http_8.1.14.v20131031  \n    11  ACTIVE      org.eclipse.jetty.io_8.1.14.v20131031  \n    12  ACTIVE      org.eclipse.jetty.util_8.1.14.v20131031  \n    13  ACTIVE      org.eclipse.jetty.server_8.1.14.v20131031  \n    14  ACTIVE      org.eclipse.jetty.continuation_8.1.14.v20131031  \n    15  ACTIVE      org.eclipse.jetty.servlet_8.1.14.v20131031  \n    16  ACTIVE      org.eclipse.jetty.security_8.1.14.v20131031  \n    17  ACTIVE      org.eclipse.jetty.webapp_8.1.3.v20120522  \n    18  ACTIVE      org.eclipse.jetty.xml_8.1.3.v20120522  \n同时如果是linux下，访问80端口需要权限所以在Run Configurations 中运行配置里面的 Arguments 页签,在 VM arguments 中添加`-Dorg.osgi.service.http.port=8080`\n这样就可以运行了，一般同一版本的osgi不会出现版本问题，就是不用修改版本依赖","source":"_posts/12.md","raw":"title: osgi luna 版本依赖问题\ncategories: 编程与算法\ndate: 2015-08-25 08:33:16\ntags: [osgi]\n---\n最新版的eclipse luna 对于osgi的依赖异常麻烦，为了运行jetty需要添加一下依赖的bundle\n就在这做个总结吧，方便参考，\n\n\n<!--more-->\n\n\n    id  State       Bundle  \n    0   ACTIVE      org.eclipse.osgi_3.10.1.v20140909-1633  \n    1   ACTIVE      org.apache.commons.logging_1.1.1.v201101211721  \n    2   ACTIVE      org.apache.felix.gogo.runtime_0.10.0.v201209301036  \n    3   ACTIVE      org.eclipse.equinox.http.jetty_3.0.200.v20131021-1843  \n    4   ACTIVE      org.eclipse.equinox.console_1.1.0.v20140131-1639  \n    5   ACTIVE      org.apache.felix.gogo.shell_0.10.0.v201212101605  \n    6   ACTIVE      javax.servlet_3.0.0.v201112011016  \n    7   ACTIVE      org.apache.commons.logging_1.0.4.v201101211617  \n    8   ACTIVE      org.eclipse.equinox.http.servlet_1.1.500.v20140318-1755  \n    9   ACTIVE      org.eclipse.osgi.services_3.4.0.v20140312-2051  \n    10  ACTIVE      org.eclipse.jetty.http_8.1.14.v20131031  \n    11  ACTIVE      org.eclipse.jetty.io_8.1.14.v20131031  \n    12  ACTIVE      org.eclipse.jetty.util_8.1.14.v20131031  \n    13  ACTIVE      org.eclipse.jetty.server_8.1.14.v20131031  \n    14  ACTIVE      org.eclipse.jetty.continuation_8.1.14.v20131031  \n    15  ACTIVE      org.eclipse.jetty.servlet_8.1.14.v20131031  \n    16  ACTIVE      org.eclipse.jetty.security_8.1.14.v20131031  \n    17  ACTIVE      org.eclipse.jetty.webapp_8.1.3.v20120522  \n    18  ACTIVE      org.eclipse.jetty.xml_8.1.3.v20120522  \n同时如果是linux下，访问80端口需要权限所以在Run Configurations 中运行配置里面的 Arguments 页签,在 VM arguments 中添加`-Dorg.osgi.service.http.port=8080`\n这样就可以运行了，一般同一版本的osgi不会出现版本问题，就是不用修改版本依赖","slug":"12","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekil2005tro5u29qo24z0"},{"title":"codeforces content#260 D A Lot of Games","date":"2015-08-25T00:29:53.000Z","_content":"D. A Lot of Games\ntime limit per test 1 second\nmemory limit per test 256 megabytes\ninput standard input\noutput standard output\n\nInput\nThe first line contains two integers, n and k (1≤n≤105; 1≤k≤109).\nEach of the next n lines contains a single non-empty string from the given group. The total length of all strings from the group doesn't exceed 105. Each string of the group consists only of lowercase English letters.\nOutput\nIf the player who moves first wins, print \"First\", otherwise print \"Second\" (without the quotes).\nSample test(s)\ninput\n\n    2 3\n    a\n    b\n\noutput\n\n    First\n\ninput\n\n    3 1\n    a\n    b\n    c\n\noutput\n\n    First\n\ninput\n\n    1 2\n    ab\n\noutput\n\n    Second\n\n\n<!--more-->\n\n\n----------\n题目大意：有两个人在玩一个游戏。首先输入n个字符串，然后这两个人就在一个空的字符串中填字母，填字母的规则是：保证添加字母后的字符串为n个字符串中某个字符串的前缀。二人每次轮流填一个字母，直到某人无法填入字母来满足规则。这个人就输了。然后开始下一局游戏。下一局的先手为上一局输的人。求在第k局的时候，是先手赢还是后手赢（这里说的先手为第一局的先手）。\n若先手赢则输出\"First\"否则输出\"Second\"\n\n在这里，对于先手（这里的先手为本局的先手）来说有四种情况，先手必输、先手必赢、先手可以控制自己的输赢、先手不可控自己的输赢（由后手控制）。\n\n我们用(xx)来表示这四种情况，第一位表示是否可以赢，第二位表示是否可以输。\n\n(01) 对于先手必输，那么下一局他还是先手(因为上一局他输了),然后一直输到k局，先手还是输，则输出\"Second\"。\n(10) 对于先手必赢，那么下一局他为后手，再下一局他又为先手，根据奇偶判断，当为奇数的时候先手赢，为偶数的时候后手赢。\n(11) 对于先手可控输赢，那么他可以使自己前k-1局都输，最后一局赢。\n(00) 对于先手不可控，那么对手可以让他前k-1局一直赢，最后一局输。\n  接下来就要开始思考，怎样来判断这四种情况。\n我们知道，当游戏结束的条件是，无法再往字符串中添加字母，也就是说，这个字符串已经和某个字符串相等了。因为是依次添加，所以只要知道这个字符串的长度的奇偶，就可以判断出先手的输赢。但是前缀可能不止一个串，例如：\nabcde abcedf\n这两个串，当填到abc的时候，就会发生分支，因为两个串的长度差1,所以会造成输赢的差异。当下一个填d的时候，先手赢，但是当c后面填e的时候，后手赢。所以本局游戏的胜负掌握在填第四个字母的人手里，4为偶，所以是后手掌握了输赢，所以用我们的数字表示即为(00)先手不可控输赢。但如果两个字符串的长度一样则会产生(10)或(01)的情况，因为不管选哪个，长度是一样的。\n所以我们需要保存每一次(xx)的情况。\n----------\n\n首先建立一颗字典树。数据结构如下\n\n    struct Trie;  \n    typedef struct Trie *PTrie;  \n    struct Trie{  \n        int info;   //字典值(0~25)  \n        int num;    //下节点数量  \n        PTrie next[M];  //下节点数;  \n        int aut;    //裁决人-下次选择的人  \n        //int val;  //返回值 (00 均不可控、01 输可控 10 赢可控 11 输赢均可控)  \n        Trie(int x, int y){  \n            info = x;  \n            num = 0;  \n            aut = y;  \n            for(int i=0;i<26;i++){  \n                next[i] = NULL;  \n            }  \n        }  \n    };  \n\n这不是一颗正常的字典树，info 值 在本程序里没有用上，不过不影响大局，只是内存多一点。\n首先根据叶子节点的aut值，来判断(xx)为多少，若aut == 1 那么 val = 2 (10)，若 aut == 0 那么 val = 1 (01) 。\n然后沿着字典树向上回溯，若他的上一个节点只有一个分支，那么就不需要判断，继续进行回溯，直到遇到有多个分支的节点。\n当如到有多个分支的节点，每个分支都有一个val值，如果这个节点的裁决人(aut)是先手，那么他便用有这些分支的所有情况，所以用'或'运算来统计该节点的val值，即 val |= next[i]->val\n同理，当该节点的裁决人是后手，那么，先手就无法控制这些情况，但是下属分支的val都一样，那么后手同样无法控制，则代表后手在这个节点的选择权无效，那么先手仍然有控制权，所以为了保证所有的情况都是一样的，进行与运算 val &= next[i]->val\n说的有点不清楚，自己举个例子就明白了。例如：abcde abcee 后手是有选择权的，但是结果最后还是(01)。\n基本上的思路有了，那么就进行回溯的操作。\n\n    int solo(PTrie pt){  \n        if(pt->num == 0){  \n            return pt->aut+1;    //1(01)为输,2(10)为赢  \n        }  \n        int i,va;  \n        if(pt->aut){  \n            va = 3;  \n            for(i=0;i<26;i++){  \n                if(pt->next[i]!=NULL){  \n                    va &= solo(pt->next[i]);  \n                }  \n            }  \n        }else{  \n            va = 0;  \n            for(i=0;i<26;i++){  \n                if(pt->next[i]!=NULL){  \n                    va |= solo(pt->next[i]);  \n                }  \n            }  \n        }  \n        return va;  \n    }  \n\n\n获得最后返回的va  然后根据va的值 转换成二进制 进行判断。\n\n    int x = solo(pt);  \n        //cout<<\"val = \"<<x<<endl;  \n        if(x == 1){  \n            cout<<\"Second\"<<endl;  \n        }else if(x == 3){  \n            cout<<\"First\"<<endl;  \n        }else if(x == 0){  \n            cout<<\"Second\"<<endl;  \n        }else if(k%2){  \n            cout<<\"First\"<<endl;  \n        }else{  \n            cout<<\"Second\"<<endl;  \n        }  \n\n最后贴完整代码，提示：内存可以优化，时间可以降低。因为这个递归进行了许多不必要的操作。\n因为不会用二维数组形式的字典树，只能用数据结构来写了\n\n    ///Time     Memory  \n    ///46 ms    12220 KB  \n    ///codeforces content#260 D A Lot of Games  \n      \n    #include <iostream>  \n    #include <string>  \n    using namespace std;  \n    const int M = 26;  \n    struct Trie;  \n    typedef struct Trie *PTrie;  \n    struct Trie{  \n        int info;   //字典值(0~25)  \n        int num;    //下节点数量  \n        PTrie next[M];  //下节点数;  \n        int aut;    //裁决人-下次选择的人  \n        int val;    //返回值 (00 均不可控一般不存在、01 输可控 10 赢可控 11 输赢均可控)  \n        Trie(int x, int y){  \n            info = x;  \n            num = 0;  \n            aut = y;  \n            for(int i=0;i<26;i++){  \n                next[i] = NULL;  \n            }  \n        }  \n    };  \n    int toi(char c){  \n            return c-'a';  \n    }  \n    PTrie new_t(int num,int aut){  \n        PTrie pt = new Trie(num,aut);  \n    }  \n    void insert(string s,PTrie pt){  \n        int n = s.length();  \n        int i,c;  \n        for(i=0;i<n;i++){  \n            c = toi(s[i]);  \n            if(pt->next[c]!=NULL){  \n                pt = pt->next[c];  \n                continue;  \n            }else{  \n                pt->next[c] = new Trie(c,(i+1)%2);  \n                pt->num++;  \n                pt = pt->next[c];  \n            }  \n        }  \n    }  \n    void output(PTrie pt){  \n        if(pt == NULL)return;  \n        cout<<\"==========\"<<endl;  \n        cout<<\"info= \"<<pt->info<<endl;  \n        cout<<\"num = \"<<pt->num<<endl;  \n        cout<<\"auto= \"<<pt->aut<<endl;  \n        if(pt->num == 0)return;  \n        int i;  \n        for(i=0;i<26;i++){  \n            if(pt->next[i]!=NULL)output(pt->next[i]);  \n        }  \n    }  \n    int solo(PTrie pt){  \n        if(pt->num == 0){  \n            return pt->aut+1;    //1(01)为输,2(10)为赢  \n        }  \n        int i,va;  \n        if(pt->aut){  \n            va = 3;  \n            for(i=0;i<26;i++){  \n                if(pt->next[i]!=NULL){  \n                    va &= solo(pt->next[i]);  \n                }  \n            }  \n        }else{  \n            va = 0;  \n            for(i=0;i<26;i++){  \n                if(pt->next[i]!=NULL){  \n                    va |= solo(pt->next[i]);  \n                }  \n            }  \n        }  \n        return va;  \n    }  \n    void test(){  \n        int y = 3&2;  \n        cout<<\"11&10 = \"<<y<<endl;  \n        y = 2|1;  \n        cout<<\"10|01 = \"<<y<<endl;  \n    }  \n    int main(){  \n        int n;  \n        long k;  \n        cin>>n>>k;  \n        string s;  \n        PTrie pt = new Trie(-1,0);  \n        for (int i = 0; i < n; ++i)  \n        {  \n            cin>>s;  \n            insert(s,pt);  \n        }  \n        //output(pt);  \n        int x = solo(pt);  \n        //cout<<\"val = \"<<x<<endl;  \n        if(x == 1){  \n            cout<<\"Second\"<<endl;  \n        }else if(x == 3){  \n            cout<<\"First\"<<endl;  \n        }else if(x == 0){  \n            cout<<\"Second\"<<endl;  \n        }else if(k%2){  \n            cout<<\"First\"<<endl;  \n        }else{  \n            cout<<\"Second\"<<endl;  \n        }  \n        return 0;  \n    }  \n\n","source":"_posts/11.md","raw":"title: codeforces content#260 D A Lot of Games\ncategories: 编程与算法\ndate: 2015-08-25 08:29:53\ntags: [codeforces,cf,trie]\n---\nD. A Lot of Games\ntime limit per test 1 second\nmemory limit per test 256 megabytes\ninput standard input\noutput standard output\n\nInput\nThe first line contains two integers, n and k (1≤n≤105; 1≤k≤109).\nEach of the next n lines contains a single non-empty string from the given group. The total length of all strings from the group doesn't exceed 105. Each string of the group consists only of lowercase English letters.\nOutput\nIf the player who moves first wins, print \"First\", otherwise print \"Second\" (without the quotes).\nSample test(s)\ninput\n\n    2 3\n    a\n    b\n\noutput\n\n    First\n\ninput\n\n    3 1\n    a\n    b\n    c\n\noutput\n\n    First\n\ninput\n\n    1 2\n    ab\n\noutput\n\n    Second\n\n\n<!--more-->\n\n\n----------\n题目大意：有两个人在玩一个游戏。首先输入n个字符串，然后这两个人就在一个空的字符串中填字母，填字母的规则是：保证添加字母后的字符串为n个字符串中某个字符串的前缀。二人每次轮流填一个字母，直到某人无法填入字母来满足规则。这个人就输了。然后开始下一局游戏。下一局的先手为上一局输的人。求在第k局的时候，是先手赢还是后手赢（这里说的先手为第一局的先手）。\n若先手赢则输出\"First\"否则输出\"Second\"\n\n在这里，对于先手（这里的先手为本局的先手）来说有四种情况，先手必输、先手必赢、先手可以控制自己的输赢、先手不可控自己的输赢（由后手控制）。\n\n我们用(xx)来表示这四种情况，第一位表示是否可以赢，第二位表示是否可以输。\n\n(01) 对于先手必输，那么下一局他还是先手(因为上一局他输了),然后一直输到k局，先手还是输，则输出\"Second\"。\n(10) 对于先手必赢，那么下一局他为后手，再下一局他又为先手，根据奇偶判断，当为奇数的时候先手赢，为偶数的时候后手赢。\n(11) 对于先手可控输赢，那么他可以使自己前k-1局都输，最后一局赢。\n(00) 对于先手不可控，那么对手可以让他前k-1局一直赢，最后一局输。\n  接下来就要开始思考，怎样来判断这四种情况。\n我们知道，当游戏结束的条件是，无法再往字符串中添加字母，也就是说，这个字符串已经和某个字符串相等了。因为是依次添加，所以只要知道这个字符串的长度的奇偶，就可以判断出先手的输赢。但是前缀可能不止一个串，例如：\nabcde abcedf\n这两个串，当填到abc的时候，就会发生分支，因为两个串的长度差1,所以会造成输赢的差异。当下一个填d的时候，先手赢，但是当c后面填e的时候，后手赢。所以本局游戏的胜负掌握在填第四个字母的人手里，4为偶，所以是后手掌握了输赢，所以用我们的数字表示即为(00)先手不可控输赢。但如果两个字符串的长度一样则会产生(10)或(01)的情况，因为不管选哪个，长度是一样的。\n所以我们需要保存每一次(xx)的情况。\n----------\n\n首先建立一颗字典树。数据结构如下\n\n    struct Trie;  \n    typedef struct Trie *PTrie;  \n    struct Trie{  \n        int info;   //字典值(0~25)  \n        int num;    //下节点数量  \n        PTrie next[M];  //下节点数;  \n        int aut;    //裁决人-下次选择的人  \n        //int val;  //返回值 (00 均不可控、01 输可控 10 赢可控 11 输赢均可控)  \n        Trie(int x, int y){  \n            info = x;  \n            num = 0;  \n            aut = y;  \n            for(int i=0;i<26;i++){  \n                next[i] = NULL;  \n            }  \n        }  \n    };  \n\n这不是一颗正常的字典树，info 值 在本程序里没有用上，不过不影响大局，只是内存多一点。\n首先根据叶子节点的aut值，来判断(xx)为多少，若aut == 1 那么 val = 2 (10)，若 aut == 0 那么 val = 1 (01) 。\n然后沿着字典树向上回溯，若他的上一个节点只有一个分支，那么就不需要判断，继续进行回溯，直到遇到有多个分支的节点。\n当如到有多个分支的节点，每个分支都有一个val值，如果这个节点的裁决人(aut)是先手，那么他便用有这些分支的所有情况，所以用'或'运算来统计该节点的val值，即 val |= next[i]->val\n同理，当该节点的裁决人是后手，那么，先手就无法控制这些情况，但是下属分支的val都一样，那么后手同样无法控制，则代表后手在这个节点的选择权无效，那么先手仍然有控制权，所以为了保证所有的情况都是一样的，进行与运算 val &= next[i]->val\n说的有点不清楚，自己举个例子就明白了。例如：abcde abcee 后手是有选择权的，但是结果最后还是(01)。\n基本上的思路有了，那么就进行回溯的操作。\n\n    int solo(PTrie pt){  \n        if(pt->num == 0){  \n            return pt->aut+1;    //1(01)为输,2(10)为赢  \n        }  \n        int i,va;  \n        if(pt->aut){  \n            va = 3;  \n            for(i=0;i<26;i++){  \n                if(pt->next[i]!=NULL){  \n                    va &= solo(pt->next[i]);  \n                }  \n            }  \n        }else{  \n            va = 0;  \n            for(i=0;i<26;i++){  \n                if(pt->next[i]!=NULL){  \n                    va |= solo(pt->next[i]);  \n                }  \n            }  \n        }  \n        return va;  \n    }  \n\n\n获得最后返回的va  然后根据va的值 转换成二进制 进行判断。\n\n    int x = solo(pt);  \n        //cout<<\"val = \"<<x<<endl;  \n        if(x == 1){  \n            cout<<\"Second\"<<endl;  \n        }else if(x == 3){  \n            cout<<\"First\"<<endl;  \n        }else if(x == 0){  \n            cout<<\"Second\"<<endl;  \n        }else if(k%2){  \n            cout<<\"First\"<<endl;  \n        }else{  \n            cout<<\"Second\"<<endl;  \n        }  \n\n最后贴完整代码，提示：内存可以优化，时间可以降低。因为这个递归进行了许多不必要的操作。\n因为不会用二维数组形式的字典树，只能用数据结构来写了\n\n    ///Time     Memory  \n    ///46 ms    12220 KB  \n    ///codeforces content#260 D A Lot of Games  \n      \n    #include <iostream>  \n    #include <string>  \n    using namespace std;  \n    const int M = 26;  \n    struct Trie;  \n    typedef struct Trie *PTrie;  \n    struct Trie{  \n        int info;   //字典值(0~25)  \n        int num;    //下节点数量  \n        PTrie next[M];  //下节点数;  \n        int aut;    //裁决人-下次选择的人  \n        int val;    //返回值 (00 均不可控一般不存在、01 输可控 10 赢可控 11 输赢均可控)  \n        Trie(int x, int y){  \n            info = x;  \n            num = 0;  \n            aut = y;  \n            for(int i=0;i<26;i++){  \n                next[i] = NULL;  \n            }  \n        }  \n    };  \n    int toi(char c){  \n            return c-'a';  \n    }  \n    PTrie new_t(int num,int aut){  \n        PTrie pt = new Trie(num,aut);  \n    }  \n    void insert(string s,PTrie pt){  \n        int n = s.length();  \n        int i,c;  \n        for(i=0;i<n;i++){  \n            c = toi(s[i]);  \n            if(pt->next[c]!=NULL){  \n                pt = pt->next[c];  \n                continue;  \n            }else{  \n                pt->next[c] = new Trie(c,(i+1)%2);  \n                pt->num++;  \n                pt = pt->next[c];  \n            }  \n        }  \n    }  \n    void output(PTrie pt){  \n        if(pt == NULL)return;  \n        cout<<\"==========\"<<endl;  \n        cout<<\"info= \"<<pt->info<<endl;  \n        cout<<\"num = \"<<pt->num<<endl;  \n        cout<<\"auto= \"<<pt->aut<<endl;  \n        if(pt->num == 0)return;  \n        int i;  \n        for(i=0;i<26;i++){  \n            if(pt->next[i]!=NULL)output(pt->next[i]);  \n        }  \n    }  \n    int solo(PTrie pt){  \n        if(pt->num == 0){  \n            return pt->aut+1;    //1(01)为输,2(10)为赢  \n        }  \n        int i,va;  \n        if(pt->aut){  \n            va = 3;  \n            for(i=0;i<26;i++){  \n                if(pt->next[i]!=NULL){  \n                    va &= solo(pt->next[i]);  \n                }  \n            }  \n        }else{  \n            va = 0;  \n            for(i=0;i<26;i++){  \n                if(pt->next[i]!=NULL){  \n                    va |= solo(pt->next[i]);  \n                }  \n            }  \n        }  \n        return va;  \n    }  \n    void test(){  \n        int y = 3&2;  \n        cout<<\"11&10 = \"<<y<<endl;  \n        y = 2|1;  \n        cout<<\"10|01 = \"<<y<<endl;  \n    }  \n    int main(){  \n        int n;  \n        long k;  \n        cin>>n>>k;  \n        string s;  \n        PTrie pt = new Trie(-1,0);  \n        for (int i = 0; i < n; ++i)  \n        {  \n            cin>>s;  \n            insert(s,pt);  \n        }  \n        //output(pt);  \n        int x = solo(pt);  \n        //cout<<\"val = \"<<x<<endl;  \n        if(x == 1){  \n            cout<<\"Second\"<<endl;  \n        }else if(x == 3){  \n            cout<<\"First\"<<endl;  \n        }else if(x == 0){  \n            cout<<\"Second\"<<endl;  \n        }else if(k%2){  \n            cout<<\"First\"<<endl;  \n        }else{  \n            cout<<\"Second\"<<endl;  \n        }  \n        return 0;  \n    }  \n\n","slug":"11","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekil5005xro5um6qhwj0l"},{"title":"Trie树 hihoCoder","date":"2015-08-25T00:28:52.000Z","_content":"时间限制:10000ms\n单点时限:1000ms\n内存限制:256MB\n描述\n小Hi和小Ho是一对好朋友，出生在信息化社会的他们对编程产生了莫大的兴趣，他们约定好互相帮助，在编程的学习道路上一同前进。\n\n这一天，他们遇到了一本词典，于是小Hi就向小Ho提出了那个经典的问题：“小Ho，你能不能对于每一个我给出的字符串，都在这个词典里面找到以这个字符串开头的所有单词呢？”\n\n身经百战的小Ho答道：“怎么会不能呢！你每给我一个字符串，我就依次遍历词典里的所有单词，检查你给我的字符串是不是这个单词的前缀不就是了？”\n\n小Hi笑道：“你啊，还是太年轻了！~假设这本词典里有10万个单词，我询问你一万次，你得要算到哪年哪月去？”\n\n小Ho低头算了一算，看着那一堆堆的0，顿时感觉自己这辈子都要花在上面了...\n\n小Hi看着小Ho的囧样，也是继续笑道：“让我来提高一下你的知识水平吧~你知道树这样一种数据结构么？”\n\n小Ho想了想，说道：“知道~它是一种基础的数据结构，就像这里说的一样！”\n\n小Hi满意的点了点头，说道：“那你知道我怎么样用一棵树来表示整个词典么？”\n\n小Ho摇摇头表示自己不清楚。\n\n“你看，我们现在得到了这样一棵树，那么你看，如果我给你一个字符串ap，你要怎么找到所有以ap开头的单词呢？”小Hi又开始考校小Ho。\n\n“唔...一个个遍历所有的单词？”小Ho还是不忘自己最开始提出来的算法。\n\n“笨！这棵树难道就白构建了！”小Hi教训完小Ho，继续道：“看好了！”\n\n“那么现在！赶紧去用代码实现吧！”小Hi如是说道\n\n\n<!--more-->\n\n\n输入\n输入的第一行为一个正整数n，表示词典的大小，其后n行，每一行一个单词（不保证是英文单词，也有可能是火星文单词哦），单词由不超过10个的小写英文字母组成，可能存在相同的单词，此时应将其视作不同的单词。接下来的一行为一个正整数m，表示小Hi询问的次数，其后m行，每一行一个字符串，该字符串由不超过10个的小写英文字母组成，表示小Hi的一个询问。\n\n在20%的数据中n, m<=10，词典的字母表大小<=2.\n\n在60%的数据中n, m<=1000，词典的字母表大小<=5.\n\n在100%的数据中n, m<=100000，词典的字母表大小<=26.\n\n输出\n对于小Hi的每一个询问，输出一个整数Ans,表示词典中以小Hi给出的字符串为前缀的单词的个数。\n\n样例输入\n```\n5\nbabaab\nbabbbaaaa\nabba\naaaaabaa\nbabaababb\n5\nbabb\nbaabaaa\nbab\nbb\nbbabbaab\n```\n样例输出\n```\n1\n0\n3\n0\n0\n```\n\n\n----------\n建立一个自定义结构体\n```cpp\nstruct Tree;  \ntypedef struct Tree *PTree;   \nstruct Tree{  \n        char let;   //该结构体代表低字母  \n        int count;//经过该结点的单词数  \n        PTree next[MAX];//指向子结构  \n};  \n```\nlet貌似没有用上 不过没有关系 \n执行find函数后 查找到最后一个字母然后返回该结点低count即为结果\n```cpp\n#include <iostream>  \n#include <string>  \nusing namespace std;  \nconst int MAX=26;  \nstruct Tree;  \ntypedef struct Tree *PTree;   \nstruct Tree{  \n        char let;  \n        int count;  \n        PTree next[MAX];  \n};  \nPTree root[MAX];  \nvoid init(){  \n    for(int i=0;i<MAX;i++){  \n            root[i] = new Tree();  \n            root[i]->let = i+'a';  \n            root[i]->count = 0;  \n            for(int j=0;j<MAX;j++){  \n                    root[i]->next[j] = NULL;  \n            }  \n    }  \n      \n    }  \nvoid linkTree(PTree par,char let ){  \n        PTree t = new Tree();  \n        int n = let-'a';  \n        t->let = let;  \n        t->count = 0;  \n        for(int i=0;i<MAX;i++){  \n                t->next[i] = NULL;  \n        }  \n        par->next[n] = t;  \n}  \nvoid buildTree(string str){  \n        int n = str.length();  \n        int st = str[0]-'a';  \n        PTree p = root[st];  \n        p->count++;  \n        for(int i=1;i<n;i++){  \n                int num = str[i] - 'a';  \n                if(p->next[num] == NULL){  \n                        linkTree(p,str[i]);  \n                }  \n                p = p->next[num];  \n                p->count++;  \n        }  \n}  \nint find(string str){  \n        int n = str.length();  \n        int st = str[0]-'a';  \n        if(root[st] == NULL)return 0;  \n        PTree p = root[st];  \n        for(int i=1;i<n;i++){  \n                int x = str[i]-'a';  \n                if(p->next[x]!=NULL){  \n                        p = p->next[x];  \n                }else{  \n                        return 0;  \n                }  \n              \n        }  \n        return p->count;  \n}  \nint main(){  \n        int i,n;  \n        string s;  \n        init();  \n        cin>>n;  \n        for(i=0;i<n;i++){  \n            cin>>s;  \n            buildTree(s);  \n        }  \n        cin>>n;  \n        for(i=0;i<n;i++){  \n            cin>>s;  \n            cout<<find(s)<<endl;  \n        }  \n        return 0;  \n}  \n```","source":"_posts/10.md","raw":"title: Trie树 hihoCoder\ncategories: 编程与算法\ndate: 2015-08-25 08:28:52\ntags: [trie,acm,hihocoder]\n---\n时间限制:10000ms\n单点时限:1000ms\n内存限制:256MB\n描述\n小Hi和小Ho是一对好朋友，出生在信息化社会的他们对编程产生了莫大的兴趣，他们约定好互相帮助，在编程的学习道路上一同前进。\n\n这一天，他们遇到了一本词典，于是小Hi就向小Ho提出了那个经典的问题：“小Ho，你能不能对于每一个我给出的字符串，都在这个词典里面找到以这个字符串开头的所有单词呢？”\n\n身经百战的小Ho答道：“怎么会不能呢！你每给我一个字符串，我就依次遍历词典里的所有单词，检查你给我的字符串是不是这个单词的前缀不就是了？”\n\n小Hi笑道：“你啊，还是太年轻了！~假设这本词典里有10万个单词，我询问你一万次，你得要算到哪年哪月去？”\n\n小Ho低头算了一算，看着那一堆堆的0，顿时感觉自己这辈子都要花在上面了...\n\n小Hi看着小Ho的囧样，也是继续笑道：“让我来提高一下你的知识水平吧~你知道树这样一种数据结构么？”\n\n小Ho想了想，说道：“知道~它是一种基础的数据结构，就像这里说的一样！”\n\n小Hi满意的点了点头，说道：“那你知道我怎么样用一棵树来表示整个词典么？”\n\n小Ho摇摇头表示自己不清楚。\n\n“你看，我们现在得到了这样一棵树，那么你看，如果我给你一个字符串ap，你要怎么找到所有以ap开头的单词呢？”小Hi又开始考校小Ho。\n\n“唔...一个个遍历所有的单词？”小Ho还是不忘自己最开始提出来的算法。\n\n“笨！这棵树难道就白构建了！”小Hi教训完小Ho，继续道：“看好了！”\n\n“那么现在！赶紧去用代码实现吧！”小Hi如是说道\n\n\n<!--more-->\n\n\n输入\n输入的第一行为一个正整数n，表示词典的大小，其后n行，每一行一个单词（不保证是英文单词，也有可能是火星文单词哦），单词由不超过10个的小写英文字母组成，可能存在相同的单词，此时应将其视作不同的单词。接下来的一行为一个正整数m，表示小Hi询问的次数，其后m行，每一行一个字符串，该字符串由不超过10个的小写英文字母组成，表示小Hi的一个询问。\n\n在20%的数据中n, m<=10，词典的字母表大小<=2.\n\n在60%的数据中n, m<=1000，词典的字母表大小<=5.\n\n在100%的数据中n, m<=100000，词典的字母表大小<=26.\n\n输出\n对于小Hi的每一个询问，输出一个整数Ans,表示词典中以小Hi给出的字符串为前缀的单词的个数。\n\n样例输入\n```\n5\nbabaab\nbabbbaaaa\nabba\naaaaabaa\nbabaababb\n5\nbabb\nbaabaaa\nbab\nbb\nbbabbaab\n```\n样例输出\n```\n1\n0\n3\n0\n0\n```\n\n\n----------\n建立一个自定义结构体\n```cpp\nstruct Tree;  \ntypedef struct Tree *PTree;   \nstruct Tree{  \n        char let;   //该结构体代表低字母  \n        int count;//经过该结点的单词数  \n        PTree next[MAX];//指向子结构  \n};  \n```\nlet貌似没有用上 不过没有关系 \n执行find函数后 查找到最后一个字母然后返回该结点低count即为结果\n```cpp\n#include <iostream>  \n#include <string>  \nusing namespace std;  \nconst int MAX=26;  \nstruct Tree;  \ntypedef struct Tree *PTree;   \nstruct Tree{  \n        char let;  \n        int count;  \n        PTree next[MAX];  \n};  \nPTree root[MAX];  \nvoid init(){  \n    for(int i=0;i<MAX;i++){  \n            root[i] = new Tree();  \n            root[i]->let = i+'a';  \n            root[i]->count = 0;  \n            for(int j=0;j<MAX;j++){  \n                    root[i]->next[j] = NULL;  \n            }  \n    }  \n      \n    }  \nvoid linkTree(PTree par,char let ){  \n        PTree t = new Tree();  \n        int n = let-'a';  \n        t->let = let;  \n        t->count = 0;  \n        for(int i=0;i<MAX;i++){  \n                t->next[i] = NULL;  \n        }  \n        par->next[n] = t;  \n}  \nvoid buildTree(string str){  \n        int n = str.length();  \n        int st = str[0]-'a';  \n        PTree p = root[st];  \n        p->count++;  \n        for(int i=1;i<n;i++){  \n                int num = str[i] - 'a';  \n                if(p->next[num] == NULL){  \n                        linkTree(p,str[i]);  \n                }  \n                p = p->next[num];  \n                p->count++;  \n        }  \n}  \nint find(string str){  \n        int n = str.length();  \n        int st = str[0]-'a';  \n        if(root[st] == NULL)return 0;  \n        PTree p = root[st];  \n        for(int i=1;i<n;i++){  \n                int x = str[i]-'a';  \n                if(p->next[x]!=NULL){  \n                        p = p->next[x];  \n                }else{  \n                        return 0;  \n                }  \n              \n        }  \n        return p->count;  \n}  \nint main(){  \n        int i,n;  \n        string s;  \n        init();  \n        cin>>n;  \n        for(i=0;i<n;i++){  \n            cin>>s;  \n            buildTree(s);  \n        }  \n        cin>>n;  \n        for(i=0;i<n;i++){  \n            cin>>s;  \n            cout<<find(s)<<endl;  \n        }  \n        return 0;  \n}  \n```","slug":"10","published":1,"updated":"2016-01-08T08:09:31.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cij5ekilb0065ro5uezd45jdl"}],"PostAsset":[],"PostCategory":[{"post_id":"cij5ekig40000ro5uitdu96an","category_id":"cij5ekig80001ro5u44mf5ixi","_id":"cij5ekiga0004ro5urju4js7p"},{"post_id":"cij5ekih70007ro5u49p8x24z","category_id":"cij5ekig80001ro5u44mf5ixi","_id":"cij5ekih90008ro5ubjrbqsb0"},{"post_id":"cij5ekihc000dro5u1bwm68br","category_id":"cij5ekihc000ero5uah7qnzfh","_id":"cij5ekihd000hro5u1ypchy4s"},{"post_id":"cij5ekihf000kro5uxteq65id","category_id":"cij5ekig80001ro5u44mf5ixi","_id":"cij5ekihg000lro5u5prsxini"},{"post_id":"cij5ekihi000pro5uq0ex281s","category_id":"cij5ekihc000ero5uah7qnzfh","_id":"cij5ekihj000qro5uj5cdjst1"},{"post_id":"cij5ekihm000uro5ua97972vl","category_id":"cij5ekihc000ero5uah7qnzfh","_id":"cij5ekihn000vro5ucof83078"},{"post_id":"cij5ekihs0011ro5uhtijs99s","category_id":"cij5ekig80001ro5u44mf5ixi","_id":"cij5ekiht0012ro5ubj0hy4nb"},{"post_id":"cij5ekihw001bro5ua8k9l9lw","category_id":"cij5ekihc000ero5uah7qnzfh","_id":"cij5ekihx001cro5um870vlnt"},{"post_id":"cij5ekihz001iro5uvjcmz4y0","category_id":"cij5ekig80001ro5u44mf5ixi","_id":"cij5ekii1001jro5ubm4j5dgs"},{"post_id":"cij5ekii3001pro5udy9kzl1s","category_id":"cij5ekihc000ero5uah7qnzfh","_id":"cij5ekii5001qro5unspwpc2a"},{"post_id":"cij5ekii7001uro5u97s3a0ox","category_id":"cij5ekig80001ro5u44mf5ixi","_id":"cij5ekii8001vro5uxvnmse5j"},{"post_id":"cij5ekii9001yro5uq6u0zhaw","category_id":"cij5ekihc000ero5uah7qnzfh","_id":"cij5ekiia001zro5uukcv57by"},{"post_id":"cij5ekiid0025ro5un2bopz5l","category_id":"cij5ekig80001ro5u44mf5ixi","_id":"cij5ekiig0026ro5uhpgq7l3b"},{"post_id":"cij5ekiih0029ro5ul2rlcwn0","category_id":"cij5ekig80001ro5u44mf5ixi","_id":"cij5ekiij002aro5ut5oue15c"},{"post_id":"cij5ekiim002dro5uiakgzmjh","category_id":"cij5ekiin002ero5u0w0accun","_id":"cij5ekiin002hro5uvr0p6xkc"},{"post_id":"cij5ekiip002iro5uqxpdr1aa","category_id":"cij5ekihc000ero5uah7qnzfh","_id":"cij5ekiip002jro5u4fj9kpi9"},{"post_id":"cij5ekiit002pro5ucf020wo0","category_id":"cij5ekig80001ro5u44mf5ixi","_id":"cij5ekiiu002qro5ufmyqjpth"},{"post_id":"cij5ekiiz002zro5uij7qrtrv","category_id":"cij5ekig80001ro5u44mf5ixi","_id":"cij5ekij00030ro5uxqd5i68v"},{"post_id":"cij5ekij20036ro5uhq09o0mk","category_id":"cij5ekig80001ro5u44mf5ixi","_id":"cij5ekij30037ro5utdpsk9nr"},{"post_id":"cij5ekij6003dro5utssszpub","category_id":"cij5ekig80001ro5u44mf5ixi","_id":"cij5ekij8003ero5uody7lqr2"},{"post_id":"cij5ekija003kro5ujvfxjk3q","category_id":"cij5ekig80001ro5u44mf5ixi","_id":"cij5ekijb003lro5u289zx6er"},{"post_id":"cij5ekijf003qro5uro3am6ji","category_id":"cij5ekig80001ro5u44mf5ixi","_id":"cij5ekijg003rro5ueufiass5"},{"post_id":"cij5ekiji003vro5ujd3clxch","category_id":"cij5ekihc000ero5uah7qnzfh","_id":"cij5ekijj003wro5u4xx4edre"},{"post_id":"cij5ekijl0043ro5uvwjj1782","category_id":"cij5ekiin002ero5u0w0accun","_id":"cij5ekijm0044ro5ukk482nky"},{"post_id":"cij5ekijo0049ro5ubjzi7yl9","category_id":"cij5ekihc000ero5uah7qnzfh","_id":"cij5ekijp004aro5uwckdywig"},{"post_id":"cij5ekijr004gro5u817as7uh","category_id":"cij5ekig80001ro5u44mf5ixi","_id":"cij5ekijs004hro5uq5x8by5m"},{"post_id":"cij5ekiju004kro5uov3q40ex","category_id":"cij5ekig80001ro5u44mf5ixi","_id":"cij5ekijv004lro5uquzw6imb"},{"post_id":"cij5ekijx004oro5u1fvjsdlp","category_id":"cij5ekig80001ro5u44mf5ixi","_id":"cij5ekijy004pro5uo9l0uv1n"},{"post_id":"cij5ekik0004rro5ukbjvcp62","category_id":"cij5ekig80001ro5u44mf5ixi","_id":"cij5ekik1004sro5u25ycxye5"},{"post_id":"cij5ekik2004uro5u4pz8phg1","category_id":"cij5ekig80001ro5u44mf5ixi","_id":"cij5ekik3004vro5u0eztzkrv"},{"post_id":"cij5ekik5004xro5ulpapnqh7","category_id":"cij5ekig80001ro5u44mf5ixi","_id":"cij5ekik5004yro5u6l4bijje"},{"post_id":"cij5ekik70050ro5u0srv9evs","category_id":"cij5ekig80001ro5u44mf5ixi","_id":"cij5ekik80051ro5uh0j2mhzb"},{"post_id":"cij5ekikd0055ro5uapaq7jpa","category_id":"cij5ekig80001ro5u44mf5ixi","_id":"cij5ekikf0056ro5umumi3hz4"},{"post_id":"cij5ekikh0058ro5us3gxvq0a","category_id":"cij5ekig80001ro5u44mf5ixi","_id":"cij5ekiki0059ro5ukhr7i3k9"},{"post_id":"cij5ekikk005bro5u0vqq695d","category_id":"cij5ekig80001ro5u44mf5ixi","_id":"cij5ekikl005cro5uchb5lua5"},{"post_id":"cij5ekikn005ero5uwl3ugvsk","category_id":"cij5ekig80001ro5u44mf5ixi","_id":"cij5ekikp005fro5uvx7xe4ou"},{"post_id":"cij5ekikq005hro5u9xa9co3o","category_id":"cij5ekig80001ro5u44mf5ixi","_id":"cij5ekikr005iro5u79r19fot"},{"post_id":"cij5ekikt005kro5utfbsrqty","category_id":"cij5ekig80001ro5u44mf5ixi","_id":"cij5ekiku005lro5uh5p24dtn"},{"post_id":"cij5ekikw005nro5u8f3voyzh","category_id":"cij5ekig80001ro5u44mf5ixi","_id":"cij5ekiky005oro5uralto0ld"},{"post_id":"cij5ekil2005tro5u29qo24z0","category_id":"cij5ekig80001ro5u44mf5ixi","_id":"cij5ekil3005uro5uakub0a4d"},{"post_id":"cij5ekil5005xro5um6qhwj0l","category_id":"cij5ekig80001ro5u44mf5ixi","_id":"cij5ekil7005yro5umljz2s77"},{"post_id":"cij5ekilb0065ro5uezd45jdl","category_id":"cij5ekig80001ro5u44mf5ixi","_id":"cij5ekild0066ro5uxtdkx7km"}],"PostTag":[{"post_id":"cij5ekig40000ro5uitdu96an","tag_id":"cij5ekig90002ro5uifk3zm27","_id":"cij5ekigb0005ro5uuv760zqc"},{"post_id":"cij5ekig40000ro5uitdu96an","tag_id":"cij5ekiga0003ro5uc0xjuozc","_id":"cij5ekigb0006ro5ug2m6w029"},{"post_id":"cij5ekih70007ro5u49p8x24z","tag_id":"cij5ekih90009ro5utxh0r8vw","_id":"cij5ekiha000bro5uee7v3l7i"},{"post_id":"cij5ekih70007ro5u49p8x24z","tag_id":"cij5ekiha000aro5ul52t6dr7","_id":"cij5ekiha000cro5u3ypp954f"},{"post_id":"cij5ekihc000dro5u1bwm68br","tag_id":"cij5ekihc000fro5um1kc9chs","_id":"cij5ekihe000iro5upgl4rxtk"},{"post_id":"cij5ekihc000dro5u1bwm68br","tag_id":"cij5ekihd000gro5ucb0bootu","_id":"cij5ekihe000jro5uvcgwam2z"},{"post_id":"cij5ekihf000kro5uxteq65id","tag_id":"cij5ekihg000mro5uqc8riyv3","_id":"cij5ekihh000nro5ul2r3cnd2"},{"post_id":"cij5ekihf000kro5uxteq65id","tag_id":"cij5ekih90009ro5utxh0r8vw","_id":"cij5ekihh000oro5u1hxoekz2"},{"post_id":"cij5ekihi000pro5uq0ex281s","tag_id":"cij5ekihc000fro5um1kc9chs","_id":"cij5ekihk000sro5uh09lg6rw"},{"post_id":"cij5ekihi000pro5uq0ex281s","tag_id":"cij5ekihj000rro5ut3swjbhm","_id":"cij5ekihk000tro5uueukjv5w"},{"post_id":"cij5ekihm000uro5ua97972vl","tag_id":"cij5ekihc000fro5um1kc9chs","_id":"cij5ekiho000yro5uvt16nqlb"},{"post_id":"cij5ekihm000uro5ua97972vl","tag_id":"cij5ekihn000wro5u4iddjfj7","_id":"cij5ekihp000zro5u7o1wb5z4"},{"post_id":"cij5ekihm000uro5ua97972vl","tag_id":"cij5ekiho000xro5uaukabmqa","_id":"cij5ekihq0010ro5umigxmhax"},{"post_id":"cij5ekihs0011ro5uhtijs99s","tag_id":"cij5ekiht0013ro5umb4uds31","_id":"cij5ekihv0017ro5ucbinhdjq"},{"post_id":"cij5ekihs0011ro5uhtijs99s","tag_id":"cij5ekihu0014ro5ugaafiq3f","_id":"cij5ekihv0018ro5uu1unkzd3"},{"post_id":"cij5ekihs0011ro5uhtijs99s","tag_id":"cij5ekihu0015ro5um6bhzwe3","_id":"cij5ekihv0019ro5uma6dwb2j"},{"post_id":"cij5ekihs0011ro5uhtijs99s","tag_id":"cij5ekihu0016ro5urpfimwtp","_id":"cij5ekihv001aro5u1x6jlltz"},{"post_id":"cij5ekihw001bro5ua8k9l9lw","tag_id":"cij5ekihc000fro5um1kc9chs","_id":"cij5ekihy001fro5u0ex4lv7j"},{"post_id":"cij5ekihw001bro5ua8k9l9lw","tag_id":"cij5ekihx001dro5uwj770195","_id":"cij5ekihy001gro5uqknw591z"},{"post_id":"cij5ekihw001bro5ua8k9l9lw","tag_id":"cij5ekihy001ero5u6uwn9758","_id":"cij5ekihy001hro5u9v0mlxg4"},{"post_id":"cij5ekihz001iro5uvjcmz4y0","tag_id":"cij5ekii1001kro5ujm57uq53","_id":"cij5ekii2001lro5ud9m2sjyb"},{"post_id":"cij5ekihz001iro5uvjcmz4y0","tag_id":"cij5ekiht0013ro5umb4uds31","_id":"cij5ekii2001mro5ux3rn5vls"},{"post_id":"cij5ekihz001iro5uvjcmz4y0","tag_id":"cij5ekihu0014ro5ugaafiq3f","_id":"cij5ekii2001nro5u94ecqgyl"},{"post_id":"cij5ekihz001iro5uvjcmz4y0","tag_id":"cij5ekihu0015ro5um6bhzwe3","_id":"cij5ekii2001oro5ulr17bf4q"},{"post_id":"cij5ekii3001pro5udy9kzl1s","tag_id":"cij5ekii5001rro5uevch7x2x","_id":"cij5ekii5001sro5uahkdk41q"},{"post_id":"cij5ekii3001pro5udy9kzl1s","tag_id":"cij5ekihc000fro5um1kc9chs","_id":"cij5ekii5001tro5u5q166bzt"},{"post_id":"cij5ekii7001uro5u97s3a0ox","tag_id":"cij5ekihu0014ro5ugaafiq3f","_id":"cij5ekii8001wro5u5f7kdhus"},{"post_id":"cij5ekii7001uro5u97s3a0ox","tag_id":"cij5ekihu0015ro5um6bhzwe3","_id":"cij5ekii8001xro5ul5x2i3d4"},{"post_id":"cij5ekii9001yro5uq6u0zhaw","tag_id":"cij5ekihc000fro5um1kc9chs","_id":"cij5ekiib0022ro5u84j49zfx"},{"post_id":"cij5ekii9001yro5uq6u0zhaw","tag_id":"cij5ekiib0020ro5u1p4sbs2o","_id":"cij5ekiic0023ro5u0nncuq9z"},{"post_id":"cij5ekii9001yro5uq6u0zhaw","tag_id":"cij5ekiib0021ro5uay8770fg","_id":"cij5ekiic0024ro5uvc8g1g8w"},{"post_id":"cij5ekiid0025ro5un2bopz5l","tag_id":"cij5ekiht0013ro5umb4uds31","_id":"cij5ekiig0027ro5uhh46w4si"},{"post_id":"cij5ekiid0025ro5un2bopz5l","tag_id":"cij5ekihu0015ro5um6bhzwe3","_id":"cij5ekiig0028ro5u1p5raw2y"},{"post_id":"cij5ekiih0029ro5ul2rlcwn0","tag_id":"cij5ekii1001kro5ujm57uq53","_id":"cij5ekiik002bro5uu111hx8b"},{"post_id":"cij5ekiih0029ro5ul2rlcwn0","tag_id":"cij5ekihu0015ro5um6bhzwe3","_id":"cij5ekiik002cro5u6xjwulw9"},{"post_id":"cij5ekiim002dro5uiakgzmjh","tag_id":"cij5ekiin002fro5u7ac69xkq","_id":"cij5ekiin002gro5ulcrf8611"},{"post_id":"cij5ekiip002iro5uqxpdr1aa","tag_id":"cij5ekihc000fro5um1kc9chs","_id":"cij5ekiiq002mro5umehq97i9"},{"post_id":"cij5ekiip002iro5uqxpdr1aa","tag_id":"cij5ekiiq002kro5urwv5l8ds","_id":"cij5ekiir002nro5uafznoiln"},{"post_id":"cij5ekiip002iro5uqxpdr1aa","tag_id":"cij5ekiiq002lro5uz94u570q","_id":"cij5ekiir002oro5u52lykjfl"},{"post_id":"cij5ekiit002pro5ucf020wo0","tag_id":"cij5ekiiu002rro5uijwtid4o","_id":"cij5ekiiv002vro5u4cowp2zw"},{"post_id":"cij5ekiit002pro5ucf020wo0","tag_id":"cij5ekiiu002sro5ug2dh8gvw","_id":"cij5ekiiv002wro5up7vj0c8m"},{"post_id":"cij5ekiit002pro5ucf020wo0","tag_id":"cij5ekiiv002tro5uwy9hcsft","_id":"cij5ekiiv002xro5ulolk112x"},{"post_id":"cij5ekiit002pro5ucf020wo0","tag_id":"cij5ekiiv002uro5udfg0z64p","_id":"cij5ekiiv002yro5ur4nrmija"},{"post_id":"cij5ekiiz002zro5uij7qrtrv","tag_id":"cij5ekiiu002rro5uijwtid4o","_id":"cij5ekij10032ro5uc41zixfr"},{"post_id":"cij5ekiiz002zro5uij7qrtrv","tag_id":"cij5ekiiu002sro5ug2dh8gvw","_id":"cij5ekij10033ro5u8ig1yq3g"},{"post_id":"cij5ekiiz002zro5uij7qrtrv","tag_id":"cij5ekiiv002tro5uwy9hcsft","_id":"cij5ekij10034ro5ugvfk8dz4"},{"post_id":"cij5ekiiz002zro5uij7qrtrv","tag_id":"cij5ekij00031ro5u1mk8gjd8","_id":"cij5ekij10035ro5ua6qfgp9n"},{"post_id":"cij5ekij20036ro5uhq09o0mk","tag_id":"cij5ekiiu002rro5uijwtid4o","_id":"cij5ekij40039ro5ukic59r65"},{"post_id":"cij5ekij20036ro5uhq09o0mk","tag_id":"cij5ekiiu002sro5ug2dh8gvw","_id":"cij5ekij4003aro5ukd9fizpg"},{"post_id":"cij5ekij20036ro5uhq09o0mk","tag_id":"cij5ekiiv002tro5uwy9hcsft","_id":"cij5ekij4003bro5uy36c6mcf"},{"post_id":"cij5ekij20036ro5uhq09o0mk","tag_id":"cij5ekij40038ro5u54zektgj","_id":"cij5ekij4003cro5ufu8q4nqk"},{"post_id":"cij5ekij6003dro5utssszpub","tag_id":"cij5ekiiu002rro5uijwtid4o","_id":"cij5ekij9003gro5u8wazjg67"},{"post_id":"cij5ekij6003dro5utssszpub","tag_id":"cij5ekiiu002sro5ug2dh8gvw","_id":"cij5ekij9003hro5u9a03lw6n"},{"post_id":"cij5ekij6003dro5utssszpub","tag_id":"cij5ekiiv002tro5uwy9hcsft","_id":"cij5ekij9003iro5u5zetz9k3"},{"post_id":"cij5ekij6003dro5utssszpub","tag_id":"cij5ekij8003fro5uwquhgg04","_id":"cij5ekij9003jro5uo7gtv83l"},{"post_id":"cij5ekija003kro5ujvfxjk3q","tag_id":"cij5ekijc003mro5uo4ppxitb","_id":"cij5ekije003oro5uc8a48paz"},{"post_id":"cij5ekija003kro5ujvfxjk3q","tag_id":"cij5ekijd003nro5ubawzvon2","_id":"cij5ekije003pro5unxa5p0cp"},{"post_id":"cij5ekijf003qro5uro3am6ji","tag_id":"cij5ekiiu002rro5uijwtid4o","_id":"cij5ekijg003sro5ukdlkhg98"},{"post_id":"cij5ekijf003qro5uro3am6ji","tag_id":"cij5ekiiu002sro5ug2dh8gvw","_id":"cij5ekijg003tro5uazhwny3g"},{"post_id":"cij5ekijf003qro5uro3am6ji","tag_id":"cij5ekiiv002tro5uwy9hcsft","_id":"cij5ekijg003uro5uq4vfg92j"},{"post_id":"cij5ekiji003vro5ujd3clxch","tag_id":"cij5ekijj003xro5ugsih0o5c","_id":"cij5ekijk0040ro5ut1hl6gj4"},{"post_id":"cij5ekiji003vro5ujd3clxch","tag_id":"cij5ekijj003yro5u5lvtw27p","_id":"cij5ekijk0041ro5u7tze1699"},{"post_id":"cij5ekiji003vro5ujd3clxch","tag_id":"cij5ekijk003zro5u7xgw5x5i","_id":"cij5ekijk0042ro5u521nnhg0"},{"post_id":"cij5ekijl0043ro5uvwjj1782","tag_id":"cij5ekijm0045ro5uaojenwfy","_id":"cij5ekijn0047ro5u5aj3rdoo"},{"post_id":"cij5ekijl0043ro5uvwjj1782","tag_id":"cij5ekijn0046ro5uxgz8yojj","_id":"cij5ekijn0048ro5uhywimzy2"},{"post_id":"cij5ekijo0049ro5ubjzi7yl9","tag_id":"cij5ekihx001dro5uwj770195","_id":"cij5ekijq004dro5uogx5rupi"},{"post_id":"cij5ekijo0049ro5ubjzi7yl9","tag_id":"cij5ekijp004bro5uupbj7066","_id":"cij5ekijq004ero5ux9p90icl"},{"post_id":"cij5ekijo0049ro5ubjzi7yl9","tag_id":"cij5ekijq004cro5u3owxzf1b","_id":"cij5ekijq004fro5uykzsly2j"},{"post_id":"cij5ekijr004gro5u817as7uh","tag_id":"cij5ekijc003mro5uo4ppxitb","_id":"cij5ekijt004iro5u3c354v4j"},{"post_id":"cij5ekijr004gro5u817as7uh","tag_id":"cij5ekiho000xro5uaukabmqa","_id":"cij5ekijt004jro5udtblqrxc"},{"post_id":"cij5ekiju004kro5uov3q40ex","tag_id":"cij5ekijc003mro5uo4ppxitb","_id":"cij5ekijw004mro5u24e1q8j4"},{"post_id":"cij5ekiju004kro5uov3q40ex","tag_id":"cij5ekiho000xro5uaukabmqa","_id":"cij5ekijw004nro5ua6upptsm"},{"post_id":"cij5ekijx004oro5u1fvjsdlp","tag_id":"cij5ekijc003mro5uo4ppxitb","_id":"cij5ekijz004qro5ugixekgce"},{"post_id":"cij5ekik0004rro5ukbjvcp62","tag_id":"cij5ekijc003mro5uo4ppxitb","_id":"cij5ekik1004tro5ufsopxw1u"},{"post_id":"cij5ekik2004uro5u4pz8phg1","tag_id":"cij5ekijc003mro5uo4ppxitb","_id":"cij5ekik3004wro5uv0wossfz"},{"post_id":"cij5ekik5004xro5ulpapnqh7","tag_id":"cij5ekijc003mro5uo4ppxitb","_id":"cij5ekik6004zro5uwgjbgu72"},{"post_id":"cij5ekik70050ro5u0srv9evs","tag_id":"cij5ekiiu002sro5ug2dh8gvw","_id":"cij5ekik90053ro5uz99d9078"},{"post_id":"cij5ekik70050ro5u0srv9evs","tag_id":"cij5ekik80052ro5uk5g354em","_id":"cij5ekik90054ro5u5l4mqd8u"},{"post_id":"cij5ekikd0055ro5uapaq7jpa","tag_id":"cij5ekijc003mro5uo4ppxitb","_id":"cij5ekikf0057ro5uv77rwwyg"},{"post_id":"cij5ekikh0058ro5us3gxvq0a","tag_id":"cij5ekijc003mro5uo4ppxitb","_id":"cij5ekikj005aro5u2gd5sadx"},{"post_id":"cij5ekikk005bro5u0vqq695d","tag_id":"cij5ekijc003mro5uo4ppxitb","_id":"cij5ekikm005dro5u07dnw3kc"},{"post_id":"cij5ekikn005ero5uwl3ugvsk","tag_id":"cij5ekijc003mro5uo4ppxitb","_id":"cij5ekikp005gro5uezq88olv"},{"post_id":"cij5ekikq005hro5u9xa9co3o","tag_id":"cij5ekijc003mro5uo4ppxitb","_id":"cij5ekikr005jro5u5w2gwg1r"},{"post_id":"cij5ekikt005kro5utfbsrqty","tag_id":"cij5ekijc003mro5uo4ppxitb","_id":"cij5ekikv005mro5ug7gnkpwg"},{"post_id":"cij5ekikw005nro5u8f3voyzh","tag_id":"cij5ekikz005pro5um0dfj3hi","_id":"cij5ekil0005rro5uw3avjv9m"},{"post_id":"cij5ekikw005nro5u8f3voyzh","tag_id":"cij5ekil0005qro5uxp92w4zy","_id":"cij5ekil0005sro5ugikllqba"},{"post_id":"cij5ekil2005tro5u29qo24z0","tag_id":"cij5ekil3005vro5uxlyb943c","_id":"cij5ekil4005wro5uv0lc7bf3"},{"post_id":"cij5ekil5005xro5um6qhwj0l","tag_id":"cij5ekil8005zro5u506t8v65","_id":"cij5ekil90062ro5u5dqqmdyt"},{"post_id":"cij5ekil5005xro5um6qhwj0l","tag_id":"cij5ekil80060ro5uu5f3zfc6","_id":"cij5ekila0063ro5unqfc6ryo"},{"post_id":"cij5ekil5005xro5um6qhwj0l","tag_id":"cij5ekil90061ro5uozxjg0c3","_id":"cij5ekila0064ro5ujnb6wa4g"},{"post_id":"cij5ekilb0065ro5uezd45jdl","tag_id":"cij5ekil90061ro5uozxjg0c3","_id":"cij5ekile0068ro5ulwtkqvzm"},{"post_id":"cij5ekilb0065ro5uezd45jdl","tag_id":"cij5ekihg000mro5uqc8riyv3","_id":"cij5ekilf0069ro5ubwek7obx"},{"post_id":"cij5ekilb0065ro5uezd45jdl","tag_id":"cij5ekile0067ro5uvlfrs5vq","_id":"cij5ekilf006aro5ulyh7adko"}],"Tag":[{"name":"asm","_id":"cij5ekig90002ro5uifk3zm27"},{"name":"课后练习","_id":"cij5ekiga0003ro5uc0xjuozc"},{"name":"poj","_id":"cij5ekih90009ro5utxh0r8vw"},{"name":"uniun","_id":"cij5ekiha000aro5ul52t6dr7"},{"name":"ubuntu","_id":"cij5ekihc000fro5um1kc9chs"},{"name":"vpn","_id":"cij5ekihd000gro5ucb0bootu"},{"name":"acm","_id":"cij5ekihg000mro5uqc8riyv3"},{"name":"software","_id":"cij5ekihj000rro5ut3swjbhm"},{"name":"shadowsocks","_id":"cij5ekihn000wro5u4iddjfj7"},{"name":"ss","_id":"cij5ekiho000xro5uaukabmqa"},{"name":"spark","_id":"cij5ekiht0013ro5umb4uds31"},{"name":"tachyon","_id":"cij5ekihu0014ro5ugaafiq3f"},{"name":"大数据","_id":"cij5ekihu0015ro5um6bhzwe3"},{"name":"java","_id":"cij5ekihu0016ro5urpfimwtp"},{"name":"hexo","_id":"cij5ekihx001dro5uwj770195"},{"name":"nodejs","_id":"cij5ekihy001ero5u6uwn9758"},{"name":"hadoop","_id":"cij5ekii1001kro5ujm57uq53"},{"name":"Android","_id":"cij5ekii5001rro5uevch7x2x"},{"name":"dr.com","_id":"cij5ekiib0020ro5u1p4sbs2o"},{"name":"64位","_id":"cij5ekiib0021ro5uay8770fg"},{"name":"经纬度","_id":"cij5ekiin002fro5u7ac69xkq"},{"name":"virtualbox","_id":"cij5ekiiq002kro5urwv5l8ds"},{"name":"error","_id":"cij5ekiiq002lro5uz94u570q"},{"name":"最短路","_id":"cij5ekiiu002rro5uijwtid4o"},{"name":"ACM","_id":"cij5ekiiu002sro5ug2dh8gvw"},{"name":"图论","_id":"cij5ekiiv002tro5uwy9hcsft"},{"name":"spfa","_id":"cij5ekiiv002uro5udfg0z64p"},{"name":"bellman-ford","_id":"cij5ekij00031ro5u1mk8gjd8"},{"name":"dijkstra","_id":"cij5ekij40038ro5u54zektgj"},{"name":"floyd","_id":"cij5ekij8003fro5uwquhgg04"},{"name":"python","_id":"cij5ekijc003mro5uo4ppxitb"},{"name":"编程","_id":"cij5ekijd003nro5ubawzvon2"},{"name":"django","_id":"cij5ekijj003xro5ugsih0o5c"},{"name":"uwsgi","_id":"cij5ekijj003yro5u5lvtw27p"},{"name":"nginx","_id":"cij5ekijk003zro5u7xgw5x5i"},{"name":"innerac","_id":"cij5ekijm0045ro5uaojenwfy"},{"name":"aboutme","_id":"cij5ekijn0046ro5uxgz8yojj"},{"name":"github","_id":"cij5ekijp004bro5uupbj7066"},{"name":"blog","_id":"cij5ekijq004cro5u3owxzf1b"},{"name":"区域赛","_id":"cij5ekik80052ro5uk5g354em"},{"name":"QT","_id":"cij5ekikz005pro5um0dfj3hi"},{"name":"VS","_id":"cij5ekil0005qro5uxp92w4zy"},{"name":"osgi","_id":"cij5ekil3005vro5uxlyb943c"},{"name":"codeforces","_id":"cij5ekil8005zro5u506t8v65"},{"name":"cf","_id":"cij5ekil80060ro5uu5f3zfc6"},{"name":"trie","_id":"cij5ekil90061ro5uozxjg0c3"},{"name":"hihocoder","_id":"cij5ekile0067ro5uvlfrs5vq"}]}}